import { jsPDF } from "jspdf";

const Prescription = ({ symptoms, remedies, medications }) => {
  const generatePDF = () => {
    const doc = new jsPDF();

    // Header Section
    doc.setFontSize(16);
    doc.setFont("helvetica", "bold");
    doc.setTextColor(0, 102, 204); // Blue header color
    doc.text("AI Assisted Telemedicine Kiosk for Rural India", 10, 20);
    doc.setFontSize(14);
    doc.setFont("helvetica", "italic");
    doc.setTextColor(0, 0, 0); // Black text
    doc.text("Team Mediconnect", 10, 30);

    // Divider Line
    doc.setDrawColor(0, 102, 204); // Blue line
    doc.line(10, 35, 200, 35);

    let currentY = 45; // Starting y-coordinate for content

    // Symptoms Section
    doc.setFontSize(14);
    doc.setFont("helvetica", "bold");
    doc.setTextColor(0, 51, 102); // Dark blue for section headers
    doc.text("Symptoms:", 10, currentY);
    currentY += 10;
    doc.setFont("helvetica", "normal");
    doc.setTextColor(0, 0, 0); // Black text for content
    doc.text(`• ${symptoms || "No symptoms provided"}`, 10, currentY);
    currentY += 20;

    // Remedies Section
    doc.setFontSize(14);
    doc.setFont("helvetica", "bold");
    doc.setTextColor(0, 51, 102); // Dark blue for section headers
    doc.text("Suggested Remedies:", 10, currentY);
    currentY += 10;
    (remedies || []).forEach((remedy) => {
      doc.setFont("helvetica", "normal");
      doc.setTextColor(0, 0, 0); // Black text for content
      doc.text(`• ${remedy}`, 10, currentY);
      currentY += 10;
    });
    currentY += 10;

    // Medications Section
    doc.setFontSize(14);
    doc.setFont("helvetica", "bold");
    doc.setTextColor(0, 51, 102); // Dark blue for section headers
    doc.text("Suggested Medications:", 10, currentY);
    currentY += 10;

    // Check if medications are passed and valid
    if (medications && Array.isArray(medications) && medications.length > 0) {
      console.log("Medications are present:", medications);  // Debug log
      medications.forEach((medication) => {
        const medicationName = medication?.name || "Unknown Medication";
        const medicationDosage = medication?.dosage || "As directed";
        doc.setFont("helvetica", "normal");
        doc.setTextColor(0, 0, 0); // Black text for content
        doc.text(`• ${medicationName} - ${medicationDosage}`, 10, currentY);
        currentY += 10;
      });
    } else {
      doc.setFont("helvetica", "italic");
      doc.setFontSize(12); // Slightly smaller font size for the placeholder
      doc.setTextColor(120, 120, 120); // Light gray text for distinction
      doc.text("No medications provided.", 10, currentY);
    }

    // Footer Section
    doc.setDrawColor(0, 102, 204); // Blue footer line
    doc.line(10, 270, 200, 270);
    doc.setFontSize(12);
    doc.setFont("helvetica", "italic");
    doc.setTextColor(0, 0, 0);
    doc.text("Generated by Team MediConnect", 10, 280);

    // Save the PDF file
    doc.save(`Prescription.pdf`);
  };

  return (
    <div>
      <button onClick={generatePDF} className="generate-pdf-btn">
        <svg className="btn-icon" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
          <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
          <polyline points="7 10 12 15 17 10"></polyline>
          <line x1="12" y1="15" x2="12" y2="3"></line>
        </svg>
        Download
      </button>
    </div>
  );
};

// Custom button style
const buttonStyle = {
  backgroundColor: "#28a745",
  color: "white",
  border: "none",
  padding: "10px 20px",
  fontSize: "16px",
  cursor: "pointer",
  borderRadius: "5px",
  margin: "20px auto",
};

export default Prescription;
