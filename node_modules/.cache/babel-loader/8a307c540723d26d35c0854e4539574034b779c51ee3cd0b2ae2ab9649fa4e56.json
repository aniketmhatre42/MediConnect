{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movies\\\\Aniket\\\\test2\\\\test\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as faceapi from 'face-api.js';\nimport { signInUser, getUserData } from './firebase/authService';\nimport { loadFaceDescriptor } from './services/localFaceStorage';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // Login state\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginMethod, setLoginMethod] = useState('credentials'); // 'credentials' or 'face'\n\n  // Face authentication state\n  const [isCapturing, setIsCapturing] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [scanStatus, setScanStatus] = useState('');\n  const [matchProgress, setMatchProgress] = useState(0);\n  const videoRef = useRef(null);\n  const navigate = useNavigate();\n\n  // Load models when switching to face auth\n  useEffect(() => {\n    if (loginMethod === 'face' && !isCapturing) {\n      startFaceAuthentication();\n    }\n  }, [loginMethod]);\n  const handleCredentialLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      // Sign in with Firebase\n      const userData = await signInUser(email, password);\n\n      // Store authentication info in session\n      sessionStorage.setItem('authenticated', 'true');\n      sessionStorage.setItem('currentUser', JSON.stringify(userData));\n      navigate('/');\n    } catch (err) {\n      setError('Login failed: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const startFaceAuthentication = async () => {\n    setIsCapturing(true);\n    try {\n      setScanStatus('Loading face detection models...');\n      setLoading(true);\n      const MODEL_URL = 'https://justadudewhohacks.github.io/face-api.js/models';\n      await Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)]);\n      setScanStatus('Starting camera...');\n      startVideoStream();\n    } catch (err) {\n      setError('Error loading face detection models: ' + err.message);\n      setLoading(false);\n    }\n  };\n  const startVideoStream = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {}\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        videoRef.current.onloadedmetadata = () => {\n          videoRef.current.play().then(() => {\n            beginFaceMatching();\n          }).catch(err => {\n            setError('Error playing video: ' + err.message);\n            setLoading(false);\n          });\n        };\n      }\n    } catch (err) {\n      setError('Error accessing camera: ' + err.message);\n      setLoading(false);\n    }\n  };\n  const beginFaceMatching = async () => {\n    setScanStatus('Looking for registered faces...');\n    try {\n      // Get all users with face auth from Firebase\n      const users = await fetchUsersWithFaceAuth();\n      if (!users || users.length === 0) {\n        setScanStatus('No registered faces found. Please register or use email login.');\n        setLoading(false);\n        return;\n      }\n      startFaceDetectionLoop(users);\n    } catch (err) {\n      setError('Error fetching user data: ' + err.message);\n      setLoading(false);\n    }\n  };\n  const fetchUsersWithFaceAuth = async () => {\n    try {\n      // This is a simplified example. In a real app, you would query Firestore\n      // for users with hasFaceAuth=true, but for this implementation\n      // we'll rely on localStorage to know which users have face data\n\n      const faceUsers = JSON.parse(localStorage.getItem('face_descriptors') || '[]');\n\n      // Filter to those we can find in Firebase\n      const usersWithFace = [];\n      for (const faceUser of faceUsers) {\n        const userData = await getUserData(faceUser.userId);\n        if (userData && userData.hasFaceAuth) {\n          usersWithFace.push({\n            ...userData,\n            faceDataAvailable: true\n          });\n        }\n      }\n      return usersWithFace;\n    } catch (error) {\n      console.error('Error fetching users with face auth:', error);\n      return [];\n    }\n  };\n  const startFaceDetectionLoop = users => {\n    let matchAttempts = 0;\n    const maxAttempts = 30;\n    const detectFace = async () => {\n      if (!videoRef.current || matchAttempts >= maxAttempts) return;\n      try {\n        setScanStatus(`Scanning for matching face (${matchAttempts + 1}/${maxAttempts})...`);\n        setMatchProgress(matchAttempts / maxAttempts * 100);\n        const detection = await faceapi.detectSingleFace(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor();\n        if (detection) {\n          // Check against all users with face auth\n          for (const user of users) {\n            // Load face descriptor from local storage (cached from file)\n            const storedDescriptor = loadFaceDescriptor(user.userId);\n            if (storedDescriptor) {\n              const distance = faceapi.euclideanDistance(detection.descriptor, storedDescriptor);\n              console.log(`Match distance for user ${user.username}: ${distance}`);\n\n              // Threshold for face match (lower is better)\n              if (distance < 0.6) {\n                setIsAuthenticated(true);\n                setScanStatus(`Welcome back, ${user.username}!`);\n                setLoading(false);\n\n                // Sign in with Firebase silently (you'll need to implement this)\n                // For now just store user data in session\n                sessionStorage.setItem('authenticated', 'true');\n                sessionStorage.setItem('currentUser', JSON.stringify(user));\n                setTimeout(() => {\n                  stopVideoStream();\n                  navigate('/');\n                }, 1500);\n                return;\n              }\n            }\n          }\n        }\n        matchAttempts++;\n        if (matchAttempts >= maxAttempts) {\n          setScanStatus('Face not recognized. Please try again or use email login.');\n          setLoading(false);\n        } else {\n          requestAnimationFrame(detectFace);\n        }\n      } catch (err) {\n        setError('Error during face detection: ' + err.message);\n        setLoading(false);\n      }\n    };\n    detectFace();\n  };\n  const stopVideoStream = () => {\n    var _videoRef$current;\n    if ((_videoRef$current = videoRef.current) !== null && _videoRef$current !== void 0 && _videoRef$current.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-methods\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `method-btn ${loginMethod === 'credentials' ? 'active' : ''}`,\n          onClick: () => {\n            stopVideoStream();\n            setLoginMethod('credentials');\n            setIsCapturing(false);\n          },\n          children: \"Email & Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `method-btn ${loginMethod === 'face' ? 'active' : ''}`,\n          onClick: () => setLoginMethod('face'),\n          children: \"Face ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), loginMethod === 'credentials' ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCredentialLogin,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"Enter your email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Enter your password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-btn\",\n          disabled: loading,\n          children: loading ? 'Logging in...' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"face-auth-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            muted: true,\n            playsInline: true,\n            className: \"face-video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scanning-overlay\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scanning-animation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: scanStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                style: {\n                  width: `${matchProgress}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-success-overlay\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"success-checkmark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Authentication Successful!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"redirect-message\",\n              children: \"Redirecting...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"face-auth-instructions\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Position your face in front of the camera\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alternative-auth\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Don't have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"register-btn\",\n          onClick: () => navigate('/signup'),\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"5ePPxsK5SgnHCag/kt7FJuVJhpA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","faceapi","signInUser","getUserData","loadFaceDescriptor","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","loginMethod","setLoginMethod","isCapturing","setIsCapturing","loading","setLoading","error","setError","isAuthenticated","setIsAuthenticated","scanStatus","setScanStatus","matchProgress","setMatchProgress","videoRef","navigate","startFaceAuthentication","handleCredentialLogin","e","preventDefault","userData","sessionStorage","setItem","JSON","stringify","err","message","MODEL_URL","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","startVideoStream","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","onloadedmetadata","play","then","beginFaceMatching","catch","users","fetchUsersWithFaceAuth","length","startFaceDetectionLoop","faceUsers","parse","localStorage","getItem","usersWithFace","faceUser","userId","hasFaceAuth","push","faceDataAvailable","console","matchAttempts","maxAttempts","detectFace","detection","detectSingleFace","TinyFaceDetectorOptions","withFaceLandmarks","withFaceDescriptor","user","storedDescriptor","distance","euclideanDistance","descriptor","log","username","setTimeout","stopVideoStream","requestAnimationFrame","_videoRef$current","getTracks","forEach","track","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","id","type","value","onChange","target","placeholder","required","disabled","ref","autoPlay","muted","playsInline","style","width","_c","$RefreshReg$"],"sources":["D:/Movies/Aniket/test2/test/src/Login.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as faceapi from 'face-api.js';\r\nimport { signInUser, getUserData } from './firebase/authService';\r\nimport { loadFaceDescriptor } from './services/localFaceStorage';\r\nimport './Login.css';\r\n\r\nconst Login = () => {\r\n  // Login state\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loginMethod, setLoginMethod] = useState('credentials'); // 'credentials' or 'face'\r\n  \r\n  // Face authentication state\r\n  const [isCapturing, setIsCapturing] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [scanStatus, setScanStatus] = useState('');\r\n  const [matchProgress, setMatchProgress] = useState(0);\r\n  \r\n  const videoRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Load models when switching to face auth\r\n  useEffect(() => {\r\n    if (loginMethod === 'face' && !isCapturing) {\r\n      startFaceAuthentication();\r\n    }\r\n  }, [loginMethod]);\r\n\r\n  const handleCredentialLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // Sign in with Firebase\r\n      const userData = await signInUser(email, password);\r\n      \r\n      // Store authentication info in session\r\n      sessionStorage.setItem('authenticated', 'true');\r\n      sessionStorage.setItem('currentUser', JSON.stringify(userData));\r\n      \r\n      navigate('/');\r\n    } catch (err) {\r\n      setError('Login failed: ' + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const startFaceAuthentication = async () => {\r\n    setIsCapturing(true);\r\n    try {\r\n      setScanStatus('Loading face detection models...');\r\n      setLoading(true);\r\n      \r\n      const MODEL_URL = 'https://justadudewhohacks.github.io/face-api.js/models';\r\n      await Promise.all([\r\n        faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)\r\n      ]);\r\n      \r\n      setScanStatus('Starting camera...');\r\n      startVideoStream();\r\n    } catch (err) {\r\n      setError('Error loading face detection models: ' + err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const startVideoStream = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: {} });\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.onloadedmetadata = () => {\r\n          videoRef.current.play()\r\n            .then(() => {\r\n              beginFaceMatching();\r\n            })\r\n            .catch(err => {\r\n              setError('Error playing video: ' + err.message);\r\n              setLoading(false);\r\n            });\r\n        };\r\n      }\r\n    } catch (err) {\r\n      setError('Error accessing camera: ' + err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const beginFaceMatching = async () => {\r\n    setScanStatus('Looking for registered faces...');\r\n    \r\n    try {\r\n      // Get all users with face auth from Firebase\r\n      const users = await fetchUsersWithFaceAuth();\r\n      \r\n      if (!users || users.length === 0) {\r\n        setScanStatus('No registered faces found. Please register or use email login.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      startFaceDetectionLoop(users);\r\n    } catch (err) {\r\n      setError('Error fetching user data: ' + err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchUsersWithFaceAuth = async () => {\r\n    try {\r\n      // This is a simplified example. In a real app, you would query Firestore\r\n      // for users with hasFaceAuth=true, but for this implementation\r\n      // we'll rely on localStorage to know which users have face data\r\n      \r\n      const faceUsers = JSON.parse(localStorage.getItem('face_descriptors') || '[]');\r\n      \r\n      // Filter to those we can find in Firebase\r\n      const usersWithFace = [];\r\n      for (const faceUser of faceUsers) {\r\n        const userData = await getUserData(faceUser.userId);\r\n        if (userData && userData.hasFaceAuth) {\r\n          usersWithFace.push({\r\n            ...userData,\r\n            faceDataAvailable: true\r\n          });\r\n        }\r\n      }\r\n      \r\n      return usersWithFace;\r\n    } catch (error) {\r\n      console.error('Error fetching users with face auth:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const startFaceDetectionLoop = (users) => {\r\n    let matchAttempts = 0;\r\n    const maxAttempts = 30;\r\n    \r\n    const detectFace = async () => {\r\n      if (!videoRef.current || matchAttempts >= maxAttempts) return;\r\n      \r\n      try {\r\n        setScanStatus(`Scanning for matching face (${matchAttempts + 1}/${maxAttempts})...`);\r\n        setMatchProgress((matchAttempts / maxAttempts) * 100);\r\n        \r\n        const detection = await faceapi\r\n          .detectSingleFace(videoRef.current, new faceapi.TinyFaceDetectorOptions())\r\n          .withFaceLandmarks()\r\n          .withFaceDescriptor();\r\n\r\n        if (detection) {\r\n          // Check against all users with face auth\r\n          for (const user of users) {\r\n            // Load face descriptor from local storage (cached from file)\r\n            const storedDescriptor = loadFaceDescriptor(user.userId);\r\n            \r\n            if (storedDescriptor) {\r\n              const distance = faceapi.euclideanDistance(detection.descriptor, storedDescriptor);\r\n              console.log(`Match distance for user ${user.username}: ${distance}`);\r\n              \r\n              // Threshold for face match (lower is better)\r\n              if (distance < 0.6) {\r\n                setIsAuthenticated(true);\r\n                setScanStatus(`Welcome back, ${user.username}!`);\r\n                setLoading(false);\r\n                \r\n                // Sign in with Firebase silently (you'll need to implement this)\r\n                // For now just store user data in session\r\n                sessionStorage.setItem('authenticated', 'true');\r\n                sessionStorage.setItem('currentUser', JSON.stringify(user));\r\n                \r\n                setTimeout(() => {\r\n                  stopVideoStream();\r\n                  navigate('/');\r\n                }, 1500);\r\n                return;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        \r\n        matchAttempts++;\r\n        \r\n        if (matchAttempts >= maxAttempts) {\r\n          setScanStatus('Face not recognized. Please try again or use email login.');\r\n          setLoading(false);\r\n        } else {\r\n          requestAnimationFrame(detectFace);\r\n        }\r\n      } catch (err) {\r\n        setError('Error during face detection: ' + err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    detectFace();\r\n  };\r\n\r\n  const stopVideoStream = () => {\r\n    if (videoRef.current?.srcObject) {\r\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-card\">\r\n        <h2>Login</h2>\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        \r\n        <div className=\"login-methods\">\r\n          <button \r\n            className={`method-btn ${loginMethod === 'credentials' ? 'active' : ''}`}\r\n            onClick={() => {\r\n              stopVideoStream();\r\n              setLoginMethod('credentials');\r\n              setIsCapturing(false);\r\n            }}\r\n          >\r\n            Email & Password\r\n          </button>\r\n          <button \r\n            className={`method-btn ${loginMethod === 'face' ? 'active' : ''}`}\r\n            onClick={() => setLoginMethod('face')}\r\n          >\r\n            Face ID\r\n          </button>\r\n        </div>\r\n        \r\n        {loginMethod === 'credentials' ? (\r\n          <form onSubmit={handleCredentialLogin} className=\"login-form\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Enter your email\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                id=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"Enter your password\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <button \r\n              type=\"submit\"\r\n              className=\"login-btn\"\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Logging in...' : 'Login'}\r\n            </button>\r\n          </form>\r\n        ) : (\r\n          <div className=\"face-auth-container\">\r\n            <div className=\"video-container\">\r\n              <video\r\n                ref={videoRef}\r\n                autoPlay\r\n                muted\r\n                playsInline\r\n                className=\"face-video\"\r\n              />\r\n              \r\n              {loading && (\r\n                <div className=\"scanning-overlay\">\r\n                  <div className=\"scanning-animation\"></div>\r\n                  <p>{scanStatus}</p>\r\n                  <div className=\"progress-container\">\r\n                    <div className=\"progress-bar\" style={{width: `${matchProgress}%`}}></div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {isAuthenticated && (\r\n                <div className=\"auth-success-overlay\">\r\n                  <div className=\"success-checkmark\"></div>\r\n                  <p>Authentication Successful!</p>\r\n                  <p className=\"redirect-message\">Redirecting...</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"face-auth-instructions\">\r\n              <p>Position your face in front of the camera</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"alternative-auth\">\r\n          <p>Don't have an account?</p>\r\n          <button \r\n            className=\"register-btn\"\r\n            onClick={() => navigate('/signup')}\r\n          >\r\n            Create Account\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}