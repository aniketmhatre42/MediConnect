{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDatabase } from \"firebase/database\";\nimport { getStorage } from \"firebase/storage\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAnalytics } from \"firebase/analytics\";\n\n// Update with the new Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDVMRkS8_vRfgb41wOlxzieECZdgr1IRRk\",\n  authDomain: \"mediconnect-f6040.firebaseapp.com\",\n  projectId: \"mediconnect-f6040\",\n  storageBucket: \"mediconnect-f6040.firebasestorage.app\",\n  messagingSenderId: \"967220854368\",\n  appId: \"1:967220854368:web:6b7a4438b20aba8caccd05\",\n  measurementId: \"G-85XEWLEHXS\",\n  // Add the databaseURL for Realtime Database - you'll need to create this in Firebase console\n  databaseURL: \"https://mediconnect-f6040-default-rtdb.firebaseio.com\"\n};\n\n// Initialize Firebase\nconsole.log(\"Initializing Firebase with config:\", {\n  projectId: firebaseConfig.projectId,\n  databaseURL: firebaseConfig.databaseURL\n  // Don't log sensitive information like the API key\n});\nconst app = initializeApp(firebaseConfig);\n\n// Get Firebase services\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\nexport const rtdb = getDatabase(app);\nexport const storage = getStorage(app);\nexport const analytics = getAnalytics(app);\n\n// Monitor database connection state\nif (rtdb) {\n  const {\n    ref,\n    onValue\n  } = require('firebase/database');\n  const connectedRef = ref(rtdb, '.info/connected');\n  onValue(connectedRef, snap => {\n    if (snap.val() === true) {\n      console.log(\"Connected to Firebase Realtime Database\");\n    } else {\n      console.warn(\"Disconnected from Firebase Realtime Database\");\n    }\n  });\n}\nexport default app;","map":{"version":3,"names":["initializeApp","getAuth","getDatabase","getStorage","getFirestore","getAnalytics","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","console","log","app","auth","db","rtdb","storage","analytics","ref","onValue","require","connectedRef","snap","val","warn"],"sources":["D:/Movies/Aniket/test2/test/src/firebase/config.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getDatabase } from \"firebase/database\";\r\nimport { getStorage } from \"firebase/storage\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n\r\n// Update with the new Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDVMRkS8_vRfgb41wOlxzieECZdgr1IRRk\",\r\n  authDomain: \"mediconnect-f6040.firebaseapp.com\",\r\n  projectId: \"mediconnect-f6040\",\r\n  storageBucket: \"mediconnect-f6040.firebasestorage.app\",\r\n  messagingSenderId: \"967220854368\",\r\n  appId: \"1:967220854368:web:6b7a4438b20aba8caccd05\",\r\n  measurementId: \"G-85XEWLEHXS\",\r\n  // Add the databaseURL for Realtime Database - you'll need to create this in Firebase console\r\n  databaseURL: \"https://mediconnect-f6040-default-rtdb.firebaseio.com\"\r\n};\r\n\r\n// Initialize Firebase\r\nconsole.log(\"Initializing Firebase with config:\", {\r\n  projectId: firebaseConfig.projectId,\r\n  databaseURL: firebaseConfig.databaseURL,\r\n  // Don't log sensitive information like the API key\r\n});\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Get Firebase services\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\nexport const rtdb = getDatabase(app);\r\nexport const storage = getStorage(app);\r\nexport const analytics = getAnalytics(app);\r\n\r\n// Monitor database connection state\r\nif (rtdb) {\r\n  const { ref, onValue } = require('firebase/database');\r\n  const connectedRef = ref(rtdb, '.info/connected');\r\n  onValue(connectedRef, (snap) => {\r\n    if (snap.val() === true) {\r\n      console.log(\"Connected to Firebase Realtime Database\");\r\n    } else {\r\n      console.warn(\"Disconnected from Firebase Realtime Database\");\r\n    }\r\n  });\r\n}\r\n\r\nexport default app;"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,YAAY,QAAQ,oBAAoB;;AAEjD;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,mCAAmC;EAC/CC,SAAS,EAAE,mBAAmB;EAC9BC,aAAa,EAAE,uCAAuC;EACtDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE,cAAc;EAC7B;EACAC,WAAW,EAAE;AACf,CAAC;;AAED;AACAC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAE;EAChDP,SAAS,EAAEH,cAAc,CAACG,SAAS;EACnCK,WAAW,EAAER,cAAc,CAACQ;EAC5B;AACF,CAAC,CAAC;AAEF,MAAMG,GAAG,GAAGjB,aAAa,CAACM,cAAc,CAAC;;AAEzC;AACA,OAAO,MAAMY,IAAI,GAAGjB,OAAO,CAACgB,GAAG,CAAC;AAChC,OAAO,MAAME,EAAE,GAAGf,YAAY,CAACa,GAAG,CAAC;AACnC,OAAO,MAAMG,IAAI,GAAGlB,WAAW,CAACe,GAAG,CAAC;AACpC,OAAO,MAAMI,OAAO,GAAGlB,UAAU,CAACc,GAAG,CAAC;AACtC,OAAO,MAAMK,SAAS,GAAGjB,YAAY,CAACY,GAAG,CAAC;;AAE1C;AACA,IAAIG,IAAI,EAAE;EACR,MAAM;IAAEG,GAAG;IAAEC;EAAQ,CAAC,GAAGC,OAAO,CAAC,mBAAmB,CAAC;EACrD,MAAMC,YAAY,GAAGH,GAAG,CAACH,IAAI,EAAE,iBAAiB,CAAC;EACjDI,OAAO,CAACE,YAAY,EAAGC,IAAI,IAAK;IAC9B,IAAIA,IAAI,CAACC,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE;MACvBb,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;IACxD,CAAC,MAAM;MACLD,OAAO,CAACc,IAAI,CAAC,8CAA8C,CAAC;IAC9D;EACF,CAAC,CAAC;AACJ;AAEA,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}