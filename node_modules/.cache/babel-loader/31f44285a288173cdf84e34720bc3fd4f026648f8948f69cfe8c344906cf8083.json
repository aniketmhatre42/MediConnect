{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movies\\\\Aniket\\\\test2\\\\test\\\\src\\\\components\\\\FacialAuth.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as faceapi from 'face-api.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FacialAuth() {\n  _s();\n  const videoRef = useRef(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadModels = async () => {\n      try {\n        setIsLoading(true);\n        // Using models directly from CDN\n        const MODEL_URL = 'https://justadudewhohacks.github.io/face-api.js/models';\n        await Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)]);\n        await startVideo();\n        setIsLoading(false);\n      } catch (err) {\n        setError('Error loading face recognition models: ' + err.message);\n        setIsLoading(false);\n      }\n    };\n    const startVideo = () => {\n      navigator.mediaDevices.getUserMedia({\n        video: {}\n      }).then(stream => {\n        videoRef.current.srcObject = stream;\n      }).catch(err => console.error(\"Error accessing webcam: \", err));\n    };\n    loadModels();\n  }, []);\n  const handleVideoPlay = async () => {\n    // Start face detection process\n    const labeledFaceDescriptors = await loadLabeledImages();\n    const faceMatcher = new faceapi.FaceMatcher(labeledFaceDescriptors, 0.6);\n    setInterval(async () => {\n      const detections = await faceapi.detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptors();\n      if (detections.length > 0) {\n        const resizedDetections = faceapi.resizeResults(detections, {\n          width: videoRef.current.width,\n          height: videoRef.current.height\n        });\n        const results = resizedDetections.map(d => faceMatcher.findBestMatch(d.descriptor));\n        results.forEach((result, i) => {\n          if (result.label === \"YourName\") {\n            setIsAuthenticated(true);\n          } else {\n            setIsAuthenticated(false);\n          }\n        });\n      }\n    }, 1000);\n  };\n  const loadLabeledImages = () => {\n    const labels = [\"YourName\"]; // Labels should match the person's name to be authenticated\n    return Promise.all(labels.map(async label => {\n      const descriptions = [];\n      for (let i = 1; i <= 1; i++) {\n        const img = await faceapi.fetchImage(`/labeled_images/${label}/${i}.jpg`);\n        const detections = await faceapi.detectSingleFace(img).withFaceLandmarks().withFaceDescriptor();\n        descriptions.push(detections.descriptor);\n      }\n      return new faceapi.LabeledFaceDescriptors(label, descriptions);\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"facial-auth-container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading face recognition models...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Facial Authentication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        muted: true,\n        width: \"720\",\n        height: \"560\",\n        onPlay: handleVideoPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-success\",\n        children: \"Authenticated Successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-warning\",\n        children: \"Waiting for authentication...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(FacialAuth, \"l0h+PPpWT7vqrAhd/hEAfjv5T6c=\");\n_c = FacialAuth;\nexport default FacialAuth;\nvar _c;\n$RefreshReg$(_c, \"FacialAuth\");","map":{"version":3,"names":["React","useEffect","useRef","useState","faceapi","jsxDEV","_jsxDEV","Fragment","_Fragment","FacialAuth","_s","videoRef","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","error","setError","loadModels","MODEL_URL","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","startVideo","err","message","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","console","handleVideoPlay","labeledFaceDescriptors","loadLabeledImages","faceMatcher","FaceMatcher","setInterval","detections","detectAllFaces","TinyFaceDetectorOptions","withFaceLandmarks","withFaceDescriptors","length","resizedDetections","resizeResults","width","height","results","map","d","findBestMatch","descriptor","forEach","result","i","label","labels","descriptions","img","fetchImage","detectSingleFace","withFaceDescriptor","push","LabeledFaceDescriptors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","onPlay","_c","$RefreshReg$"],"sources":["D:/Movies/Aniket/test2/test/src/components/FacialAuth.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as faceapi from 'face-api.js';\r\n\r\nfunction FacialAuth() {\r\n  const videoRef = useRef(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        // Using models directly from CDN\r\n        const MODEL_URL = 'https://justadudewhohacks.github.io/face-api.js/models';\r\n        \r\n        await Promise.all([\r\n          faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)\r\n        ]);\r\n\r\n        await startVideo();\r\n        setIsLoading(false);\r\n      } catch (err) {\r\n        setError('Error loading face recognition models: ' + err.message);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    const startVideo = () => {\r\n      navigator.mediaDevices\r\n        .getUserMedia({ video: {} })\r\n        .then((stream) => {\r\n          videoRef.current.srcObject = stream;\r\n        })\r\n        .catch((err) => console.error(\"Error accessing webcam: \", err));\r\n    };\r\n\r\n    loadModels();\r\n  }, []);\r\n\r\n  const handleVideoPlay = async () => {\r\n    // Start face detection process\r\n    const labeledFaceDescriptors = await loadLabeledImages();\r\n    const faceMatcher = new faceapi.FaceMatcher(labeledFaceDescriptors, 0.6);\r\n\r\n    setInterval(async () => {\r\n      const detections = await faceapi\r\n        .detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions())\r\n        .withFaceLandmarks()\r\n        .withFaceDescriptors();\r\n\r\n      if (detections.length > 0) {\r\n        const resizedDetections = faceapi.resizeResults(detections, {\r\n          width: videoRef.current.width,\r\n          height: videoRef.current.height,\r\n        });\r\n\r\n        const results = resizedDetections.map((d) =>\r\n          faceMatcher.findBestMatch(d.descriptor)\r\n        );\r\n\r\n        results.forEach((result, i) => {\r\n          if (result.label === \"YourName\") {\r\n            setIsAuthenticated(true);\r\n          } else {\r\n            setIsAuthenticated(false);\r\n          }\r\n        });\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  const loadLabeledImages = () => {\r\n    const labels = [\"YourName\"]; // Labels should match the person's name to be authenticated\r\n    return Promise.all(\r\n      labels.map(async (label) => {\r\n        const descriptions = [];\r\n        for (let i = 1; i <= 1; i++) {\r\n          const img = await faceapi.fetchImage(`/labeled_images/${label}/${i}.jpg`);\r\n          const detections = await faceapi\r\n            .detectSingleFace(img)\r\n            .withFaceLandmarks()\r\n            .withFaceDescriptor();\r\n          descriptions.push(detections.descriptor);\r\n        }\r\n        return new faceapi.LabeledFaceDescriptors(label, descriptions);\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"facial-auth-container\">\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {isLoading ? (\r\n        <div className=\"loading\">Loading face recognition models...</div>\r\n      ) : (\r\n        <>\r\n          <h3>Facial Authentication</h3>\r\n          <video\r\n            ref={videoRef}\r\n            autoPlay\r\n            muted\r\n            width=\"720\"\r\n            height=\"560\"\r\n            onPlay={handleVideoPlay}\r\n          />\r\n          {isAuthenticated ? (\r\n            <div className=\"auth-success\">Authenticated Successfully!</div>\r\n          ) : (\r\n            <div className=\"auth-warning\">Waiting for authentication...</div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FacialAuth;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,KAAKC,OAAO,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExCF,SAAS,CAAC,MAAM;IACd,MAAMiB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACFH,YAAY,CAAC,IAAI,CAAC;QAClB;QACA,MAAMI,SAAS,GAAG,wDAAwD;QAE1E,MAAMC,OAAO,CAACC,GAAG,CAAC,CAChBjB,OAAO,CAACkB,IAAI,CAACC,gBAAgB,CAACC,WAAW,CAACL,SAAS,CAAC,EACpDf,OAAO,CAACkB,IAAI,CAACG,iBAAiB,CAACD,WAAW,CAACL,SAAS,CAAC,EACrDf,OAAO,CAACkB,IAAI,CAACI,kBAAkB,CAACF,WAAW,CAACL,SAAS,CAAC,CACvD,CAAC;QAEF,MAAMQ,UAAU,CAAC,CAAC;QAClBZ,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOa,GAAG,EAAE;QACZX,QAAQ,CAAC,yCAAyC,GAAGW,GAAG,CAACC,OAAO,CAAC;QACjEd,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAED,MAAMY,UAAU,GAAGA,CAAA,KAAM;MACvBG,SAAS,CAACC,YAAY,CACnBC,YAAY,CAAC;QAAEC,KAAK,EAAE,CAAC;MAAE,CAAC,CAAC,CAC3BC,IAAI,CAAEC,MAAM,IAAK;QAChBxB,QAAQ,CAACyB,OAAO,CAACC,SAAS,GAAGF,MAAM;MACrC,CAAC,CAAC,CACDG,KAAK,CAAEV,GAAG,IAAKW,OAAO,CAACvB,KAAK,CAAC,0BAA0B,EAAEY,GAAG,CAAC,CAAC;IACnE,CAAC;IAEDV,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMsB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC;IACA,MAAMC,sBAAsB,GAAG,MAAMC,iBAAiB,CAAC,CAAC;IACxD,MAAMC,WAAW,GAAG,IAAIvC,OAAO,CAACwC,WAAW,CAACH,sBAAsB,EAAE,GAAG,CAAC;IAExEI,WAAW,CAAC,YAAY;MACtB,MAAMC,UAAU,GAAG,MAAM1C,OAAO,CAC7B2C,cAAc,CAACpC,QAAQ,CAACyB,OAAO,EAAE,IAAIhC,OAAO,CAAC4C,uBAAuB,CAAC,CAAC,CAAC,CACvEC,iBAAiB,CAAC,CAAC,CACnBC,mBAAmB,CAAC,CAAC;MAExB,IAAIJ,UAAU,CAACK,MAAM,GAAG,CAAC,EAAE;QACzB,MAAMC,iBAAiB,GAAGhD,OAAO,CAACiD,aAAa,CAACP,UAAU,EAAE;UAC1DQ,KAAK,EAAE3C,QAAQ,CAACyB,OAAO,CAACkB,KAAK;UAC7BC,MAAM,EAAE5C,QAAQ,CAACyB,OAAO,CAACmB;QAC3B,CAAC,CAAC;QAEF,MAAMC,OAAO,GAAGJ,iBAAiB,CAACK,GAAG,CAAEC,CAAC,IACtCf,WAAW,CAACgB,aAAa,CAACD,CAAC,CAACE,UAAU,CACxC,CAAC;QAEDJ,OAAO,CAACK,OAAO,CAAC,CAACC,MAAM,EAAEC,CAAC,KAAK;UAC7B,IAAID,MAAM,CAACE,KAAK,KAAK,UAAU,EAAE;YAC/BnD,kBAAkB,CAAC,IAAI,CAAC;UAC1B,CAAC,MAAM;YACLA,kBAAkB,CAAC,KAAK,CAAC;UAC3B;QACF,CAAC,CAAC;MACJ;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAM6B,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMuB,MAAM,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IAC7B,OAAO7C,OAAO,CAACC,GAAG,CAChB4C,MAAM,CAACR,GAAG,CAAC,MAAOO,KAAK,IAAK;MAC1B,MAAME,YAAY,GAAG,EAAE;MACvB,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC3B,MAAMI,GAAG,GAAG,MAAM/D,OAAO,CAACgE,UAAU,CAAC,mBAAmBJ,KAAK,IAAID,CAAC,MAAM,CAAC;QACzE,MAAMjB,UAAU,GAAG,MAAM1C,OAAO,CAC7BiE,gBAAgB,CAACF,GAAG,CAAC,CACrBlB,iBAAiB,CAAC,CAAC,CACnBqB,kBAAkB,CAAC,CAAC;QACvBJ,YAAY,CAACK,IAAI,CAACzB,UAAU,CAACc,UAAU,CAAC;MAC1C;MACA,OAAO,IAAIxD,OAAO,CAACoE,sBAAsB,CAACR,KAAK,EAAEE,YAAY,CAAC;IAChE,CAAC,CACH,CAAC;EACH,CAAC;EAED,oBACE5D,OAAA;IAAKmE,SAAS,EAAC,uBAAuB;IAAAC,QAAA,GACnC1D,KAAK,iBAAIV,OAAA;MAAKmE,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAE1D;IAAK;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC7ChE,SAAS,gBACRR,OAAA;MAAKmE,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAEjExE,OAAA,CAAAE,SAAA;MAAAkE,QAAA,gBACEpE,OAAA;QAAAoE,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BxE,OAAA;QACEyE,GAAG,EAAEpE,QAAS;QACdqE,QAAQ;QACRC,KAAK;QACL3B,KAAK,EAAC,KAAK;QACXC,MAAM,EAAC,KAAK;QACZ2B,MAAM,EAAE1C;MAAgB;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,EACDlE,eAAe,gBACdN,OAAA;QAAKmE,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAE/DxE,OAAA;QAAKmE,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACjE;IAAA,eACD,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpE,EAAA,CAlHQD,UAAU;AAAA0E,EAAA,GAAV1E,UAAU;AAoHnB,eAAeA,UAAU;AAAC,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}