{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movies\\\\Aniket\\\\test2\\\\test\\\\src\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as faceapi from 'face-api.js';\nimport { saveFaceDescriptor, saveUserData } from './services/localStorageService';\nimport './Signup.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [isCapturing, setIsCapturing] = useState(false);\n  const [faceDetected, setFaceDetected] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const videoRef = useRef(null);\n  const navigate = useNavigate();\n\n  // Add new state for face detection status\n  const [faceDetectionNet, setFaceDetectionNet] = useState(null);\n  const [isModelLoaded, setIsModelLoaded] = useState(false);\n  const canvasRef = useRef(null);\n  const [detectionProgress, setDetectionProgress] = useState(0);\n  const [scanningStatus, setScanningStatus] = useState('');\n  const [modelLoadingProgress, setModelLoadingProgress] = useState({\n    tinyFaceDetector: 0,\n    faceLandmark: 0,\n    faceRecognition: 0\n  });\n  useEffect(() => {\n    loadModels();\n  }, []);\n  const loadModels = async () => {\n    try {\n      setLoading(true);\n      setScanningStatus('Initializing face detection models...');\n      const MODEL_URL = 'https://justadudewhohacks.github.io/face-api.js/models';\n\n      // Load each model with progress tracking\n      await Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL).then(() => {\n        setModelLoadingProgress(prev => ({\n          ...prev,\n          tinyFaceDetector: 100\n        }));\n        setScanningStatus('Face detector model loaded (33%)');\n      }), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL).then(() => {\n        setModelLoadingProgress(prev => ({\n          ...prev,\n          faceLandmark: 100\n        }));\n        setScanningStatus('Face landmark model loaded (66%)');\n      }), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL).then(() => {\n        setModelLoadingProgress(prev => ({\n          ...prev,\n          faceRecognition: 100\n        }));\n        setScanningStatus('Face recognition model loaded (100%)');\n      })]);\n      setIsModelLoaded(true);\n      setScanningStatus('Models loaded successfully. Ready to start face capture.');\n      setLoading(false);\n    } catch (err) {\n      setError('Error loading face detection models: ' + err.message);\n      setScanningStatus('Failed to load models. Please refresh and try again.');\n      setLoading(false);\n    }\n  };\n  const startFaceDetection = async () => {\n    if (!videoRef.current || !canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    let detectionCount = 0;\n    const totalDetectionsNeeded = 30; // Number of samples for better accuracy\n\n    const detectFace = async () => {\n      setScanningStatus(`Analyzing face characteristics (${Math.round(detectionCount / totalDetectionsNeeded * 100)}%)`);\n      const detection = await faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor();\n      if (detection) {\n        detectionCount++;\n        setDetectionProgress(Math.min(detectionCount / totalDetectionsNeeded * 100, 100));\n        if (detectionCount >= totalDetectionsNeeded) {\n          setFaceDetected(true);\n          setScanningStatus('Face successfully detected and analyzed! Ready for registration.');\n        }\n        const context = canvas.getContext('2d');\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        // Draw detection results\n        const dims = faceapi.matchDimensions(canvas, video, true);\n        const resizedResults = faceapi.resizeResults(detection, dims);\n        faceapi.draw.drawDetections(canvas, [resizedResults]);\n        faceapi.draw.drawFaceLandmarks(canvas, [resizedResults]);\n      } else {\n        setFaceDetected(false);\n        setScanningStatus('No face detected. Please ensure your face is clearly visible.');\n      }\n      if (isCapturing && detectionCount < totalDetectionsNeeded) {\n        requestAnimationFrame(detectFace);\n      }\n    };\n    detectFace();\n  };\n  const startFaceCapture = async () => {\n    setIsCapturing(true);\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: 640,\n          height: 480\n        }\n      });\n      videoRef.current.srcObject = stream;\n      videoRef.current.onplay = startFaceDetection;\n    } catch (err) {\n      setError('Error accessing camera: ' + err.message);\n    }\n  };\n  const handleSignup = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      if (!videoRef.current) {\n        throw new Error('Camera not initialized');\n      }\n      console.log('Starting face detection...'); // Debug log\n\n      const detection = await faceapi.detectSingleFace(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor();\n      console.log('Face detection result:', detection); // Debug log\n\n      if (!detection) {\n        throw new Error('No face detected. Please ensure your face is clearly visible.');\n      }\n      const userId = `user_${Date.now()}`;\n      console.log('Generated userId:', userId); // Debug log\n\n      // Save face descriptor\n      const saveDescriptorSuccess = await saveFaceDescriptor(userId, detection.descriptor);\n      console.log('Face descriptor save result:', saveDescriptorSuccess); // Debug log\n\n      if (!saveDescriptorSuccess) {\n        throw new Error('Failed to save face data');\n      }\n\n      // Save user data\n      const userData = {\n        userId,\n        createdAt: new Date().toISOString(),\n        hasFaceAuth: true\n      };\n      console.log('Saving user data:', userData); // Debug log\n      const saveUserSuccess = await saveUserData(userData);\n      if (!saveUserSuccess) {\n        throw new Error('Failed to save user data');\n      }\n\n      // Verify data was saved\n      const savedDescriptors = localStorage.getItem('face_descriptors');\n      const savedUserData = localStorage.getItem('user_data');\n      console.log('Verification - Saved descriptors:', savedDescriptors);\n      console.log('Verification - Saved user data:', savedUserData);\n      stopVideoStream();\n      navigate('/login');\n    } catch (err) {\n      console.error('Signup error:', err); // Debug log\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const stopVideoStream = () => {\n    if (videoRef.current && videoRef.current.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Face ID Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-wrapper\",\n        children: !isCapturing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"face-capture-btn\",\n            onClick: startFaceCapture,\n            disabled: !isModelLoaded || loading,\n            children: loading ? 'Loading Models...' : 'Enable Face ID'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"model-loading-progress\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                style: {\n                  width: `${(modelLoadingProgress.tinyFaceDetector + modelLoadingProgress.faceLandmark + modelLoadingProgress.faceRecognition) / 3}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"scanning-status\",\n              children: scanningStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              autoPlay: true,\n              muted: true,\n              playsInline: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasRef,\n              className: \"face-overlay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), faceDetected && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"face-detected-indicator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detection-progress\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar-container\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-bar\",\n                  style: {\n                    width: `${detectionProgress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detection-status\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"scanning-status\",\n              children: scanningStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"face-status\",\n              children: faceDetected ? 'Face Detected ✓' : 'No Face Detected'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignup,\n        className: \"signup-btn\",\n        disabled: loading || !faceDetected,\n        children: loading ? 'Registering...' : 'Complete Registration'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-help\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please ensure:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Your face is well-lit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Look directly at the camera\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Remove glasses or face coverings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Keep your face still during scanning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"L/rSbJg5pH6yk8ozy7wEU7Dy1jE=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","faceapi","saveFaceDescriptor","saveUserData","jsxDEV","_jsxDEV","Fragment","_Fragment","Signup","_s","isCapturing","setIsCapturing","faceDetected","setFaceDetected","loading","setLoading","error","setError","videoRef","navigate","faceDetectionNet","setFaceDetectionNet","isModelLoaded","setIsModelLoaded","canvasRef","detectionProgress","setDetectionProgress","scanningStatus","setScanningStatus","modelLoadingProgress","setModelLoadingProgress","tinyFaceDetector","faceLandmark","faceRecognition","loadModels","MODEL_URL","Promise","all","nets","loadFromUri","then","prev","faceLandmark68Net","faceRecognitionNet","err","message","startFaceDetection","current","canvas","video","width","videoWidth","height","videoHeight","detectionCount","totalDetectionsNeeded","detectFace","Math","round","detection","detectSingleFace","TinyFaceDetectorOptions","withFaceLandmarks","withFaceDescriptor","min","context","getContext","clearRect","dims","matchDimensions","resizedResults","resizeResults","draw","drawDetections","drawFaceLandmarks","requestAnimationFrame","startFaceCapture","stream","navigator","mediaDevices","getUserMedia","srcObject","onplay","handleSignup","e","preventDefault","Error","console","log","userId","Date","now","saveDescriptorSuccess","descriptor","userData","createdAt","toISOString","hasFaceAuth","saveUserSuccess","savedDescriptors","localStorage","getItem","savedUserData","stopVideoStream","getTracks","forEach","track","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","disabled","style","ref","autoPlay","muted","playsInline","_c","$RefreshReg$"],"sources":["D:/Movies/Aniket/test2/test/src/Signup.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as faceapi from 'face-api.js';\r\nimport { saveFaceDescriptor, saveUserData } from './services/localStorageService';\r\nimport './Signup.css';\r\n\r\nfunction Signup() {\r\n  const [isCapturing, setIsCapturing] = useState(false);\r\n  const [faceDetected, setFaceDetected] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const videoRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Add new state for face detection status\r\n  const [faceDetectionNet, setFaceDetectionNet] = useState(null);\r\n  const [isModelLoaded, setIsModelLoaded] = useState(false);\r\n  const canvasRef = useRef(null);\r\n  const [detectionProgress, setDetectionProgress] = useState(0);\r\n  const [scanningStatus, setScanningStatus] = useState('');\r\n  const [modelLoadingProgress, setModelLoadingProgress] = useState({ \r\n    tinyFaceDetector: 0,\r\n    faceLandmark: 0,\r\n    faceRecognition: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadModels();\r\n  }, []);\r\n\r\n  const loadModels = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setScanningStatus('Initializing face detection models...');\r\n      const MODEL_URL = 'https://justadudewhohacks.github.io/face-api.js/models';\r\n      \r\n      // Load each model with progress tracking\r\n      await Promise.all([\r\n        faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL).then(() => {\r\n          setModelLoadingProgress(prev => ({...prev, tinyFaceDetector: 100}));\r\n          setScanningStatus('Face detector model loaded (33%)');\r\n        }),\r\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL).then(() => {\r\n          setModelLoadingProgress(prev => ({...prev, faceLandmark: 100}));\r\n          setScanningStatus('Face landmark model loaded (66%)');\r\n        }),\r\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL).then(() => {\r\n          setModelLoadingProgress(prev => ({...prev, faceRecognition: 100}));\r\n          setScanningStatus('Face recognition model loaded (100%)');\r\n        })\r\n      ]);\r\n\r\n      setIsModelLoaded(true);\r\n      setScanningStatus('Models loaded successfully. Ready to start face capture.');\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Error loading face detection models: ' + err.message);\r\n      setScanningStatus('Failed to load models. Please refresh and try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const startFaceDetection = async () => {\r\n    if (!videoRef.current || !canvasRef.current) return;\r\n\r\n    const canvas = canvasRef.current;\r\n    const video = videoRef.current;\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n\r\n    let detectionCount = 0;\r\n    const totalDetectionsNeeded = 30; // Number of samples for better accuracy\r\n    \r\n    const detectFace = async () => {\r\n      setScanningStatus(`Analyzing face characteristics (${Math.round((detectionCount/totalDetectionsNeeded) * 100)}%)`);\r\n      \r\n      const detection = await faceapi\r\n        .detectSingleFace(video, new faceapi.TinyFaceDetectorOptions())\r\n        .withFaceLandmarks()\r\n        .withFaceDescriptor();\r\n\r\n      if (detection) {\r\n        detectionCount++;\r\n        setDetectionProgress(Math.min((detectionCount/totalDetectionsNeeded) * 100, 100));\r\n        \r\n        if (detectionCount >= totalDetectionsNeeded) {\r\n          setFaceDetected(true);\r\n          setScanningStatus('Face successfully detected and analyzed! Ready for registration.');\r\n        }\r\n        \r\n        const context = canvas.getContext('2d');\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n        \r\n        // Draw detection results\r\n        const dims = faceapi.matchDimensions(canvas, video, true);\r\n        const resizedResults = faceapi.resizeResults(detection, dims);\r\n        faceapi.draw.drawDetections(canvas, [resizedResults]);\r\n        faceapi.draw.drawFaceLandmarks(canvas, [resizedResults]);\r\n      } else {\r\n        setFaceDetected(false);\r\n        setScanningStatus('No face detected. Please ensure your face is clearly visible.');\r\n      }\r\n\r\n      if (isCapturing && detectionCount < totalDetectionsNeeded) {\r\n        requestAnimationFrame(detectFace);\r\n      }\r\n    };\r\n\r\n    detectFace();\r\n  };\r\n\r\n  const startFaceCapture = async () => {\r\n    setIsCapturing(true);\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ \r\n        video: {\r\n          width: 640,\r\n          height: 480\r\n        } \r\n      });\r\n      videoRef.current.srcObject = stream;\r\n      videoRef.current.onplay = startFaceDetection;\r\n    } catch (err) {\r\n      setError('Error accessing camera: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const handleSignup = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      if (!videoRef.current) {\r\n        throw new Error('Camera not initialized');\r\n      }\r\n\r\n      console.log('Starting face detection...'); // Debug log\r\n\r\n      const detection = await faceapi\r\n        .detectSingleFace(videoRef.current, new faceapi.TinyFaceDetectorOptions())\r\n        .withFaceLandmarks()\r\n        .withFaceDescriptor();\r\n\r\n      console.log('Face detection result:', detection); // Debug log\r\n\r\n      if (!detection) {\r\n        throw new Error('No face detected. Please ensure your face is clearly visible.');\r\n      }\r\n\r\n      const userId = `user_${Date.now()}`;\r\n      console.log('Generated userId:', userId); // Debug log\r\n\r\n      // Save face descriptor\r\n      const saveDescriptorSuccess = await saveFaceDescriptor(userId, detection.descriptor);\r\n      console.log('Face descriptor save result:', saveDescriptorSuccess); // Debug log\r\n\r\n      if (!saveDescriptorSuccess) {\r\n        throw new Error('Failed to save face data');\r\n      }\r\n\r\n      // Save user data\r\n      const userData = {\r\n        userId,\r\n        createdAt: new Date().toISOString(),\r\n        hasFaceAuth: true\r\n      };\r\n      \r\n      console.log('Saving user data:', userData); // Debug log\r\n      const saveUserSuccess = await saveUserData(userData);\r\n      \r\n      if (!saveUserSuccess) {\r\n        throw new Error('Failed to save user data');\r\n      }\r\n\r\n      // Verify data was saved\r\n      const savedDescriptors = localStorage.getItem('face_descriptors');\r\n      const savedUserData = localStorage.getItem('user_data');\r\n      console.log('Verification - Saved descriptors:', savedDescriptors);\r\n      console.log('Verification - Saved user data:', savedUserData);\r\n\r\n      stopVideoStream();\r\n      navigate('/login');\r\n    } catch (err) {\r\n      console.error('Signup error:', err); // Debug log\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const stopVideoStream = () => {\r\n    if (videoRef.current && videoRef.current.srcObject) {\r\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <div className=\"signup-card\">\r\n        <h2>Face ID Registration</h2>\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        \r\n        <div className=\"video-wrapper\">\r\n          {!isCapturing ? (\r\n            <>\r\n              <button \r\n                type=\"button\" \r\n                className=\"face-capture-btn\"\r\n                onClick={startFaceCapture}\r\n                disabled={!isModelLoaded || loading}\r\n              >\r\n                {loading ? 'Loading Models...' : 'Enable Face ID'}\r\n              </button>\r\n              \r\n              {loading && (\r\n                <div className=\"model-loading-progress\">\r\n                  <div className=\"progress-bar-container\">\r\n                    <div \r\n                      className=\"progress-bar\" \r\n                      style={{width: `${(modelLoadingProgress.tinyFaceDetector + modelLoadingProgress.faceLandmark + modelLoadingProgress.faceRecognition)/3}%`}}\r\n                    ></div>\r\n                  </div>\r\n                  <p className=\"scanning-status\">{scanningStatus}</p>\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"video-container\">\r\n                <video\r\n                  ref={videoRef}\r\n                  autoPlay\r\n                  muted\r\n                  playsInline\r\n                />\r\n                <canvas ref={canvasRef} className=\"face-overlay\" />\r\n                {faceDetected && <div className=\"face-detected-indicator\" />}\r\n                \r\n                <div className=\"detection-progress\">\r\n                  <div className=\"progress-bar-container\">\r\n                    <div \r\n                      className=\"progress-bar\" \r\n                      style={{width: `${detectionProgress}%`}}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"detection-status\">\r\n                <p className=\"scanning-status\">{scanningStatus}</p>\r\n                <p className=\"face-status\">{faceDetected ? 'Face Detected ✓' : 'No Face Detected'}</p>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <button \r\n          onClick={handleSignup}\r\n          className=\"signup-btn\"\r\n          disabled={loading || !faceDetected}\r\n        >\r\n          {loading ? 'Registering...' : 'Complete Registration'}\r\n        </button>\r\n\r\n        <div className=\"signup-help\">\r\n          <p>Please ensure:</p>\r\n          <ul>\r\n            <li>Your face is well-lit</li>\r\n            <li>Look directly at the camera</li>\r\n            <li>Remove glasses or face coverings</li>\r\n            <li>Keep your face still during scanning</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}