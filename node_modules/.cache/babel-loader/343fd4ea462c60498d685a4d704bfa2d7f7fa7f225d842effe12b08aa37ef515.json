{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movies\\\\Aniket\\\\test2\\\\test\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport * as faceapi from 'face-api.js';\nimport { Link } from 'react-router-dom';\nimport './Login.css';\nimport { loadFaceDescriptor } from './services/localFaceStorage';\nimport { getFaceFromFirebase } from './services/firebaseFaceService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  var _location$state, _location$state2;\n  // Face authentication state\n  const [isCapturing, setIsCapturing] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [scanStatus, setScanStatus] = useState('');\n  const [matchProgress, setMatchProgress] = useState(0);\n  const [faceDetected, setFaceDetected] = useState(false);\n  const [faceName, setFaceName] = useState('');\n  const [scanningComplete, setScanningComplete] = useState(false);\n  const [modelLoaded, setModelLoaded] = useState(false);\n\n  // Face position feedback\n  const [faceCentered, setFaceCentered] = useState(false);\n  const [faceDistance, setFaceDistance] = useState('unknown');\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const redirectAfterLogin = (location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.redirectAfterLogin) || \"/\";\n  const loginMessage = location === null || location === void 0 ? void 0 : (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.message;\n\n  // Add minimum scan duration\n  const MIN_SCAN_TIME_MS = 5000; // 5 seconds minimum scan time\n  const [scanStartTime, setScanStartTime] = useState(null);\n  const [scanTimeRemaining, setScanTimeRemaining] = useState(0);\n\n  // Load models on component mount\n  useEffect(() => {\n    const loadModels = async () => {\n      try {\n        setScanStatus('Initializing face recognition...');\n        setLoading(true);\n        const MODEL_URL = 'https://justadudewhohacks.github.io/face-api.js/models';\n        await Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)]);\n        setModelLoaded(true);\n        setLoading(false);\n        setScanStatus('Face models loaded. Ready to start authentication.');\n      } catch (err) {\n        setError('Error loading face recognition models. Please refresh and try again.');\n        setLoading(false);\n      }\n    };\n    loadModels();\n\n    // Cleanup function\n    return () => {\n      var _videoRef$current;\n      if ((_videoRef$current = videoRef.current) !== null && _videoRef$current !== void 0 && _videoRef$current.srcObject) {\n        const stream = videoRef.current.srcObject;\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  // Add display for the message from redirect\n  useEffect(() => {\n    if (loginMessage) {\n      // Display the login message\n      setError(loginMessage);\n\n      // Clear the message after 5 seconds\n      const timer = setTimeout(() => {\n        setError(null);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [loginMessage]);\n  const startFaceAuthentication = async () => {\n    setIsCapturing(true);\n    setFaceDetected(false);\n    setIsAuthenticated(false);\n    setError('');\n    setScanningComplete(false);\n    setScanStartTime(Date.now()); // Record scan start time\n    setScanTimeRemaining(MIN_SCAN_TIME_MS / 1000);\n    try {\n      setScanStatus('Starting camera...');\n      startVideoStream();\n    } catch (err) {\n      setError('Error starting authentication: ' + err.message);\n      setLoading(false);\n    }\n  };\n  const startVideoStream = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: {\n            ideal: 640\n          },\n          height: {\n            ideal: 480\n          },\n          facingMode: \"user\"\n        }\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        videoRef.current.onloadedmetadata = () => {\n          videoRef.current.play().then(() => {\n            fetchStoredFaceData();\n          }).catch(err => {\n            setError('Error playing video: ' + err.message);\n            setLoading(false);\n          });\n        };\n      }\n    } catch (err) {\n      setError('Camera access failed: ' + err.message);\n      setLoading(false);\n    }\n  };\n  const fetchStoredFaceData = async () => {\n    setScanStatus('Looking for registered faces...');\n    try {\n      // Get stored face data from localStorage\n      const storedFaceData = JSON.parse(localStorage.getItem('face_descriptors') || '[]');\n      if (!storedFaceData || storedFaceData.length === 0) {\n        setScanStatus('No registered faces found. Please register first.');\n        setError('No faces are registered for recognition');\n        setLoading(false);\n        return;\n      }\n      console.log(`Found ${storedFaceData.length} registered faces`);\n      startFaceDetectionLoop(storedFaceData);\n    } catch (err) {\n      setError('Error fetching face data: ' + err.message);\n      setLoading(false);\n    }\n  };\n  const startFaceDetectionLoop = storedFaceData => {\n    if (!videoRef.current || !canvasRef.current) return;\n    let matchAttempts = 0;\n    const maxAttempts = 30;\n    let bestMatch = {\n      distance: 1,\n      user: null\n    };\n    const detectFace = async () => {\n      if (!videoRef.current || !canvasRef.current || matchAttempts >= maxAttempts) return;\n\n      // Calculate time elapsed and remaining\n      const elapsedTime = Date.now() - scanStartTime;\n      const remainingTime = Math.max(0, Math.ceil((MIN_SCAN_TIME_MS - elapsedTime) / 1000));\n      setScanTimeRemaining(remainingTime);\n      const scanComplete = elapsedTime >= MIN_SCAN_TIME_MS;\n      try {\n        // Update status message to include time remaining\n        if (!scanComplete) {\n          setScanStatus(`Scanning your face... ${remainingTime}s remaining`);\n        } else {\n          setScanStatus(`Matching face (${matchAttempts + 1}/${maxAttempts})...`);\n        }\n\n        // Update progress to reflect both time and matching progress\n        setMatchProgress(Math.min(100, elapsedTime / MIN_SCAN_TIME_MS * 50 + (scanComplete ? matchAttempts / maxAttempts * 50 : 0)));\n        const video = videoRef.current;\n        const canvas = canvasRef.current;\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        const detection = await faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor();\n        if (detection) {\n          // Draw detection on canvas\n          const context = canvas.getContext('2d');\n          context.clearRect(0, 0, canvas.width, canvas.height);\n          const dims = faceapi.matchDimensions(canvas, video, true);\n          const resizedResults = faceapi.resizeResults(detection, dims);\n\n          // Draw face detection box and landmarks\n          faceapi.draw.drawDetections(canvas, [resizedResults]);\n          faceapi.draw.drawFaceLandmarks(canvas, [resizedResults]);\n\n          // Calculate face position feedback\n          const box = detection.detection.box;\n          const centerX = box.x + box.width / 2;\n          const centerY = box.y + box.height / 2;\n          const canvasCenterX = canvas.width / 2;\n          const canvasCenterY = canvas.height / 2;\n\n          // Check if face is centered\n          const isCentered = Math.abs(centerX - canvasCenterX) < canvas.width * 0.15 && Math.abs(centerY - canvasCenterY) < canvas.height * 0.15;\n          setFaceCentered(isCentered);\n\n          // Check face size/distance\n          const faceRatio = box.width / canvas.width;\n          if (faceRatio < 0.2) {\n            setFaceDistance('too_far');\n          } else if (faceRatio > 0.6) {\n            setFaceDistance('too_close');\n          } else {\n            setFaceDistance('good');\n          }\n\n          // Only proceed with matching if minimum scan time has elapsed\n          if (scanComplete) {\n            setFaceDetected(true);\n\n            // Compare with stored face descriptors\n            for (const userData of storedFaceData) {\n              try {\n                let storedDescriptor = null;\n\n                // First try to get descriptor from Firebase if we have username\n                if (userData.username) {\n                  try {\n                    // Modified to use username as key\n                    storedDescriptor = await getFaceFromFirebase(userData.username);\n                    if (storedDescriptor) {\n                      console.log(`Retrieved face descriptor for ${userData.username} from Firebase`);\n                    }\n                  } catch (fbError) {\n                    console.warn(`Failed to get descriptor for ${userData.username} from Firebase:`, fbError);\n                  }\n                }\n\n                // If no descriptor from Firebase, try to get from localStorage\n                if (!storedDescriptor && userData.descriptor) {\n                  storedDescriptor = new Float32Array(userData.descriptor);\n                  console.log(`Using face descriptor from localStorage for ${userData.username || userData.userId}`);\n                }\n\n                // Skip this user if we couldn't get a descriptor\n                if (!storedDescriptor) continue;\n\n                // Calculate the similarity distance between detected face and stored face\n                const distance = faceapi.euclideanDistance(detection.descriptor, storedDescriptor);\n                console.log(`Distance for ${userData.username || userData.userId}: ${distance.toFixed(4)}`);\n\n                // Keep track of the best match so far\n                if (distance < bestMatch.distance) {\n                  bestMatch = {\n                    distance,\n                    user: userData\n                  };\n                }\n\n                // If we have a very close match, stop early\n                const MATCH_THRESHOLD = 0.45; // Lower is stricter matching\n                if (distance < MATCH_THRESHOLD) {\n                  setIsAuthenticated(true);\n                  setFaceName(userData.username || 'User');\n                  setScanStatus(`Welcome back, ${userData.username || 'User'}!`);\n                  setLoading(false);\n                  setScanningComplete(true);\n\n                  // Sign in the user\n                  sessionStorage.setItem('authenticated', 'true');\n                  sessionStorage.setItem('currentUser', JSON.stringify(userData));\n\n                  // Redirect after a short delay\n                  setTimeout(() => {\n                    stopVideoStream();\n                    navigate('/');\n                  }, 2000);\n                  return;\n                }\n              } catch (compareError) {\n                console.error('Error comparing face descriptors:', compareError);\n              }\n            }\n            matchAttempts++;\n            if (matchAttempts >= maxAttempts) {\n              // After all attempts, if we have a reasonable match, use it\n              const FALLBACK_THRESHOLD = 0.6; // More lenient threshold for fallback matching\n              if (bestMatch.distance < FALLBACK_THRESHOLD) {\n                setIsAuthenticated(true);\n                setFaceName(bestMatch.user.username || 'User');\n                setScanStatus(`Welcome back, ${bestMatch.user.username || 'User'}!`);\n\n                // Sign in the user\n                sessionStorage.setItem('authenticated', 'true');\n                sessionStorage.setItem('currentUser', JSON.stringify(bestMatch.user));\n                setTimeout(() => {\n                  stopVideoStream();\n                  navigate('/');\n                }, 2000);\n              } else {\n                setScanStatus('Face not recognized. Please try again or register a new account.');\n                setError('No matching face found');\n              }\n              setLoading(false);\n              setScanningComplete(true);\n            } else {\n              requestAnimationFrame(detectFace);\n            }\n          } else {\n            // Continue scanning until minimum time requirement met\n            requestAnimationFrame(detectFace);\n          }\n        } else {\n          setScanStatus(`No face detected. Please position your face in the frame. ${remainingTime}s remaining`);\n          setFaceDetected(false);\n\n          // Only count as an attempt if minimum scan time has passed\n          if (scanComplete) {\n            matchAttempts++;\n            if (matchAttempts >= maxAttempts) {\n              setScanStatus('Face not detected. Please try again.');\n              setLoading(false);\n              setScanningComplete(true);\n            } else {\n              requestAnimationFrame(detectFace);\n            }\n          } else {\n            requestAnimationFrame(detectFace);\n          }\n        }\n      } catch (err) {\n        setError('Error during face detection: ' + err.message);\n        setLoading(false);\n      }\n    };\n    detectFace();\n  };\n  const stopVideoStream = () => {\n    var _videoRef$current2;\n    if ((_videoRef$current2 = videoRef.current) !== null && _videoRef$current2 !== void 0 && _videoRef$current2.srcObject) {\n      const stream = videoRef.current.srcObject;\n      stream.getTracks().forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n    setIsCapturing(false);\n  };\n  const restartFaceAuth = () => {\n    if (canvasRef.current) {\n      const context = canvasRef.current.getContext('2d');\n      context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    }\n    stopVideoStream();\n    setMatchProgress(0);\n    setFaceDetected(false);\n    setIsAuthenticated(false);\n    setScanningComplete(false);\n    setError('');\n    startFaceAuthentication();\n  };\n\n  // Handle successful login\n  const handleSuccessfulLogin = userData => {\n    // Sign in the user\n    sessionStorage.setItem('authenticated', 'true');\n    sessionStorage.setItem('currentUser', JSON.stringify(userData));\n\n    // Redirect to the page that required authentication\n    navigate(redirectAfterLogin);\n  };\n\n  // Modified function for handling successful face login\n  const handleSuccessfulFaceLogin = matchedUser => {\n    var _matchedUser$user, _location$state3;\n    if (!matchedUser || !matchedUser.username) {\n      setError(\"Authentication failed. User data incomplete.\");\n      return;\n    }\n    console.log(\"Face authentication successful for:\", matchedUser.username);\n\n    // Store user session data in sessionStorage with a distinct user type\n    sessionStorage.setItem('authenticated', 'true');\n    sessionStorage.setItem('userType', 'regular'); // Distinguish from Asha workers\n    sessionStorage.setItem('userId', matchedUser.userId || ((_matchedUser$user = matchedUser.user) === null || _matchedUser$user === void 0 ? void 0 : _matchedUser$user.userId));\n    sessionStorage.setItem('username', matchedUser.username);\n    sessionStorage.setItem('loginMethod', 'face');\n\n    // Also store the login timestamp\n    sessionStorage.setItem('loginTime', new Date().toISOString());\n\n    // Optionally store some user data in localStorage for persistence\n    try {\n      var _matchedUser$user2;\n      localStorage.setItem('user', JSON.stringify({\n        userId: matchedUser.userId || ((_matchedUser$user2 = matchedUser.user) === null || _matchedUser$user2 === void 0 ? void 0 : _matchedUser$user2.userId),\n        username: matchedUser.username,\n        role: 'user',\n        lastLogin: new Date().toISOString()\n      }));\n    } catch (e) {\n      console.warn(\"Could not save to localStorage:\", e);\n    }\n\n    // Redirect the user\n    const redirectTo = (location === null || location === void 0 ? void 0 : (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.redirectAfterLogin) || \"/\";\n    navigate(redirectTo);\n  };\n\n  // Regular login handler\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      // Replace this with your actual login logic\n      // For example, API call to your authentication endpoint\n      console.log(\"Attempting login with:\", email);\n\n      // Simulating authentication check\n      // In a real application, you would validate credentials with your backend\n      const validLogin = email && password && password.length >= 6;\n      if (validLogin) {\n        var _location$state4;\n        console.log(\"Login successful\");\n\n        // Generate or retrieve a user ID (in a real app this would come from your auth system)\n        const userId = `user_${Date.now()}`;\n\n        // Store user session data\n        sessionStorage.setItem('authenticated', 'true');\n        sessionStorage.setItem('userType', 'regular'); // Distinguish from Asha workers\n        sessionStorage.setItem('userId', userId);\n        sessionStorage.setItem('username', email.split('@')[0]); // Use email as username\n        sessionStorage.setItem('userEmail', email);\n        sessionStorage.setItem('loginMethod', 'email');\n\n        // Redirect to the destination\n        navigate((location === null || location === void 0 ? void 0 : (_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.redirectAfterLogin) || \"/\");\n      } else {\n        setError(\"Invalid email or password\");\n      }\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      setError(err.message || \"Login failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"login-title\",\n        children: \"Face ID Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"face-auth-container\",\n        children: !isCapturing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-start-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"face-icon-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"face-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"login-instruction\",\n            children: \"Use your face to securely log in to your account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"start-face-auth-btn\",\n            onClick: startFaceAuthentication,\n            disabled: loading || !modelLoaded,\n            children: loading ? 'Initializing...' : 'Start Face Scan'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loader-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 27\n          }, this), modelLoaded && !loading && !isCapturing && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"system-status\",\n            children: \"System ready. Click button to begin.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [!scanningComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"face-position-guide\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Face Positioning Guide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"face-guide-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: faceCentered ? 'success' : '',\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"check-icon\",\n                  children: faceCentered ? '✓' : '○'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 23\n                }, this), \"Center your face in the frame\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: faceDistance === 'good' ? 'success' : '',\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"check-icon\",\n                  children: faceDistance === 'good' ? '✓' : '○'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 23\n                }, this), \"Keep a good distance from camera\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: faceDetected ? 'success' : '',\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"check-icon\",\n                  children: faceDetected ? '✓' : '○'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 23\n                }, this), \"Look directly at the camera\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              autoPlay: true,\n              muted: true,\n              playsInline: true,\n              className: \"face-video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasRef,\n              className: \"face-canvas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, this), isCapturing && !scanningComplete && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"scan-message\",\n                children: scanStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detection-progress-container\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detection-progress-bar\",\n                  style: {\n                    width: `${matchProgress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 21\n              }, this), scanTimeRemaining > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"scan-timer\",\n                style: {\n                  position: 'absolute',\n                  top: '10px',\n                  right: '10px',\n                  background: 'rgba(0,0,0,0.7)',\n                  color: 'white',\n                  padding: '5px 10px',\n                  borderRadius: '4px',\n                  fontSize: '14px',\n                  fontWeight: 'bold'\n                },\n                children: [scanTimeRemaining, \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 23\n              }, this), !faceDetected && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `face-position-feedback ${faceDistance}`,\n                children: [!faceCentered && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Move your face to the center\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 43\n                }, this), faceDistance === 'too_close' && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Move further from camera\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 58\n                }, this), faceDistance === 'too_far' && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Move closer to camera\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 56\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true), isAuthenticated && scanningComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-success-overlay\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"success-checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Authentication Successful!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Welcome back, \", faceName, \"!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"redirect-message\",\n                children: \"Redirecting to dashboard...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 19\n            }, this), !isAuthenticated && scanningComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-failed-overlay\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"failed-icon\",\n                children: \"\\u2715\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Authentication Failed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Face not recognized\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this), scanningComplete && !isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"retry-button\",\n              onClick: restartFaceAuth,\n              children: \"Try Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-button\",\n              onClick: () => {\n                stopVideoStream();\n                setIsCapturing(false);\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alternative-auth\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Don't have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          className: \"register-link\",\n          children: \"Register with Face ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 467,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OLDe31uR7CEJAUmruuuzjxY0rfw=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","useLocation","faceapi","Link","loadFaceDescriptor","getFaceFromFirebase","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","_location$state","_location$state2","isCapturing","setIsCapturing","loading","setLoading","error","setError","isAuthenticated","setIsAuthenticated","scanStatus","setScanStatus","matchProgress","setMatchProgress","faceDetected","setFaceDetected","faceName","setFaceName","scanningComplete","setScanningComplete","modelLoaded","setModelLoaded","faceCentered","setFaceCentered","faceDistance","setFaceDistance","videoRef","canvasRef","navigate","location","redirectAfterLogin","state","loginMessage","message","MIN_SCAN_TIME_MS","scanStartTime","setScanStartTime","scanTimeRemaining","setScanTimeRemaining","loadModels","MODEL_URL","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","err","_videoRef$current","current","srcObject","stream","getTracks","forEach","track","stop","timer","setTimeout","clearTimeout","startFaceAuthentication","Date","now","startVideoStream","navigator","mediaDevices","getUserMedia","video","width","ideal","height","facingMode","onloadedmetadata","play","then","fetchStoredFaceData","catch","storedFaceData","JSON","parse","localStorage","getItem","length","console","log","startFaceDetectionLoop","matchAttempts","maxAttempts","bestMatch","distance","user","detectFace","elapsedTime","remainingTime","Math","max","ceil","scanComplete","min","canvas","videoWidth","videoHeight","detection","detectSingleFace","TinyFaceDetectorOptions","withFaceLandmarks","withFaceDescriptor","context","getContext","clearRect","dims","matchDimensions","resizedResults","resizeResults","draw","drawDetections","drawFaceLandmarks","box","centerX","x","centerY","y","canvasCenterX","canvasCenterY","isCentered","abs","faceRatio","userData","storedDescriptor","username","fbError","warn","descriptor","Float32Array","userId","euclideanDistance","toFixed","MATCH_THRESHOLD","sessionStorage","setItem","stringify","stopVideoStream","compareError","FALLBACK_THRESHOLD","requestAnimationFrame","_videoRef$current2","restartFaceAuth","handleSuccessfulLogin","handleSuccessfulFaceLogin","matchedUser","_matchedUser$user","_location$state3","toISOString","_matchedUser$user2","role","lastLogin","e","redirectTo","handleLogin","preventDefault","email","validLogin","password","_location$state4","split","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","ref","autoPlay","muted","playsInline","style","position","top","right","background","color","padding","borderRadius","fontSize","fontWeight","to","_c","$RefreshReg$"],"sources":["D:/Movies/Aniket/test2/test/src/Login.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport * as faceapi from 'face-api.js';\r\nimport { Link } from 'react-router-dom';\r\nimport './Login.css';\r\nimport { loadFaceDescriptor } from './services/localFaceStorage';\r\nimport { getFaceFromFirebase } from './services/firebaseFaceService';\r\n\r\nconst Login = () => {\r\n  // Face authentication state\r\n  const [isCapturing, setIsCapturing] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [scanStatus, setScanStatus] = useState('');\r\n  const [matchProgress, setMatchProgress] = useState(0);\r\n  const [faceDetected, setFaceDetected] = useState(false);\r\n  const [faceName, setFaceName] = useState('');\r\n  const [scanningComplete, setScanningComplete] = useState(false);\r\n  const [modelLoaded, setModelLoaded] = useState(false);\r\n\r\n  // Face position feedback\r\n  const [faceCentered, setFaceCentered] = useState(false);\r\n  const [faceDistance, setFaceDistance] = useState('unknown');\r\n  \r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const redirectAfterLogin = location?.state?.redirectAfterLogin || \"/\";\r\n  const loginMessage = location?.state?.message;\r\n\r\n  // Add minimum scan duration\r\n  const MIN_SCAN_TIME_MS = 5000; // 5 seconds minimum scan time\r\n  const [scanStartTime, setScanStartTime] = useState(null);\r\n  const [scanTimeRemaining, setScanTimeRemaining] = useState(0);\r\n\r\n  // Load models on component mount\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      try {\r\n        setScanStatus('Initializing face recognition...');\r\n        setLoading(true);\r\n        \r\n        const MODEL_URL = 'https://justadudewhohacks.github.io/face-api.js/models';\r\n        await Promise.all([\r\n          faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)\r\n        ]);\r\n        \r\n        setModelLoaded(true);\r\n        setLoading(false);\r\n        setScanStatus('Face models loaded. Ready to start authentication.');\r\n      } catch (err) {\r\n        setError('Error loading face recognition models. Please refresh and try again.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadModels();\r\n    \r\n    // Cleanup function\r\n    return () => {\r\n      if (videoRef.current?.srcObject) {\r\n        const stream = videoRef.current.srcObject;\r\n        stream.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Add display for the message from redirect\r\n  useEffect(() => {\r\n    if (loginMessage) {\r\n      // Display the login message\r\n      setError(loginMessage);\r\n      \r\n      // Clear the message after 5 seconds\r\n      const timer = setTimeout(() => {\r\n        setError(null);\r\n      }, 5000);\r\n      \r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [loginMessage]);\r\n\r\n  const startFaceAuthentication = async () => {\r\n    setIsCapturing(true);\r\n    setFaceDetected(false);\r\n    setIsAuthenticated(false);\r\n    setError('');\r\n    setScanningComplete(false);\r\n    setScanStartTime(Date.now()); // Record scan start time\r\n    setScanTimeRemaining(MIN_SCAN_TIME_MS / 1000);\r\n    \r\n    try {\r\n      setScanStatus('Starting camera...');\r\n      startVideoStream();\r\n    } catch (err) {\r\n      setError('Error starting authentication: ' + err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const startVideoStream = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ \r\n        video: {\r\n          width: { ideal: 640 },\r\n          height: { ideal: 480 },\r\n          facingMode: \"user\"\r\n        }\r\n      });\r\n      \r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.onloadedmetadata = () => {\r\n          videoRef.current.play()\r\n            .then(() => {\r\n              fetchStoredFaceData();\r\n            })\r\n            .catch(err => {\r\n              setError('Error playing video: ' + err.message);\r\n              setLoading(false);\r\n            });\r\n        };\r\n      }\r\n    } catch (err) {\r\n      setError('Camera access failed: ' + err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchStoredFaceData = async () => {\r\n    setScanStatus('Looking for registered faces...');\r\n    \r\n    try {\r\n      // Get stored face data from localStorage\r\n      const storedFaceData = JSON.parse(localStorage.getItem('face_descriptors') || '[]');\r\n      \r\n      if (!storedFaceData || storedFaceData.length === 0) {\r\n        setScanStatus('No registered faces found. Please register first.');\r\n        setError('No faces are registered for recognition');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      console.log(`Found ${storedFaceData.length} registered faces`);\r\n      startFaceDetectionLoop(storedFaceData);\r\n    } catch (err) {\r\n      setError('Error fetching face data: ' + err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const startFaceDetectionLoop = (storedFaceData) => {\r\n    if (!videoRef.current || !canvasRef.current) return;\r\n    \r\n    let matchAttempts = 0;\r\n    const maxAttempts = 30;\r\n    let bestMatch = { distance: 1, user: null };\r\n    \r\n    const detectFace = async () => {\r\n      if (!videoRef.current || !canvasRef.current || matchAttempts >= maxAttempts) return;\r\n      \r\n      // Calculate time elapsed and remaining\r\n      const elapsedTime = Date.now() - scanStartTime;\r\n      const remainingTime = Math.max(0, Math.ceil((MIN_SCAN_TIME_MS - elapsedTime) / 1000));\r\n      setScanTimeRemaining(remainingTime);\r\n      const scanComplete = elapsedTime >= MIN_SCAN_TIME_MS;\r\n      \r\n      try {\r\n        // Update status message to include time remaining\r\n        if (!scanComplete) {\r\n          setScanStatus(`Scanning your face... ${remainingTime}s remaining`);\r\n        } else {\r\n          setScanStatus(`Matching face (${matchAttempts + 1}/${maxAttempts})...`);\r\n        }\r\n        \r\n        // Update progress to reflect both time and matching progress\r\n        setMatchProgress(Math.min(100, ((elapsedTime / MIN_SCAN_TIME_MS) * 50) + \r\n            (scanComplete ? (matchAttempts / maxAttempts) * 50 : 0)));\r\n        \r\n        const video = videoRef.current;\r\n        const canvas = canvasRef.current;\r\n        \r\n        canvas.width = video.videoWidth;\r\n        canvas.height = video.videoHeight;\r\n        \r\n        const detection = await faceapi\r\n          .detectSingleFace(video, new faceapi.TinyFaceDetectorOptions())\r\n          .withFaceLandmarks()\r\n          .withFaceDescriptor();\r\n\r\n        if (detection) {\r\n          // Draw detection on canvas\r\n          const context = canvas.getContext('2d');\r\n          context.clearRect(0, 0, canvas.width, canvas.height);\r\n          \r\n          const dims = faceapi.matchDimensions(canvas, video, true);\r\n          const resizedResults = faceapi.resizeResults(detection, dims);\r\n          \r\n          // Draw face detection box and landmarks\r\n          faceapi.draw.drawDetections(canvas, [resizedResults]);\r\n          faceapi.draw.drawFaceLandmarks(canvas, [resizedResults]);\r\n          \r\n          // Calculate face position feedback\r\n          const box = detection.detection.box;\r\n          const centerX = box.x + box.width / 2;\r\n          const centerY = box.y + box.height / 2;\r\n          const canvasCenterX = canvas.width / 2;\r\n          const canvasCenterY = canvas.height / 2;\r\n          \r\n          // Check if face is centered\r\n          const isCentered = \r\n            Math.abs(centerX - canvasCenterX) < canvas.width * 0.15 && \r\n            Math.abs(centerY - canvasCenterY) < canvas.height * 0.15;\r\n          setFaceCentered(isCentered);\r\n          \r\n          // Check face size/distance\r\n          const faceRatio = box.width / canvas.width;\r\n          if (faceRatio < 0.2) {\r\n            setFaceDistance('too_far');\r\n          } else if (faceRatio > 0.6) {\r\n            setFaceDistance('too_close');\r\n          } else {\r\n            setFaceDistance('good');\r\n          }\r\n          \r\n          // Only proceed with matching if minimum scan time has elapsed\r\n          if (scanComplete) {\r\n            setFaceDetected(true);\r\n            \r\n            // Compare with stored face descriptors\r\n            for (const userData of storedFaceData) {\r\n              try {\r\n                let storedDescriptor = null;\r\n                \r\n                // First try to get descriptor from Firebase if we have username\r\n                if (userData.username) {\r\n                  try {\r\n                    // Modified to use username as key\r\n                    storedDescriptor = await getFaceFromFirebase(userData.username);\r\n                    if (storedDescriptor) {\r\n                      console.log(`Retrieved face descriptor for ${userData.username} from Firebase`);\r\n                    }\r\n                  } catch (fbError) {\r\n                    console.warn(`Failed to get descriptor for ${userData.username} from Firebase:`, fbError);\r\n                  }\r\n                }\r\n                \r\n                // If no descriptor from Firebase, try to get from localStorage\r\n                if (!storedDescriptor && userData.descriptor) {\r\n                  storedDescriptor = new Float32Array(userData.descriptor);\r\n                  console.log(`Using face descriptor from localStorage for ${userData.username || userData.userId}`);\r\n                }\r\n                \r\n                // Skip this user if we couldn't get a descriptor\r\n                if (!storedDescriptor) continue;\r\n                \r\n                // Calculate the similarity distance between detected face and stored face\r\n                const distance = faceapi.euclideanDistance(detection.descriptor, storedDescriptor);\r\n                \r\n                console.log(`Distance for ${userData.username || userData.userId}: ${distance.toFixed(4)}`);\r\n                \r\n                // Keep track of the best match so far\r\n                if (distance < bestMatch.distance) {\r\n                  bestMatch = { distance, user: userData };\r\n                }\r\n                \r\n                // If we have a very close match, stop early\r\n                const MATCH_THRESHOLD = 0.45; // Lower is stricter matching\r\n                if (distance < MATCH_THRESHOLD) {\r\n                  setIsAuthenticated(true);\r\n                  setFaceName(userData.username || 'User');\r\n                  setScanStatus(`Welcome back, ${userData.username || 'User'}!`);\r\n                  setLoading(false);\r\n                  setScanningComplete(true);\r\n                  \r\n                  // Sign in the user\r\n                  sessionStorage.setItem('authenticated', 'true');\r\n                  sessionStorage.setItem('currentUser', JSON.stringify(userData));\r\n                  \r\n                  // Redirect after a short delay\r\n                  setTimeout(() => {\r\n                    stopVideoStream();\r\n                    navigate('/');\r\n                  }, 2000);\r\n                  return;\r\n                }\r\n              } catch (compareError) {\r\n                console.error('Error comparing face descriptors:', compareError);\r\n              }\r\n            }\r\n            \r\n            matchAttempts++;\r\n            \r\n            if (matchAttempts >= maxAttempts) {\r\n              // After all attempts, if we have a reasonable match, use it\r\n              const FALLBACK_THRESHOLD = 0.6; // More lenient threshold for fallback matching\r\n              if (bestMatch.distance < FALLBACK_THRESHOLD) {\r\n                setIsAuthenticated(true);\r\n                setFaceName(bestMatch.user.username || 'User');\r\n                setScanStatus(`Welcome back, ${bestMatch.user.username || 'User'}!`);\r\n                \r\n                // Sign in the user\r\n                sessionStorage.setItem('authenticated', 'true');\r\n                sessionStorage.setItem('currentUser', JSON.stringify(bestMatch.user));\r\n                \r\n                setTimeout(() => {\r\n                  stopVideoStream();\r\n                  navigate('/');\r\n                }, 2000);\r\n              } else {\r\n                setScanStatus('Face not recognized. Please try again or register a new account.');\r\n                setError('No matching face found');\r\n              }\r\n              setLoading(false);\r\n              setScanningComplete(true);\r\n            } else {\r\n              requestAnimationFrame(detectFace);\r\n            }\r\n          } else {\r\n            // Continue scanning until minimum time requirement met\r\n            requestAnimationFrame(detectFace);\r\n          }\r\n        } else {\r\n          setScanStatus(`No face detected. Please position your face in the frame. ${remainingTime}s remaining`);\r\n          setFaceDetected(false);\r\n          \r\n          // Only count as an attempt if minimum scan time has passed\r\n          if (scanComplete) {\r\n            matchAttempts++;\r\n            \r\n            if (matchAttempts >= maxAttempts) {\r\n              setScanStatus('Face not detected. Please try again.');\r\n              setLoading(false);\r\n              setScanningComplete(true);\r\n            } else {\r\n              requestAnimationFrame(detectFace);\r\n            }\r\n          } else {\r\n            requestAnimationFrame(detectFace);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        setError('Error during face detection: ' + err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    detectFace();\r\n  };\r\n\r\n  const stopVideoStream = () => {\r\n    if (videoRef.current?.srcObject) {\r\n      const stream = videoRef.current.srcObject;\r\n      stream.getTracks().forEach(track => track.stop());\r\n      videoRef.current.srcObject = null;\r\n    }\r\n    setIsCapturing(false);\r\n  };\r\n\r\n  const restartFaceAuth = () => {\r\n    if (canvasRef.current) {\r\n      const context = canvasRef.current.getContext('2d');\r\n      context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    }\r\n    stopVideoStream();\r\n    setMatchProgress(0);\r\n    setFaceDetected(false);\r\n    setIsAuthenticated(false);\r\n    setScanningComplete(false);\r\n    setError('');\r\n    startFaceAuthentication();\r\n  };\r\n\r\n  // Handle successful login\r\n  const handleSuccessfulLogin = (userData) => {\r\n    // Sign in the user\r\n    sessionStorage.setItem('authenticated', 'true');\r\n    sessionStorage.setItem('currentUser', JSON.stringify(userData));\r\n    \r\n    // Redirect to the page that required authentication\r\n    navigate(redirectAfterLogin);\r\n  };\r\n\r\n  // Modified function for handling successful face login\r\n  const handleSuccessfulFaceLogin = (matchedUser) => {\r\n    if (!matchedUser || !matchedUser.username) {\r\n      setError(\"Authentication failed. User data incomplete.\");\r\n      return;\r\n    }\r\n  \r\n    console.log(\"Face authentication successful for:\", matchedUser.username);\r\n    \r\n    // Store user session data in sessionStorage with a distinct user type\r\n    sessionStorage.setItem('authenticated', 'true');\r\n    sessionStorage.setItem('userType', 'regular'); // Distinguish from Asha workers\r\n    sessionStorage.setItem('userId', matchedUser.userId || matchedUser.user?.userId);\r\n    sessionStorage.setItem('username', matchedUser.username);\r\n    sessionStorage.setItem('loginMethod', 'face');\r\n    \r\n    // Also store the login timestamp\r\n    sessionStorage.setItem('loginTime', new Date().toISOString());\r\n    \r\n    // Optionally store some user data in localStorage for persistence\r\n    try {\r\n      localStorage.setItem('user', JSON.stringify({\r\n        userId: matchedUser.userId || matchedUser.user?.userId,\r\n        username: matchedUser.username,\r\n        role: 'user',\r\n        lastLogin: new Date().toISOString()\r\n      }));\r\n    } catch (e) {\r\n      console.warn(\"Could not save to localStorage:\", e);\r\n    }\r\n    \r\n    // Redirect the user\r\n    const redirectTo = location?.state?.redirectAfterLogin || \"/\";\r\n    navigate(redirectTo);\r\n  };\r\n  \r\n  // Regular login handler\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Replace this with your actual login logic\r\n      // For example, API call to your authentication endpoint\r\n      console.log(\"Attempting login with:\", email);\r\n      \r\n      // Simulating authentication check\r\n      // In a real application, you would validate credentials with your backend\r\n      const validLogin = email && password && password.length >= 6;\r\n      \r\n      if (validLogin) {\r\n        console.log(\"Login successful\");\r\n        \r\n        // Generate or retrieve a user ID (in a real app this would come from your auth system)\r\n        const userId = `user_${Date.now()}`;\r\n        \r\n        // Store user session data\r\n        sessionStorage.setItem('authenticated', 'true');\r\n        sessionStorage.setItem('userType', 'regular'); // Distinguish from Asha workers\r\n        sessionStorage.setItem('userId', userId);\r\n        sessionStorage.setItem('username', email.split('@')[0]); // Use email as username\r\n        sessionStorage.setItem('userEmail', email);\r\n        sessionStorage.setItem('loginMethod', 'email');\r\n        \r\n        // Redirect to the destination\r\n        navigate(location?.state?.redirectAfterLogin || \"/\");\r\n      } else {\r\n        setError(\"Invalid email or password\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Login error:\", err);\r\n      setError(err.message || \"Login failed. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-card\">\r\n        <h1 className=\"login-title\">Face ID Login</h1>\r\n        \r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        \r\n        <div className=\"face-auth-container\">\r\n          {!isCapturing ? (\r\n            <div className=\"login-start-section\">\r\n              <div className=\"face-icon-container\">\r\n                <div className=\"face-icon\"></div>\r\n              </div>\r\n              \r\n              <p className=\"login-instruction\">\r\n                Use your face to securely log in to your account\r\n              </p>\r\n              \r\n              <button \r\n                className=\"start-face-auth-btn\"\r\n                onClick={startFaceAuthentication}\r\n                disabled={loading || !modelLoaded}\r\n              >\r\n                {loading ? 'Initializing...' : 'Start Face Scan'}\r\n              </button>\r\n              \r\n              {loading && <div className=\"loader-circle\"></div>}\r\n              \r\n              {modelLoaded && !loading && !isCapturing && (\r\n                <p className=\"system-status\">System ready. Click button to begin.</p>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {!scanningComplete && (\r\n                <div className=\"face-position-guide\">\r\n                  <h3>Face Positioning Guide</h3>\r\n                  <ul className=\"face-guide-list\">\r\n                    <li className={faceCentered ? 'success' : ''}>\r\n                      <span className=\"check-icon\">{faceCentered ? '✓' : '○'}</span>\r\n                      Center your face in the frame\r\n                    </li>\r\n                    <li className={faceDistance === 'good' ? 'success' : ''}>\r\n                      <span className=\"check-icon\">{faceDistance === 'good' ? '✓' : '○'}</span>\r\n                      Keep a good distance from camera\r\n                    </li>\r\n                    <li className={faceDetected ? 'success' : ''}>\r\n                      <span className=\"check-icon\">{faceDetected ? '✓' : '○'}</span>\r\n                      Look directly at the camera\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              \r\n              <div className=\"video-container\">\r\n                <video\r\n                  ref={videoRef}\r\n                  autoPlay\r\n                  muted\r\n                  playsInline\r\n                  className=\"face-video\"\r\n                />\r\n                <canvas\r\n                  ref={canvasRef}\r\n                  className=\"face-canvas\"\r\n                />\r\n                \r\n                {isCapturing && !scanningComplete && (\r\n                  <>\r\n                    <div className=\"scan-message\">{scanStatus}</div>\r\n                    {/* Progress bar */}\r\n                    <div className=\"detection-progress-container\">\r\n                      <div \r\n                        className=\"detection-progress-bar\" \r\n                        style={{width: `${matchProgress}%`}}\r\n                      ></div>\r\n                    </div>\r\n                    \r\n                    {/* Add visible timer during scan */}\r\n                    {scanTimeRemaining > 0 && (\r\n                      <div className=\"scan-timer\" style={{\r\n                        position: 'absolute',\r\n                        top: '10px',\r\n                        right: '10px',\r\n                        background: 'rgba(0,0,0,0.7)',\r\n                        color: 'white',\r\n                        padding: '5px 10px',\r\n                        borderRadius: '4px',\r\n                        fontSize: '14px',\r\n                        fontWeight: 'bold'\r\n                      }}>\r\n                        {scanTimeRemaining}s\r\n                      </div>\r\n                    )}\r\n                    \r\n                    {/* Face position feedback */}\r\n                    {!faceDetected && (\r\n                      <div className={`face-position-feedback ${faceDistance}`}>\r\n                        {!faceCentered && <div>Move your face to the center</div>}\r\n                        {faceDistance === 'too_close' && <div>Move further from camera</div>}\r\n                        {faceDistance === 'too_far' && <div>Move closer to camera</div>}\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n                \r\n                {isAuthenticated && scanningComplete && (\r\n                  <div className=\"auth-success-overlay\">\r\n                    <div className=\"success-checkmark\"></div>\r\n                    <h3>Authentication Successful!</h3>\r\n                    <p>Welcome back, {faceName}!</p>\r\n                    <p className=\"redirect-message\">Redirecting to dashboard...</p>\r\n                  </div>\r\n                )}\r\n                \r\n                {!isAuthenticated && scanningComplete && (\r\n                  <div className=\"auth-failed-overlay\">\r\n                    <div className=\"failed-icon\">✕</div>\r\n                    <h3>Authentication Failed</h3>\r\n                    <p>Face not recognized</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              {scanningComplete && !isAuthenticated && (\r\n                <div className=\"auth-action-buttons\">\r\n                  <button \r\n                    className=\"retry-button\"\r\n                    onClick={restartFaceAuth}\r\n                  >\r\n                    Try Again\r\n                  </button>\r\n                  <button\r\n                    className=\"cancel-button\"\r\n                    onClick={() => {\r\n                      stopVideoStream();\r\n                      setIsCapturing(false);\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"alternative-auth\">\r\n          <p>Don't have an account?</p>\r\n          <Link to=\"/signup\" className=\"register-link\">\r\n            Register with Face ID\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}