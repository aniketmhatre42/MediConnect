{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movies\\\\Aniket\\\\test2\\\\test\\\\src\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport * as faceapi from 'face-api.js';\nimport './Signup.css';\nimport { saveFaceDescriptor, hasFaceDescriptor } from './services/localFaceStorage';\nimport { auth } from './firebase/config';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { saveFaceToFirebase } from './services/firebaseFaceService'; // Add this import\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  // Increase detection samples for better face data quality\n  const TOTAL_DETECTIONS_NEEDED = 15; // Increased from 5 to 15 for higher quality data\n  const MIN_SCAN_TIME_MS = 5000; // Minimum 5 seconds scan time\n\n  const [username, setUsername] = useState('');\n  const [faceDetected, setFaceDetected] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [isModelLoaded, setIsModelLoaded] = useState(false);\n  const [isCapturing, setIsCapturing] = useState(false);\n  const [scanMessage, setScanMessage] = useState('');\n  const [capturedDescriptor, setCapturedDescriptor] = useState(null);\n  const [videoStream, setVideoStream] = useState(null);\n  const [registrationStep, setRegistrationStep] = useState('username'); // 'username', 'camera', 'processing', 'complete'\n  const [progress, setProgress] = useState(0);\n  const [faceDataInfo, setFaceDataInfo] = useState(null);\n  const [detectionCount, setDetectionCount] = useState(0);\n  const [usernameExists, setUsernameExists] = useState(false);\n  const [showUpdateConfirm, setShowUpdateConfirm] = useState(false);\n  const [existingUserData, setExistingUserData] = useState(null);\n\n  // Add state for face positioning feedback\n  const [faceCentered, setFaceCentered] = useState(false);\n  const [faceDistance, setFaceDistance] = useState('unknown'); // 'too_close', 'good', 'too_far'\n\n  // Add state for scan timer\n  const [scanStartTime, setScanStartTime] = useState(null);\n  const [scanTimeRemaining, setScanTimeRemaining] = useState(0);\n  const [qualityScore, setQualityScore] = useState(0);\n  const [detectionScores, setDetectionScores] = useState([]);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const navigate = useNavigate();\n\n  // Load face-api models\n  useEffect(() => {\n    const loadModels = async () => {\n      try {\n        setLoading(true);\n        const MODEL_URL = 'https://justadudewhohacks.github.io/face-api.js/models';\n        await Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)]);\n        setIsModelLoaded(true);\n        setLoading(false);\n      } catch (err) {\n        setError('Error loading face detection models: ' + err.message);\n        setLoading(false);\n      }\n    };\n    loadModels();\n  }, []);\n\n  // Check if username already exists\n  useEffect(() => {\n    if (username.trim()) {\n      checkUsernameExists(username);\n    } else {\n      setUsernameExists(false);\n      setExistingUserData(null);\n    }\n  }, [username]);\n  const checkUsernameExists = async username => {\n    try {\n      // Get stored face data from localStorage\n      const storedFaceData = JSON.parse(localStorage.getItem('face_descriptors') || '[]');\n\n      // Check if username already exists\n      const existingUser = storedFaceData.find(data => data.username === username);\n      if (existingUser) {\n        setUsernameExists(true);\n        setExistingUserData(existingUser);\n        console.log(\"Username already exists:\", existingUser);\n      } else {\n        setUsernameExists(false);\n        setExistingUserData(null);\n      }\n    } catch (err) {\n      console.error(\"Error checking username:\", err);\n      setUsernameExists(false);\n      setExistingUserData(null);\n    }\n  };\n  const startCamera = async () => {\n    if (!username.trim()) {\n      setError('Please enter a username first');\n      return;\n    }\n    try {\n      setIsCapturing(true);\n      setError('');\n      setScanStartTime(Date.now()); // Record scan start time\n      setScanTimeRemaining(MIN_SCAN_TIME_MS / 1000);\n      setDetectionScores([]);\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: {\n            ideal: 640\n          },\n          height: {\n            ideal: 480\n          },\n          facingMode: 'user'\n        }\n      });\n      setVideoStream(stream);\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        videoRef.current.onloadedmetadata = () => {\n          videoRef.current.play().catch(err => {\n            console.error(\"Error playing video:\", err);\n            setError(\"Error starting video playback\");\n          });\n        };\n      }\n    } catch (err) {\n      console.error(\"Camera access error:\", err);\n      setError(`Camera access failed: ${err.message}`);\n      setIsCapturing(false);\n    }\n  };\n\n  // Clean up video stream when component unmounts\n  useEffect(() => {\n    return () => {\n      if (videoStream) {\n        videoStream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [videoStream]);\n  const stopCamera = () => {\n    if (videoStream) {\n      videoStream.getTracks().forEach(track => track.stop());\n      setVideoStream(null);\n    }\n    if (videoRef.current) {\n      videoRef.current.srcObject = null;\n    }\n    setIsCapturing(false);\n  };\n  const saveFaceData = async () => {\n    if (!capturedDescriptor || !username) {\n      setError('Face data or username missing');\n      return;\n    }\n    try {\n      setRegistrationStep('processing');\n\n      // Create a user ID - if we're using Firebase auth, use that ID\n      let userId = `user_${Date.now()}`;\n      try {\n        // Try to create a Firebase user (if we have email/password)\n        // Generate a valid email from username for Firebase\n        const email = `${username.replace(/\\s+/g, '')}@example.com`;\n        const password = `password123`; // Placeholder password\n\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n        userId = userCredential.user.uid;\n        console.log(\"Firebase user created with ID:\", userId);\n      } catch (authErr) {\n        console.warn(\"Could not create Firebase user, using local ID:\", authErr);\n      }\n      console.log(\"Starting face data save process...\");\n      console.log(\"Descriptor data type:\", capturedDescriptor instanceof Float32Array ? \"Float32Array\" : typeof capturedDescriptor);\n      console.log(\"Descriptor length:\", capturedDescriptor.length);\n\n      // Store face data both in Firebase and localStorage for backup\n      // Enhanced data including quality metrics\n      try {\n        const firebaseSaved = await saveFaceToFirebase(userId, username, capturedDescriptor, {\n          quality: qualityScore,\n          detectionCount: TOTAL_DETECTIONS_NEEDED,\n          scanDuration: Date.now() - scanStartTime,\n          scores: detectionScores\n        });\n        if (firebaseSaved) {\n          console.log(\"Face data successfully saved to storage\");\n        } else {\n          console.warn(\"Face data save returned false - check for errors\");\n        }\n      } catch (saveErr) {\n        console.warn(\"Error saving to Firebase, will continue with local storage:\", saveErr);\n        // Continue with local storage only\n      }\n\n      // Save additional user data in localStorage\n      const userData = {\n        userId,\n        username,\n        descriptor: Array.from(capturedDescriptor),\n        timestamp: new Date().toISOString()\n      };\n\n      // Get existing data from local storage\n      let existingData = [];\n      try {\n        const storedData = localStorage.getItem('face_descriptors');\n        existingData = storedData ? JSON.parse(storedData) : [];\n      } catch (parseErr) {\n        console.warn('Could not parse existing face data, creating new storage');\n      }\n\n      // Ensure existingData is an array\n      if (!Array.isArray(existingData)) existingData = [];\n\n      // Check if we're updating an existing user's face data\n      if (usernameExists) {\n        // Replace the data for the existing user\n        const updatedData = existingData.filter(item => item.username !== username);\n        updatedData.push(userData);\n        localStorage.setItem('face_descriptors', JSON.stringify(updatedData));\n      } else {\n        // Add new user data\n        existingData.push(userData);\n        localStorage.setItem('face_descriptors', JSON.stringify(existingData));\n      }\n\n      // Update the storage location info display to be more accurate\n      setFaceDataInfo({\n        storageKey: 'face_descriptors',\n        location: 'Firebase Realtime Database and Browser Local Storage',\n        timestamp: new Date().toISOString(),\n        dataSize: capturedDescriptor.length * 4,\n        // Float32 is 4 bytes per element\n        isUpdate: usernameExists,\n        userId\n      });\n      stopCamera();\n      setRegistrationStep('complete');\n      // Show countdown for redirect\n      let countdown = 5;\n      const countdownInterval = setInterval(() => {\n        countdown--;\n        setProgress(countdown);\n        if (countdown <= 0) {\n          clearInterval(countdownInterval);\n          navigate('/login');\n        }\n      }, 1000);\n    } catch (err) {\n      setError('Failed to save face data: ' + err.message);\n      setRegistrationStep('camera'); // Go back to camera step on error\n    }\n  };\n  const detectFace = async () => {\n    if (!videoRef.current || !canvasRef.current) return;\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    setScanMessage('Analyzing face...');\n\n    // Calculate remaining scan time\n    const elapsedTime = Date.now() - scanStartTime;\n    const remainingTime = Math.max(0, Math.ceil((MIN_SCAN_TIME_MS - elapsedTime) / 1000));\n    setScanTimeRemaining(remainingTime);\n    try {\n      const detection = await faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions({\n        scoreThreshold: 0.5\n      })).withFaceLandmarks().withFaceDescriptor();\n      if (detection) {\n        console.log(\"Face detected in video frame\");\n        // Draw the detection\n        const context = canvas.getContext('2d');\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        const dims = faceapi.matchDimensions(canvas, video, true);\n        const resizedResults = faceapi.resizeResults(detection, dims);\n        faceapi.draw.drawDetections(canvas, [resizedResults]);\n        faceapi.draw.drawFaceLandmarks(canvas, [resizedResults]);\n\n        // Make sure the descriptor is a proper Float32Array\n        const normalizedDescriptor = new Float32Array(detection.descriptor);\n\n        // Store detection score for quality assessment\n        setDetectionScores(prev => [...prev, detection.detection.score]);\n        const avgScore = [...detectionScores, detection.detection.score].reduce((sum, score) => sum + score, 0) / (detectionScores.length + 1);\n        setQualityScore(avgScore * 100);\n\n        // Calculate face position metrics\n        // ...existing code...\n\n        // Increment detection count only if we've passed minimum scan time\n        const scanComplete = elapsedTime >= MIN_SCAN_TIME_MS;\n        if (scanComplete) {\n          setDetectionCount(prev => prev + 1);\n        }\n        if (detectionCount >= TOTAL_DETECTIONS_NEEDED && scanComplete) {\n          // Set face detected and descriptor\n          setCapturedDescriptor(normalizedDescriptor);\n          setFaceDetected(true);\n\n          // Check if this face already exists under a different username\n          if (!faceCheckDone && !checkingFace) {\n            setFaceCheckDone(true);\n            setCheckingFace(true);\n            console.log(\"Face detected, checking for existing registrations...\");\n            checkForExistingFace(normalizedDescriptor);\n          }\n          setScanMessage('Face detected! Click Register to save.');\n          return; // Stop detection once we have enough samples and minimum time passed\n        } else {\n          // Show either time remaining or detection progress based on which is limiting factor\n          if (!scanComplete) {\n            setScanMessage(`Keep still... ${remainingTime}s remaining`);\n          } else {\n            const progressPercent = Math.round(detectionCount / TOTAL_DETECTIONS_NEEDED * 100);\n            setScanMessage(`Collecting face data: ${progressPercent}% (Quality: ${Math.round(qualityScore)}%)`);\n          }\n\n          // Continue detection as we need more samples\n          if (isCapturing) {\n            requestAnimationFrame(detectFace);\n          }\n        }\n      } else {\n        setScanMessage('No face detected. Please position your face in the frame.');\n        setFaceDetected(false);\n\n        // Continue detection if we haven't found a face yet\n        if (isCapturing) {\n          requestAnimationFrame(detectFace);\n        }\n      }\n    } catch (err) {\n      setScanMessage('Error during detection: ' + err.message);\n      console.error('Face detection error:', err);\n\n      // Continue detection despite error\n      if (isCapturing) {\n        requestAnimationFrame(detectFace);\n      }\n    }\n  };\n  useEffect(() => {\n    let animationFrameId;\n    if (isCapturing && videoRef.current && videoStream) {\n      const detectFace = async () => {\n        if (!videoRef.current || !canvasRef.current) return;\n        const video = videoRef.current;\n        const canvas = canvasRef.current;\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        setScanMessage('Analyzing face...');\n        try {\n          const detection = await faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor();\n          if (detection) {\n            // Draw the detection\n            const context = canvas.getContext('2d');\n            context.clearRect(0, 0, canvas.width, canvas.height);\n            const dims = faceapi.matchDimensions(canvas, video, true);\n            const resizedResults = faceapi.resizeResults(detection, dims);\n            faceapi.draw.drawDetections(canvas, [resizedResults]);\n            faceapi.draw.drawFaceLandmarks(canvas, [resizedResults]);\n            // Use TOTAL_DETECTIONS_NEEDED here instead of totalDetectionsNeeded\n            setCapturedDescriptor(detection.descriptor);\n            setFaceDetected(true);\n            setScanMessage('Face detected! Click Register to save.');\n          } else {\n            setScanMessage('No face detected. Please position your face in the frame.');\n            setFaceDetected(false);\n          }\n          if (isCapturing) {\n            animationFrameId = requestAnimationFrame(detectFace);\n          }\n        } catch (err) {\n          setScanMessage('Error during detection: ' + err.message);\n        }\n      };\n      videoRef.current.onplay = () => {\n        detectFace();\n      };\n    }\n    return () => {\n      if (animationFrameId) {\n        cancelAnimationFrame(animationFrameId);\n      }\n    };\n  }, [isCapturing, videoStream]);\n\n  // Handle clicking next from username screen\n  const handleUsernameNext = () => {\n    if (username.trim()) {\n      if (usernameExists && !showUpdateConfirm) {\n        setShowUpdateConfirm(true);\n      } else {\n        setShowUpdateConfirm(false);\n        setRegistrationStep('camera');\n        startCamera();\n      }\n    } else {\n      setError('Please enter a username');\n    }\n  };\n\n  // Handle confirmation for updating existing user's face data\n  const handleUpdateConfirm = confirmed => {\n    setShowUpdateConfirm(false);\n    if (confirmed) {\n      setRegistrationStep('camera');\n      startCamera();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"signup-title\",\n        children: \"Face Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registration-progress\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-steps\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `step ${registrationStep === 'username' ? 'active' : ''} ${registrationStep !== 'username' ? 'completed' : ''}`,\n            children: \"1. Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `step ${registrationStep === 'camera' ? 'active' : ''} ${registrationStep === 'complete' ? 'completed' : ''}`,\n            children: \"2. Face Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `step ${registrationStep === 'complete' ? 'active' : ''}`,\n            children: \"3. Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 19\n      }, this), registrationStep === 'username' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"face-icon-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"face-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Choose Your Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"step-description\",\n          children: \"This username will be associated with your face data.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your username\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, this), usernameExists && !showUpdateConfirm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username-exists-warning\",\n          children: \"Username already exists! You can update the face data for this user.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 15\n        }, this), showUpdateConfirm ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"update-confirmation\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This username already exists. Do you want to update the face data for this user?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"confirmation-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"confirm-btn\",\n              onClick: () => handleUpdateConfirm(true),\n              children: \"Yes, Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-btn\",\n              onClick: () => handleUpdateConfirm(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-button\",\n          onClick: handleUsernameNext,\n          children: usernameExists ? 'Update Face Data' : 'Continue to Face Scan'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 11\n      }, this), registrationStep === 'camera' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"face-position-guide\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Face Positioning Guide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"face-guide-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: faceCentered ? 'success' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"check-icon\",\n                children: faceCentered ? '✓' : '○'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 19\n              }, this), \"Center your face in the frame\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: faceDistance === 'good' ? 'success' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"check-icon\",\n                children: faceDistance === 'good' ? '✓' : '○'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 19\n              }, this), \"Keep a good distance (not too close/far)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: faceDetected ? 'success' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"check-icon\",\n                children: faceDetected ? '✓' : '○'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 19\n              }, this), \"Look directly at the camera\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 13\n        }, this), !isCapturing ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-button\",\n          onClick: startCamera,\n          disabled: loading || !isModelLoaded || !username.trim(),\n          children: loading ? 'Loading...' : 'Start Camera'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            playsInline: true,\n            muted: true,\n            style: {\n              display: 'block',\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            style: {\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scan-message\",\n            children: scanMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detection-progress-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detection-progress-bar\",\n              style: {\n                width: `${detectionCount / TOTAL_DETECTIONS_NEEDED * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 17\n          }, this), !faceDetected && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `face-position-feedback ${faceDistance}`,\n            children: [!faceCentered && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Move your face to the center\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 39\n            }, this), faceDistance === 'too_close' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Move further from camera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 54\n            }, this), faceDistance === 'too_far' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Move closer to camera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 19\n          }, this), faceDetected && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"face-detected-overlay\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"face-detected-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Face Successfully Detected!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 15\n        }, this), isCapturing && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-button\",\n            onClick: stopCamera,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `register-button ${faceDetected ? 'register-ready' : ''}`,\n            onClick: saveFaceData,\n            disabled: !faceDetected,\n            children: faceDetected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Register Face\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"register-icon\",\n                children: \"\\u2713\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : 'Waiting for Face...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 11\n      }, this), registrationStep === 'processing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"processing-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Processing Face Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Please wait while we \", usernameExists ? 'update' : 'save', \" your face data...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"processing-timer\",\n          ref: el => {\n            if (el && !el.hasTimer) {\n              el.hasTimer = true;\n              let timeLeft = 10;\n              const timer = setInterval(() => {\n                timeLeft -= 1;\n                if (el) el.innerText = `Timeout in ${timeLeft} seconds...`;\n                if (timeLeft <= 0) {\n                  clearInterval(timer);\n                  // Force completion if taking too long\n                  setRegistrationStep('complete');\n                }\n              }, 1000);\n            }\n          },\n          children: \"Processing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 11\n      }, this), registrationStep === 'complete' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"completion-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-icon\",\n          children: \"\\u2713\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Registration Complete!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your face data has been successfully \", usernameExists ? 'updated' : 'registered', \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 13\n        }, this), faceDataInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"storage-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Storage Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Storage Type: \", faceDataInfo.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Storage Key: \", faceDataInfo.storageKey]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Saved At: \", new Date(faceDataInfo.timestamp).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Type: \", faceDataInfo.isUpdate ? 'Update' : 'New Registration']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-tip\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Your face data is saved in your browser's local storage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"redirect-message\",\n          children: [\"Redirecting to login in \", progress, \" seconds...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alternative-auth\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Already have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"login-link\",\n          children: \"Login with Face ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 453,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"NRALQJr7TP+1BZFlPKfDAJBQx4k=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","Link","faceapi","saveFaceDescriptor","hasFaceDescriptor","auth","createUserWithEmailAndPassword","saveFaceToFirebase","jsxDEV","_jsxDEV","Fragment","_Fragment","Signup","_s","TOTAL_DETECTIONS_NEEDED","MIN_SCAN_TIME_MS","username","setUsername","faceDetected","setFaceDetected","loading","setLoading","error","setError","isModelLoaded","setIsModelLoaded","isCapturing","setIsCapturing","scanMessage","setScanMessage","capturedDescriptor","setCapturedDescriptor","videoStream","setVideoStream","registrationStep","setRegistrationStep","progress","setProgress","faceDataInfo","setFaceDataInfo","detectionCount","setDetectionCount","usernameExists","setUsernameExists","showUpdateConfirm","setShowUpdateConfirm","existingUserData","setExistingUserData","faceCentered","setFaceCentered","faceDistance","setFaceDistance","scanStartTime","setScanStartTime","scanTimeRemaining","setScanTimeRemaining","qualityScore","setQualityScore","detectionScores","setDetectionScores","videoRef","canvasRef","navigate","loadModels","MODEL_URL","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","err","message","trim","checkUsernameExists","storedFaceData","JSON","parse","localStorage","getItem","existingUser","find","data","console","log","startCamera","Date","now","stream","navigator","mediaDevices","getUserMedia","video","width","ideal","height","facingMode","current","srcObject","onloadedmetadata","play","catch","getTracks","forEach","track","stop","stopCamera","saveFaceData","userId","email","replace","password","userCredential","user","uid","authErr","warn","Float32Array","length","firebaseSaved","quality","scanDuration","scores","saveErr","userData","descriptor","Array","from","timestamp","toISOString","existingData","storedData","parseErr","isArray","updatedData","filter","item","push","setItem","stringify","storageKey","location","dataSize","isUpdate","countdown","countdownInterval","setInterval","clearInterval","detectFace","canvas","videoWidth","videoHeight","elapsedTime","remainingTime","Math","max","ceil","detection","detectSingleFace","TinyFaceDetectorOptions","scoreThreshold","withFaceLandmarks","withFaceDescriptor","context","getContext","clearRect","dims","matchDimensions","resizedResults","resizeResults","draw","drawDetections","drawFaceLandmarks","normalizedDescriptor","prev","score","avgScore","reduce","sum","scanComplete","faceCheckDone","checkingFace","setFaceCheckDone","setCheckingFace","checkForExistingFace","progressPercent","round","requestAnimationFrame","animationFrameId","onplay","cancelAnimationFrame","handleUsernameNext","handleUpdateConfirm","confirmed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","ref","autoPlay","playsInline","muted","style","display","position","top","left","el","hasTimer","timeLeft","timer","innerText","toLocaleString","to","_c","$RefreshReg$"],"sources":["D:/Movies/Aniket/test2/test/src/Signup.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport * as faceapi from 'face-api.js';\r\nimport './Signup.css';\r\nimport { saveFaceDescriptor, hasFaceDescriptor } from './services/localFaceStorage';\r\nimport { auth } from './firebase/config';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { saveFaceToFirebase } from './services/firebaseFaceService'; // Add this import\r\n\r\nfunction Signup() {\r\n  // Increase detection samples for better face data quality\r\n  const TOTAL_DETECTIONS_NEEDED = 15; // Increased from 5 to 15 for higher quality data\r\n  const MIN_SCAN_TIME_MS = 5000; // Minimum 5 seconds scan time\r\n  \r\n  const [username, setUsername] = useState('');\r\n  const [faceDetected, setFaceDetected] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [isModelLoaded, setIsModelLoaded] = useState(false);\r\n  const [isCapturing, setIsCapturing] = useState(false);\r\n  const [scanMessage, setScanMessage] = useState('');\r\n  const [capturedDescriptor, setCapturedDescriptor] = useState(null);\r\n  const [videoStream, setVideoStream] = useState(null);\r\n  const [registrationStep, setRegistrationStep] = useState('username'); // 'username', 'camera', 'processing', 'complete'\r\n  const [progress, setProgress] = useState(0);\r\n  const [faceDataInfo, setFaceDataInfo] = useState(null);\r\n  const [detectionCount, setDetectionCount] = useState(0);\r\n  const [usernameExists, setUsernameExists] = useState(false);\r\n  const [showUpdateConfirm, setShowUpdateConfirm] = useState(false);\r\n  const [existingUserData, setExistingUserData] = useState(null);\r\n  \r\n  // Add state for face positioning feedback\r\n  const [faceCentered, setFaceCentered] = useState(false);\r\n  const [faceDistance, setFaceDistance] = useState('unknown'); // 'too_close', 'good', 'too_far'\r\n\r\n  // Add state for scan timer\r\n  const [scanStartTime, setScanStartTime] = useState(null);\r\n  const [scanTimeRemaining, setScanTimeRemaining] = useState(0);\r\n  const [qualityScore, setQualityScore] = useState(0);\r\n  const [detectionScores, setDetectionScores] = useState([]);\r\n\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Load face-api models\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const MODEL_URL = 'https://justadudewhohacks.github.io/face-api.js/models';\r\n        await Promise.all([\r\n          faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)\r\n        ]);\r\n        setIsModelLoaded(true);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error loading face detection models: ' + err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    loadModels();\r\n  }, []);\r\n\r\n  // Check if username already exists\r\n  useEffect(() => {\r\n    if (username.trim()) {\r\n      checkUsernameExists(username);\r\n    } else {\r\n      setUsernameExists(false);\r\n      setExistingUserData(null);\r\n    }\r\n  }, [username]);\r\n\r\n  const checkUsernameExists = async (username) => {\r\n    try {\r\n      // Get stored face data from localStorage\r\n      const storedFaceData = JSON.parse(localStorage.getItem('face_descriptors') || '[]');\r\n      \r\n      // Check if username already exists\r\n      const existingUser = storedFaceData.find(data => data.username === username);\r\n      \r\n      if (existingUser) {\r\n        setUsernameExists(true);\r\n        setExistingUserData(existingUser);\r\n        console.log(\"Username already exists:\", existingUser);\r\n      } else {\r\n        setUsernameExists(false);\r\n        setExistingUserData(null);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error checking username:\", err);\r\n      setUsernameExists(false);\r\n      setExistingUserData(null);\r\n    }\r\n  };\r\n\r\n  const startCamera = async () => {\r\n    if (!username.trim()) {\r\n      setError('Please enter a username first');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsCapturing(true);\r\n      setError('');\r\n      setScanStartTime(Date.now()); // Record scan start time\r\n      setScanTimeRemaining(MIN_SCAN_TIME_MS / 1000);\r\n      setDetectionScores([]);\r\n      \r\n      const stream = await navigator.mediaDevices.getUserMedia({ \r\n        video: {\r\n          width: { ideal: 640 },\r\n          height: { ideal: 480 },\r\n          facingMode: 'user'\r\n        }\r\n      });\r\n      \r\n      setVideoStream(stream);\r\n      \r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.onloadedmetadata = () => {\r\n          videoRef.current.play().catch(err => {\r\n            console.error(\"Error playing video:\", err);\r\n            setError(\"Error starting video playback\");\r\n          });\r\n        };\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Camera access error:\", err);\r\n      setError(`Camera access failed: ${err.message}`);\r\n      setIsCapturing(false);\r\n    }\r\n  };\r\n\r\n  // Clean up video stream when component unmounts\r\n  useEffect(() => {\r\n    return () => {\r\n      if (videoStream) {\r\n        videoStream.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, [videoStream]);\r\n\r\n  const stopCamera = () => {\r\n    if (videoStream) {\r\n      videoStream.getTracks().forEach(track => track.stop());\r\n      setVideoStream(null);\r\n    }\r\n    if (videoRef.current) {\r\n      videoRef.current.srcObject = null;\r\n    }\r\n    setIsCapturing(false);\r\n  };\r\n\r\n  const saveFaceData = async () => {\r\n    if (!capturedDescriptor || !username) {\r\n      setError('Face data or username missing');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setRegistrationStep('processing');\r\n      \r\n      // Create a user ID - if we're using Firebase auth, use that ID\r\n      let userId = `user_${Date.now()}`;\r\n      \r\n      try {\r\n        // Try to create a Firebase user (if we have email/password)\r\n        // Generate a valid email from username for Firebase\r\n        const email = `${username.replace(/\\s+/g, '')}@example.com`;\r\n        const password = `password123`; // Placeholder password\r\n        \r\n        const userCredential = await createUserWithEmailAndPassword(\r\n          auth, \r\n          email,\r\n          password\r\n        );\r\n        userId = userCredential.user.uid;\r\n        console.log(\"Firebase user created with ID:\", userId);\r\n      } catch (authErr) {\r\n        console.warn(\"Could not create Firebase user, using local ID:\", authErr);\r\n      }\r\n      \r\n      console.log(\"Starting face data save process...\");\r\n      console.log(\"Descriptor data type:\", capturedDescriptor instanceof Float32Array ? \"Float32Array\" : typeof capturedDescriptor);\r\n      console.log(\"Descriptor length:\", capturedDescriptor.length);\r\n      \r\n      // Store face data both in Firebase and localStorage for backup\r\n      // Enhanced data including quality metrics\r\n      try {\r\n        const firebaseSaved = await saveFaceToFirebase(\r\n          userId, \r\n          username, \r\n          capturedDescriptor,\r\n          {\r\n            quality: qualityScore,\r\n            detectionCount: TOTAL_DETECTIONS_NEEDED,\r\n            scanDuration: Date.now() - scanStartTime,\r\n            scores: detectionScores\r\n          }\r\n        );\r\n        \r\n        if (firebaseSaved) {\r\n          console.log(\"Face data successfully saved to storage\");\r\n        } else {\r\n          console.warn(\"Face data save returned false - check for errors\");\r\n        }\r\n      } catch (saveErr) {\r\n        console.warn(\"Error saving to Firebase, will continue with local storage:\", saveErr);\r\n        // Continue with local storage only\r\n      }\r\n      \r\n      // Save additional user data in localStorage\r\n      const userData = {\r\n        userId,\r\n        username,\r\n        descriptor: Array.from(capturedDescriptor),\r\n        timestamp: new Date().toISOString()\r\n      };\r\n      \r\n      // Get existing data from local storage\r\n      let existingData = [];\r\n      try {\r\n        const storedData = localStorage.getItem('face_descriptors');\r\n        existingData = storedData ? JSON.parse(storedData) : [];\r\n      } catch (parseErr) {\r\n        console.warn('Could not parse existing face data, creating new storage');\r\n      }\r\n      \r\n      // Ensure existingData is an array\r\n      if (!Array.isArray(existingData)) existingData = [];\r\n      \r\n      // Check if we're updating an existing user's face data\r\n      if (usernameExists) {\r\n        // Replace the data for the existing user\r\n        const updatedData = existingData.filter(item => item.username !== username);\r\n        updatedData.push(userData);\r\n        localStorage.setItem('face_descriptors', JSON.stringify(updatedData));\r\n      } else {\r\n        // Add new user data\r\n        existingData.push(userData);\r\n        localStorage.setItem('face_descriptors', JSON.stringify(existingData));\r\n      }\r\n      \r\n      // Update the storage location info display to be more accurate\r\n      setFaceDataInfo({\r\n        storageKey: 'face_descriptors',\r\n        location: 'Firebase Realtime Database and Browser Local Storage',\r\n        timestamp: new Date().toISOString(),\r\n        dataSize: capturedDescriptor.length * 4, // Float32 is 4 bytes per element\r\n        isUpdate: usernameExists,\r\n        userId\r\n      });\r\n      \r\n      stopCamera();\r\n      setRegistrationStep('complete');\r\n      // Show countdown for redirect\r\n      let countdown = 5;\r\n      const countdownInterval = setInterval(() => {\r\n        countdown--;\r\n        setProgress(countdown);\r\n        if (countdown <= 0) {\r\n          clearInterval(countdownInterval);\r\n          navigate('/login');\r\n        }\r\n      }, 1000);\r\n    } catch (err) {\r\n      setError('Failed to save face data: ' + err.message);\r\n      setRegistrationStep('camera'); // Go back to camera step on error\r\n    }\r\n  };\r\n\r\n  const detectFace = async () => {\r\n    if (!videoRef.current || !canvasRef.current) return;\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n    setScanMessage('Analyzing face...');\r\n    \r\n    // Calculate remaining scan time\r\n    const elapsedTime = Date.now() - scanStartTime;\r\n    const remainingTime = Math.max(0, Math.ceil((MIN_SCAN_TIME_MS - elapsedTime) / 1000));\r\n    setScanTimeRemaining(remainingTime);\r\n    \r\n    try {\r\n      const detection = await faceapi\r\n        .detectSingleFace(video, new faceapi.TinyFaceDetectorOptions({ scoreThreshold: 0.5 }))\r\n        .withFaceLandmarks()\r\n        .withFaceDescriptor();\r\n      \r\n      if (detection) {\r\n        console.log(\"Face detected in video frame\");\r\n        // Draw the detection\r\n        const context = canvas.getContext('2d');\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n        \r\n        const dims = faceapi.matchDimensions(canvas, video, true);\r\n        const resizedResults = faceapi.resizeResults(detection, dims);\r\n        faceapi.draw.drawDetections(canvas, [resizedResults]);\r\n        faceapi.draw.drawFaceLandmarks(canvas, [resizedResults]);\r\n        \r\n        // Make sure the descriptor is a proper Float32Array\r\n        const normalizedDescriptor = new Float32Array(detection.descriptor);\r\n        \r\n        // Store detection score for quality assessment\r\n        setDetectionScores(prev => [...prev, detection.detection.score]);\r\n        const avgScore = [...detectionScores, detection.detection.score]\r\n          .reduce((sum, score) => sum + score, 0) / (detectionScores.length + 1);\r\n        setQualityScore(avgScore * 100);\r\n        \r\n        // Calculate face position metrics\r\n        // ...existing code...\r\n        \r\n        // Increment detection count only if we've passed minimum scan time\r\n        const scanComplete = elapsedTime >= MIN_SCAN_TIME_MS;\r\n        if (scanComplete) {\r\n          setDetectionCount(prev => prev + 1);\r\n        }\r\n        \r\n        if (detectionCount >= TOTAL_DETECTIONS_NEEDED && scanComplete) {\r\n          // Set face detected and descriptor\r\n          setCapturedDescriptor(normalizedDescriptor);\r\n          setFaceDetected(true);\r\n          \r\n          // Check if this face already exists under a different username\r\n          if (!faceCheckDone && !checkingFace) {\r\n            setFaceCheckDone(true);\r\n            setCheckingFace(true);\r\n            console.log(\"Face detected, checking for existing registrations...\");\r\n            checkForExistingFace(normalizedDescriptor);\r\n          }\r\n          \r\n          setScanMessage('Face detected! Click Register to save.');\r\n          return; // Stop detection once we have enough samples and minimum time passed\r\n        } else {\r\n          // Show either time remaining or detection progress based on which is limiting factor\r\n          if (!scanComplete) {\r\n            setScanMessage(`Keep still... ${remainingTime}s remaining`);\r\n          } else {\r\n            const progressPercent = Math.round((detectionCount/TOTAL_DETECTIONS_NEEDED) * 100);\r\n            setScanMessage(`Collecting face data: ${progressPercent}% (Quality: ${Math.round(qualityScore)}%)`);\r\n          }\r\n          \r\n          // Continue detection as we need more samples\r\n          if (isCapturing) {\r\n            requestAnimationFrame(detectFace);\r\n          }\r\n        }\r\n      } else {\r\n        setScanMessage('No face detected. Please position your face in the frame.');\r\n        setFaceDetected(false);\r\n        \r\n        // Continue detection if we haven't found a face yet\r\n        if (isCapturing) {\r\n          requestAnimationFrame(detectFace);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setScanMessage('Error during detection: ' + err.message);\r\n      console.error('Face detection error:', err);\r\n      \r\n      // Continue detection despite error\r\n      if (isCapturing) {\r\n        requestAnimationFrame(detectFace);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let animationFrameId;\r\n    if (isCapturing && videoRef.current && videoStream) {\r\n      const detectFace = async () => {\r\n        if (!videoRef.current || !canvasRef.current) return;\r\n        const video = videoRef.current;\r\n        const canvas = canvasRef.current;\r\n        canvas.width = video.videoWidth;\r\n        canvas.height = video.videoHeight;\r\n\r\n        setScanMessage('Analyzing face...');\r\n\r\n        try {\r\n          const detection = await faceapi\r\n            .detectSingleFace(video, new faceapi.TinyFaceDetectorOptions())\r\n            .withFaceLandmarks()\r\n            .withFaceDescriptor();\r\n          if (detection) {\r\n            // Draw the detection\r\n            const context = canvas.getContext('2d');\r\n            context.clearRect(0, 0, canvas.width, canvas.height);\r\n            \r\n            const dims = faceapi.matchDimensions(canvas, video, true);\r\n            const resizedResults = faceapi.resizeResults(detection, dims);\r\n            faceapi.draw.drawDetections(canvas, [resizedResults]);\r\n            faceapi.draw.drawFaceLandmarks(canvas, [resizedResults]);\r\n            // Use TOTAL_DETECTIONS_NEEDED here instead of totalDetectionsNeeded\r\n            setCapturedDescriptor(detection.descriptor);\r\n            setFaceDetected(true);\r\n            setScanMessage('Face detected! Click Register to save.');\r\n          } else {\r\n            setScanMessage('No face detected. Please position your face in the frame.');\r\n            setFaceDetected(false);\r\n          } \r\n          if (isCapturing) {\r\n            animationFrameId = requestAnimationFrame(detectFace);\r\n          }\r\n        } catch (err) {\r\n          setScanMessage('Error during detection: ' + err.message);\r\n        }\r\n      };\r\n\r\n      videoRef.current.onplay = () => {\r\n        detectFace();\r\n      };\r\n    }\r\n\r\n    return () => {\r\n      if (animationFrameId) {\r\n        cancelAnimationFrame(animationFrameId);\r\n      }\r\n    };\r\n  }, [isCapturing, videoStream]);\r\n\r\n  // Handle clicking next from username screen\r\n  const handleUsernameNext = () => {\r\n    if (username.trim()) {\r\n      if (usernameExists && !showUpdateConfirm) {\r\n        setShowUpdateConfirm(true);\r\n      } else {\r\n        setShowUpdateConfirm(false);\r\n        setRegistrationStep('camera');\r\n        startCamera();\r\n      }\r\n    } else {\r\n      setError('Please enter a username');\r\n    }\r\n  };\r\n\r\n  // Handle confirmation for updating existing user's face data\r\n  const handleUpdateConfirm = (confirmed) => {\r\n    setShowUpdateConfirm(false);\r\n    if (confirmed) {\r\n      setRegistrationStep('camera');\r\n      startCamera();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <div className=\"signup-card\">\r\n        <h1 className=\"signup-title\">Face Registration</h1>\r\n        {/* Progress indicator */}\r\n        <div className=\"registration-progress\">\r\n          <div className=\"progress-steps\">\r\n            <div className={`step ${registrationStep === 'username' ? 'active' : ''} ${registrationStep !== 'username' ? 'completed' : ''}`}>\r\n              1. Username\r\n            </div>\r\n            <div className={`step ${registrationStep === 'camera' ? 'active' : ''} ${registrationStep === 'complete' ? 'completed' : ''}`}>\r\n              2. Face Scan\r\n            </div>\r\n            <div className={`step ${registrationStep === 'complete' ? 'active' : ''}`}>\r\n              3. Complete\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        {registrationStep === 'username' && (\r\n          <div className=\"step-container\">\r\n            <div className=\"face-icon-container\">\r\n              <div className=\"face-icon\"></div>\r\n            </div>\r\n            <h3>Choose Your Username</h3>\r\n            <p className=\"step-description\">This username will be associated with your face data.</p>\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter your username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </div>\r\n            {usernameExists && !showUpdateConfirm && (\r\n              <div className=\"username-exists-warning\">\r\n                Username already exists! You can update the face data for this user.\r\n              </div>\r\n            )}\r\n            {showUpdateConfirm ? (\r\n              <div className=\"update-confirmation\">\r\n                <p>This username already exists. Do you want to update the face data for this user?</p>\r\n                <div className=\"confirmation-buttons\">\r\n                  <button \r\n                    className=\"confirm-btn\"\r\n                    onClick={() => handleUpdateConfirm(true)}\r\n                  >\r\n                    Yes, Update\r\n                  </button>\r\n                  <button \r\n                    className=\"cancel-btn\"\r\n                    onClick={() => handleUpdateConfirm(false)}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <button\r\n                className=\"next-button\"\r\n                onClick={handleUsernameNext}\r\n              >\r\n                {usernameExists ? 'Update Face Data' : 'Continue to Face Scan'}\r\n              </button>\r\n            )}\r\n          </div>\r\n        )}\r\n        {registrationStep === 'camera' && (\r\n          <div className=\"camera-section\">\r\n            <div className=\"face-position-guide\">\r\n              <h3>Face Positioning Guide</h3>\r\n              <ul className=\"face-guide-list\">\r\n                <li className={faceCentered ? 'success' : ''}>\r\n                  <span className=\"check-icon\">{faceCentered ? '✓' : '○'}</span>\r\n                  Center your face in the frame\r\n                </li>\r\n                <li className={faceDistance === 'good' ? 'success' : ''}>\r\n                  <span className=\"check-icon\">{faceDistance === 'good' ? '✓' : '○'}</span>\r\n                  Keep a good distance (not too close/far)\r\n                </li>\r\n                <li className={faceDetected ? 'success' : ''}>\r\n                  <span className=\"check-icon\">{faceDetected ? '✓' : '○'}</span>\r\n                  Look directly at the camera\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            {!isCapturing ? (\r\n              <button\r\n                className=\"start-button\"\r\n                onClick={startCamera}\r\n                disabled={loading || !isModelLoaded || !username.trim()}\r\n              >\r\n                {loading ? 'Loading...' : 'Start Camera'}\r\n              </button>\r\n            ) : (\r\n              <div className=\"camera-container\">\r\n                <video\r\n                  ref={videoRef}\r\n                  autoPlay\r\n                  playsInline\r\n                  muted\r\n                  style={{ display: 'block', width: '100%' }}\r\n                />\r\n                <canvas \r\n                  ref={canvasRef}\r\n                  style={{ \r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: '100%',\r\n                    height: '100%'\r\n                  }}\r\n                />\r\n                <div className=\"scan-message\">{scanMessage}</div>\r\n                {/* Enhanced progress bar */}\r\n                <div className=\"detection-progress-container\">\r\n                  <div \r\n                    className=\"detection-progress-bar\" \r\n                    style={{width: `${(detectionCount/TOTAL_DETECTIONS_NEEDED) * 100}%`}}\r\n                  ></div>\r\n                </div>\r\n                {/* Face position feedback */}\r\n                {!faceDetected && (\r\n                  <div className={`face-position-feedback ${faceDistance}`}>\r\n                    {!faceCentered && <div>Move your face to the center</div>}\r\n                    {faceDistance === 'too_close' && <div>Move further from camera</div>}\r\n                    {faceDistance === 'too_far' && <div>Move closer to camera</div>}\r\n                  </div>\r\n                )}\r\n                {/* Add face detection success overlay when face is detected */}\r\n                {faceDetected && (\r\n                  <div className=\"face-detected-overlay\">\r\n                    <div className=\"face-detected-icon\"></div>\r\n                    <p>Face Successfully Detected!</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n            {isCapturing && (\r\n              <div className=\"camera-controls\">\r\n                <button className=\"cancel-button\" onClick={stopCamera}>\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className={`register-button ${faceDetected ? 'register-ready' : ''}`}\r\n                  onClick={saveFaceData}\r\n                  disabled={!faceDetected}\r\n                >\r\n                  {faceDetected ? (\r\n                    <>\r\n                      Register Face\r\n                      <span className=\"register-icon\">✓</span>\r\n                    </>\r\n                  ) : (\r\n                    'Waiting for Face...'\r\n                  )}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        {registrationStep === 'processing' && (\r\n          <div className=\"processing-container\">\r\n            <div className=\"spinner\"></div>\r\n            <h3>Processing Face Data</h3>\r\n            <p>Please wait while we {usernameExists ? 'update' : 'save'} your face data...</p>\r\n            {/* Add a countdown timer to prevent endless processing */}\r\n            <p className=\"processing-timer\" ref={(el) => {\r\n              if (el && !el.hasTimer) {\r\n                el.hasTimer = true;\r\n                let timeLeft = 10;\r\n                const timer = setInterval(() => {\r\n                  timeLeft -= 1;\r\n                  if (el) el.innerText = `Timeout in ${timeLeft} seconds...`;\r\n                  if (timeLeft <= 0) {\r\n                    clearInterval(timer);\r\n                    // Force completion if taking too long\r\n                    setRegistrationStep('complete');\r\n                  }\r\n                }, 1000);\r\n              }\r\n            }}>Processing...</p>\r\n          </div>\r\n        )}\r\n        {registrationStep === 'complete' && (\r\n          <div className=\"completion-container\">\r\n            <div className=\"success-icon\">✓</div>\r\n            <h3>Registration Complete!</h3>\r\n            <p>Your face data has been successfully {usernameExists ? 'updated' : 'registered'}.</p>\r\n            {faceDataInfo && (\r\n              <div className=\"storage-info\">\r\n                <h4>Storage Information</h4>\r\n                <ul>\r\n                  <li>Storage Type: {faceDataInfo.location}</li>\r\n                  <li>Storage Key: {faceDataInfo.storageKey}</li>\r\n                  <li>Saved At: {new Date(faceDataInfo.timestamp).toLocaleString()}</li>\r\n                  <li>Type: {faceDataInfo.isUpdate ? 'Update' : 'New Registration'}</li>\r\n                </ul>\r\n                <div className=\"info-tip\">\r\n                  <p>Your face data is saved in your browser's local storage</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <p className=\"redirect-message\">\r\n              Redirecting to login in {progress} seconds...\r\n            </p>\r\n          </div>\r\n        )}\r\n        <div className=\"alternative-auth\">\r\n          <p>Already have an account?</p>\r\n          <Link to=\"/login\" className=\"login-link\">\r\n            Login with Face ID\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}