{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movies\\\\Aniket\\\\test2\\\\test\\\\src\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport * as faceapi from 'face-api.js';\nimport './Signup.css';\nimport { saveFaceDescriptor, hasFaceDescriptor } from './services/localFaceStorage';\nimport { auth } from './firebase/config';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { saveFaceToFirebase, checkFaceExists, updateFaceDescriptor } from './services/firebaseFaceService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  // Define the constant at component level so it's accessible everywhere\n  const TOTAL_DETECTIONS_NEEDED = 5; // Reduced from 20 to 5 for faster processing\n\n  const [username, setUsername] = useState('');\n  const [faceDetected, setFaceDetected] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [isModelLoaded, setIsModelLoaded] = useState(false);\n  const [isCapturing, setIsCapturing] = useState(false);\n  const [scanMessage, setScanMessage] = useState('');\n  const [capturedDescriptor, setCapturedDescriptor] = useState(null);\n  const [videoStream, setVideoStream] = useState(null);\n  const [registrationStep, setRegistrationStep] = useState('username'); // 'username', 'camera', 'processing', 'complete'\n  const [progress, setProgress] = useState(0);\n  const [faceDataInfo, setFaceDataInfo] = useState(null);\n  const [detectionCount, setDetectionCount] = useState(0);\n  const [usernameExists, setUsernameExists] = useState(false);\n  const [showUpdateConfirm, setShowUpdateConfirm] = useState(false);\n  const [existingUserData, setExistingUserData] = useState(null);\n\n  // Add state for face positioning feedback\n  const [faceCentered, setFaceCentered] = useState(false);\n  const [faceDistance, setFaceDistance] = useState('unknown'); // 'too_close', 'good', 'too_far'\n  const [faceCheckDone, setFaceCheckDone] = useState(false);\n  const [faceAlreadyExists, setFaceAlreadyExists] = useState(false);\n  const [existingFaceUsername, setExistingFaceUsername] = useState(null);\n  const [faceSimilarity, setFaceSimilarity] = useState(null);\n  const [checkingFace, setCheckingFace] = useState(false);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const navigate = useNavigate();\n\n  // Load face-api models\n  useEffect(() => {\n    const loadModels = async () => {\n      try {\n        setLoading(true);\n        const MODEL_URL = 'https://justadudewhohacks.github.io/face-api.js/models';\n        await Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)]);\n        setIsModelLoaded(true);\n        setLoading(false);\n      } catch (err) {\n        setError('Error loading face detection models: ' + err.message);\n        setLoading(false);\n      }\n    };\n    loadModels();\n  }, []);\n\n  // Check if username already exists\n  useEffect(() => {\n    if (username.trim()) {\n      checkUsernameExists(username);\n    } else {\n      setUsernameExists(false);\n      setExistingUserData(null);\n    }\n  }, [username]);\n  const checkUsernameExists = async username => {\n    try {\n      // Get stored face data from localStorage\n      const storedFaceData = JSON.parse(localStorage.getItem('face_descriptors') || '[]');\n\n      // Check if username already exists\n      const existingUser = storedFaceData.find(data => data.username === username);\n      if (existingUser) {\n        setUsernameExists(true);\n        setExistingUserData(existingUser);\n        console.log(\"Username already exists:\", existingUser);\n      } else {\n        setUsernameExists(false);\n        setExistingUserData(null);\n      }\n    } catch (err) {\n      console.error(\"Error checking username:\", err);\n      setUsernameExists(false);\n      setExistingUserData(null);\n    }\n  };\n  const startCamera = async () => {\n    if (!username.trim()) {\n      setError('Please enter a username first');\n      return;\n    }\n    try {\n      setIsCapturing(true);\n      setError('');\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: {\n            ideal: 640\n          },\n          height: {\n            ideal: 480\n          },\n          facingMode: 'user'\n        }\n      });\n      setVideoStream(stream);\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        videoRef.current.onloadedmetadata = () => {\n          videoRef.current.play().catch(err => {\n            console.error(\"Error playing video:\", err);\n            setError(\"Error starting video playback\");\n          });\n        };\n      }\n    } catch (err) {\n      console.error(\"Camera access error:\", err);\n      setError(`Camera access failed: ${err.message}`);\n      setIsCapturing(false);\n    }\n  };\n\n  // Clean up video stream when component unmounts\n  useEffect(() => {\n    return () => {\n      if (videoStream) {\n        videoStream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [videoStream]);\n  const stopCamera = () => {\n    if (videoStream) {\n      videoStream.getTracks().forEach(track => track.stop());\n      setVideoStream(null);\n    }\n    if (videoRef.current) {\n      videoRef.current.srcObject = null;\n    }\n    setIsCapturing(false);\n  };\n  const saveFaceData = async () => {\n    if (!capturedDescriptor || !username) {\n      setError('Face data or username missing');\n      return;\n    }\n    try {\n      setRegistrationStep('processing');\n\n      // Create a user ID - if we're using Firebase auth, use that ID\n      let userId = `user_${Date.now()}`;\n      try {\n        // Try to create a Firebase user (if we have email/password)\n        // Generate a valid email from username for Firebase\n        const email = `${username.replace(/\\s+/g, '')}@example.com`;\n        const password = `password123`; // Placeholder password\n\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n        userId = userCredential.user.uid;\n        console.log(\"Firebase user created with ID:\", userId);\n      } catch (authErr) {\n        console.warn(\"Could not create Firebase user, using local ID:\", authErr);\n      }\n      console.log(\"Starting face data save process...\");\n      console.log(\"Descriptor data type:\", capturedDescriptor instanceof Float32Array ? \"Float32Array\" : typeof capturedDescriptor);\n      console.log(\"Descriptor length:\", capturedDescriptor.length);\n\n      // Check if we're updating an existing username\n      if (usernameExists) {\n        console.log(`Updating face data for existing username: ${username}`);\n        try {\n          // Update the face descriptor in Firebase\n          await updateFaceDescriptor(username, capturedDescriptor);\n          console.log(`Successfully updated face data for ${username} in Firebase`);\n        } catch (updateErr) {\n          console.error(\"Failed to update face data in Firebase:\", updateErr);\n        }\n      } else {\n        // Store face data both in Firebase and localStorage for backup\n        // Modified to pass username as the second parameter to saveFaceToFirebase\n        try {\n          const firebaseSaved = await saveFaceToFirebase(userId, username, capturedDescriptor);\n          console.log(\"Firebase save result:\", firebaseSaved);\n          if (firebaseSaved) {\n            console.log(\"Face data successfully saved to Firebase storage\");\n          } else {\n            console.warn(\"Face data save to Firebase returned false - check for errors\");\n          }\n        } catch (saveErr) {\n          console.warn(\"Error saving to Firebase, will continue with local storage:\", saveErr);\n        }\n      }\n\n      // Save additional user data in localStorage\n      const userData = {\n        userId,\n        username,\n        descriptor: Array.from(capturedDescriptor),\n        timestamp: new Date().toISOString()\n      };\n\n      // Get existing data from local storage\n      let existingData = [];\n      try {\n        const storedData = localStorage.getItem('face_descriptors');\n        existingData = storedData ? JSON.parse(storedData) : [];\n      } catch (parseErr) {\n        console.warn('Could not parse existing face data, creating new storage');\n      }\n\n      // Ensure existingData is an array\n      if (!Array.isArray(existingData)) existingData = [];\n\n      // Check if we're updating an existing user's face data\n      if (usernameExists) {\n        // Replace the data for the existing user\n        const updatedData = existingData.filter(item => item.username !== username);\n        updatedData.push(userData);\n        localStorage.setItem('face_descriptors', JSON.stringify(updatedData));\n      } else {\n        // Add new user data\n        existingData.push(userData);\n        localStorage.setItem('face_descriptors', JSON.stringify(existingData));\n      }\n\n      // Update the storage location info display to be more accurate\n      setFaceDataInfo({\n        storageKey: 'face_descriptors',\n        location: 'Firebase Realtime Database and Browser Local Storage',\n        timestamp: new Date().toISOString(),\n        dataSize: capturedDescriptor.length * 4,\n        // Float32 is 4 bytes per element\n        isUpdate: usernameExists,\n        userId\n      });\n      stopCamera();\n      setRegistrationStep('complete');\n      // Show countdown for redirect\n      let countdown = 5;\n      const countdownInterval = setInterval(() => {\n        countdown--;\n        setProgress(countdown);\n        if (countdown <= 0) {\n          clearInterval(countdownInterval);\n          navigate('/login');\n        }\n      }, 1000);\n    } catch (err) {\n      setError('Failed to save face data: ' + err.message);\n      setRegistrationStep('camera'); // Go back to camera step on error\n    }\n  };\n\n  // Update the detector to normalize descriptor format and improve detection\n  const detectFace = async () => {\n    if (!videoRef.current || !canvasRef.current) return;\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    setScanMessage('Analyzing face...');\n    try {\n      const detection = await faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions({\n        scoreThreshold: 0.5\n      })).withFaceLandmarks().withFaceDescriptor();\n      if (detection) {\n        console.log(\"Face detected in video frame\");\n        // Draw the detection\n        const context = canvas.getContext('2d');\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        const dims = faceapi.matchDimensions(canvas, video, true);\n        const resizedResults = faceapi.resizeResults(detection, dims);\n        faceapi.draw.drawDetections(canvas, [resizedResults]);\n        faceapi.draw.drawFaceLandmarks(canvas, [resizedResults]);\n\n        // Make sure the descriptor is a proper Float32Array\n        const normalizedDescriptor = new Float32Array(detection.descriptor);\n\n        // Calculate face position metrics\n        const box = detection.detection.box;\n        const centerX = box.x + box.width / 2;\n        const centerY = box.y + box.height / 2;\n        const canvasCenterX = canvas.width / 2;\n        const canvasCenterY = canvas.height / 2;\n\n        // Check if face is centered\n        const isCentered = Math.abs(centerX - canvasCenterX) < canvas.width * 0.15 && Math.abs(centerY - canvasCenterY) < canvas.height * 0.15;\n        setFaceCentered(isCentered);\n\n        // Check face size/distance\n        const faceRatio = box.width / canvas.width;\n        if (faceRatio < 0.2) {\n          setFaceDistance('too_far');\n        } else if (faceRatio > 0.6) {\n          setFaceDistance('too_close');\n        } else {\n          setFaceDistance('good');\n        }\n        setDetectionCount(prev => prev + 1);\n        if (detectionCount >= TOTAL_DETECTIONS_NEEDED) {\n          // Set face detected and descriptor\n          setCapturedDescriptor(normalizedDescriptor);\n          setFaceDetected(true);\n\n          // Check if this face already exists under a different username\n          if (!faceCheckDone && !checkingFace) {\n            setFaceCheckDone(true);\n            setCheckingFace(true);\n            console.log(\"Face detected, checking for existing registrations...\");\n            checkForExistingFace(normalizedDescriptor);\n          }\n          setScanMessage('Face detected! Click Register to save.');\n          return; // Stop detection once we have enough samples\n        } else {\n          setScanMessage(`Hold still... ${Math.round(detectionCount / TOTAL_DETECTIONS_NEEDED * 100)}%`);\n          // Continue detection as we need more samples\n          if (isCapturing) {\n            requestAnimationFrame(detectFace);\n          }\n        }\n      } else {\n        setScanMessage('No face detected. Please position your face in the frame.');\n        setFaceDetected(false);\n\n        // Continue detection if we haven't found a face yet\n        if (isCapturing) {\n          requestAnimationFrame(detectFace);\n        }\n      }\n    } catch (err) {\n      setScanMessage('Error during detection: ' + err.message);\n      console.error('Face detection error:', err);\n\n      // Continue detection despite error\n      if (isCapturing) {\n        requestAnimationFrame(detectFace);\n      }\n    }\n  };\n\n  // Add function to check if face exists\n  const checkForExistingFace = async descriptor => {\n    try {\n      setScanMessage('Checking if face is already registered...');\n      let faceExists = {\n        exists: false,\n        username: null\n      };\n      try {\n        console.log(\"Starting face similarity check with descriptor:\", descriptor);\n        // Check if this face already exists in the database\n        faceExists = await checkFaceExists(descriptor, username);\n        console.log(\"Face exists check result:\", faceExists);\n      } catch (checkErr) {\n        console.warn(\"Error during face existence check, continuing anyway:\", checkErr);\n      }\n      if (faceExists.exists) {\n        console.log(`Face already exists under username: ${faceExists.username}`);\n        setFaceAlreadyExists(true);\n        setExistingFaceUsername(faceExists.username);\n        setFaceSimilarity(faceExists.distance);\n        setScanMessage(`Face already registered as: ${faceExists.username}`);\n      } else {\n        setFaceAlreadyExists(false);\n        setExistingFaceUsername(null);\n        setScanMessage('Face detected! Click Register to save.');\n      }\n    } catch (err) {\n      console.error('Error checking for existing face:', err);\n    } finally {\n      // Always ensure we're not stuck in checking state\n      setCheckingFace(false);\n    }\n  };\n\n  // Modify the useEffect to properly trigger detectFace on video play\n  useEffect(() => {\n    if (isCapturing && videoRef.current && videoStream) {\n      console.log(\"Video is ready, starting face detection\");\n\n      // Reset state for the detection process\n      setDetectionCount(0);\n      setFaceDetected(false);\n      setFaceCheckDone(false);\n      setFaceAlreadyExists(false);\n      setExistingFaceUsername(null);\n      setScanMessage('Positioning face...');\n\n      // Start the detection process\n      detectFace();\n      videoRef.current.onplay = () => {\n        // The video has started/resumed playing\n        console.log(\"Video playback started\");\n      };\n    }\n\n    // Cleanup function\n    return () => {\n      // No need for animation frame ID cleanup as it's handled inside detectFace\n    };\n  }, [isCapturing, videoStream]);\n\n  // Handle clicking next from username screen\n  const handleUsernameNext = () => {\n    if (username.trim()) {\n      if (usernameExists && !showUpdateConfirm) {\n        setShowUpdateConfirm(true);\n      } else {\n        setShowUpdateConfirm(false);\n        setRegistrationStep('camera');\n        startCamera();\n      }\n    } else {\n      setError('Please enter a username');\n    }\n  };\n\n  // Handle confirmation for updating existing user's face data\n  const handleUpdateConfirm = confirmed => {\n    setShowUpdateConfirm(false);\n    if (confirmed) {\n      setRegistrationStep('camera');\n      startCamera();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"signup-title\",\n        children: \"Face Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registration-progress\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-steps\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `step ${registrationStep === 'username' ? 'active' : ''} ${registrationStep !== 'username' ? 'completed' : ''}`,\n            children: \"1. Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `step ${registrationStep === 'camera' ? 'active' : ''} ${registrationStep === 'complete' ? 'completed' : ''}`,\n            children: \"2. Face Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `step ${registrationStep === 'complete' ? 'active' : ''}`,\n            children: \"3. Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 19\n      }, this), registrationStep === 'username' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"face-icon-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"face-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Choose Your Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"step-description\",\n          children: \"This username will be associated with your face data.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your username\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }, this), usernameExists && !showUpdateConfirm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username-exists-warning\",\n          children: \"Username already exists! You can update the face data for this user.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 15\n        }, this), showUpdateConfirm ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"update-confirmation\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This username already exists. Do you want to update the face data for this user?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"confirmation-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"confirm-btn\",\n              onClick: () => handleUpdateConfirm(true),\n              children: \"Yes, Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-btn\",\n              onClick: () => handleUpdateConfirm(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-button\",\n          onClick: handleUsernameNext,\n          children: usernameExists ? 'Update Face Data' : 'Continue to Face Scan'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }, this), registrationStep === 'camera' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"face-position-guide\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Face Positioning Guide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"face-guide-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: faceCentered ? 'success' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"check-icon\",\n                children: faceCentered ? '✓' : '○'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 19\n              }, this), \"Center your face in the frame\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: faceDistance === 'good' ? 'success' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"check-icon\",\n                children: faceDistance === 'good' ? '✓' : '○'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 19\n              }, this), \"Keep a good distance (not too close/far)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: faceDetected ? 'success' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"check-icon\",\n                children: faceDetected ? '✓' : '○'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 19\n              }, this), \"Look directly at the camera\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }, this), !isCapturing ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-button\",\n          onClick: startCamera,\n          disabled: loading || !isModelLoaded || !username.trim(),\n          children: loading ? 'Loading...' : 'Start Camera'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            playsInline: true,\n            muted: true,\n            style: {\n              display: 'block',\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            style: {\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scan-message\",\n            children: scanMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detection-progress-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detection-progress-bar\",\n              style: {\n                width: `${detectionCount / TOTAL_DETECTIONS_NEEDED * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 17\n          }, this), !faceDetected && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `face-position-feedback ${faceDistance}`,\n            children: [!faceCentered && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Move your face to the center\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 39\n            }, this), faceDistance === 'too_close' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Move further from camera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 54\n            }, this), faceDistance === 'too_far' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Move closer to camera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 19\n          }, this), faceAlreadyExists && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"face-exists-warning\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"warning-icon\",\n              children: \"\\u26A0\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"warning-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Face Already Registered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"This face appears to be registered as \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: existingFaceUsername\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 64\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"similarity\",\n                children: [\"Similarity: \", ((1 - faceSimilarity) * 100).toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 19\n          }, this), faceDetected && !faceAlreadyExists && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"face-detected-overlay\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"face-detected-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Face Successfully Detected!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 15\n        }, this), isCapturing && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-button\",\n            onClick: stopCamera,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `register-button ${faceDetected ? 'register-ready' : ''} ${faceAlreadyExists ? 'warning' : ''}`,\n            onClick: saveFaceData,\n            disabled: !faceDetected || checkingFace,\n            children: checkingFace ? 'Checking Face...' : faceDetected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [faceAlreadyExists ? 'Register Anyway' : 'Register Face', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"register-icon\",\n                children: faceAlreadyExists ? '⚠️' : '✓'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : 'Waiting for Face...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 11\n      }, this), registrationStep === 'processing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"processing-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Processing Face Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Please wait while we \", usernameExists ? 'update' : 'save', \" your face data...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"processing-timer\",\n          ref: el => {\n            if (el && !el.hasTimer) {\n              el.hasTimer = true;\n              let timeLeft = 10;\n              const timer = setInterval(() => {\n                timeLeft -= 1;\n                if (el) el.innerText = `Timeout in ${timeLeft} seconds...`;\n                if (timeLeft <= 0) {\n                  clearInterval(timer);\n                  // Force completion if taking too long\n                  setRegistrationStep('complete');\n                }\n              }, 1000);\n            }\n          },\n          children: \"Processing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 11\n      }, this), registrationStep === 'complete' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"completion-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-icon\",\n          children: \"\\u2713\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Registration Complete!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your face data has been successfully \", usernameExists ? 'updated' : 'registered', \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 13\n        }, this), faceDataInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"storage-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Storage Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Storage Type: \", faceDataInfo.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Storage Key: \", faceDataInfo.storageKey]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Saved At: \", new Date(faceDataInfo.timestamp).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Type: \", faceDataInfo.isUpdate ? 'Update' : 'New Registration']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-tip\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Your face data is saved in your browser's local storage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"redirect-message\",\n          children: [\"Redirecting to login in \", progress, \" seconds...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alternative-auth\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Already have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"login-link\",\n          children: \"Login with Face ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 460,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"e4kU1YPbwfi1pXmVvXqz33ulHRU=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","Link","faceapi","saveFaceDescriptor","hasFaceDescriptor","auth","createUserWithEmailAndPassword","saveFaceToFirebase","checkFaceExists","updateFaceDescriptor","jsxDEV","_jsxDEV","Fragment","_Fragment","Signup","_s","TOTAL_DETECTIONS_NEEDED","username","setUsername","faceDetected","setFaceDetected","loading","setLoading","error","setError","isModelLoaded","setIsModelLoaded","isCapturing","setIsCapturing","scanMessage","setScanMessage","capturedDescriptor","setCapturedDescriptor","videoStream","setVideoStream","registrationStep","setRegistrationStep","progress","setProgress","faceDataInfo","setFaceDataInfo","detectionCount","setDetectionCount","usernameExists","setUsernameExists","showUpdateConfirm","setShowUpdateConfirm","existingUserData","setExistingUserData","faceCentered","setFaceCentered","faceDistance","setFaceDistance","faceCheckDone","setFaceCheckDone","faceAlreadyExists","setFaceAlreadyExists","existingFaceUsername","setExistingFaceUsername","faceSimilarity","setFaceSimilarity","checkingFace","setCheckingFace","videoRef","canvasRef","navigate","loadModels","MODEL_URL","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","err","message","trim","checkUsernameExists","storedFaceData","JSON","parse","localStorage","getItem","existingUser","find","data","console","log","startCamera","stream","navigator","mediaDevices","getUserMedia","video","width","ideal","height","facingMode","current","srcObject","onloadedmetadata","play","catch","getTracks","forEach","track","stop","stopCamera","saveFaceData","userId","Date","now","email","replace","password","userCredential","user","uid","authErr","warn","Float32Array","length","updateErr","firebaseSaved","saveErr","userData","descriptor","Array","from","timestamp","toISOString","existingData","storedData","parseErr","isArray","updatedData","filter","item","push","setItem","stringify","storageKey","location","dataSize","isUpdate","countdown","countdownInterval","setInterval","clearInterval","detectFace","canvas","videoWidth","videoHeight","detection","detectSingleFace","TinyFaceDetectorOptions","scoreThreshold","withFaceLandmarks","withFaceDescriptor","context","getContext","clearRect","dims","matchDimensions","resizedResults","resizeResults","draw","drawDetections","drawFaceLandmarks","normalizedDescriptor","box","centerX","x","centerY","y","canvasCenterX","canvasCenterY","isCentered","Math","abs","faceRatio","prev","checkForExistingFace","round","requestAnimationFrame","faceExists","exists","checkErr","distance","onplay","handleUsernameNext","handleUpdateConfirm","confirmed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","ref","autoPlay","playsInline","muted","style","display","position","top","left","toFixed","el","hasTimer","timeLeft","timer","innerText","toLocaleString","to","_c","$RefreshReg$"],"sources":["D:/Movies/Aniket/test2/test/src/Signup.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport * as faceapi from 'face-api.js';\r\nimport './Signup.css';\r\nimport { saveFaceDescriptor, hasFaceDescriptor } from './services/localFaceStorage';\r\nimport { auth } from './firebase/config';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { \r\n  saveFaceToFirebase, \r\n  checkFaceExists,\r\n  updateFaceDescriptor\r\n} from './services/firebaseFaceService';\r\n\r\nfunction Signup() {\r\n  // Define the constant at component level so it's accessible everywhere\r\n  const TOTAL_DETECTIONS_NEEDED = 5; // Reduced from 20 to 5 for faster processing\r\n  \r\n  const [username, setUsername] = useState('');\r\n  const [faceDetected, setFaceDetected] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [isModelLoaded, setIsModelLoaded] = useState(false);\r\n  const [isCapturing, setIsCapturing] = useState(false);\r\n  const [scanMessage, setScanMessage] = useState('');\r\n  const [capturedDescriptor, setCapturedDescriptor] = useState(null);\r\n  const [videoStream, setVideoStream] = useState(null);\r\n  const [registrationStep, setRegistrationStep] = useState('username'); // 'username', 'camera', 'processing', 'complete'\r\n  const [progress, setProgress] = useState(0);\r\n  const [faceDataInfo, setFaceDataInfo] = useState(null);\r\n  const [detectionCount, setDetectionCount] = useState(0);\r\n  const [usernameExists, setUsernameExists] = useState(false);\r\n  const [showUpdateConfirm, setShowUpdateConfirm] = useState(false);\r\n  const [existingUserData, setExistingUserData] = useState(null);\r\n  \r\n  // Add state for face positioning feedback\r\n  const [faceCentered, setFaceCentered] = useState(false);\r\n  const [faceDistance, setFaceDistance] = useState('unknown'); // 'too_close', 'good', 'too_far'\r\n  const [faceCheckDone, setFaceCheckDone] = useState(false);\r\n  const [faceAlreadyExists, setFaceAlreadyExists] = useState(false);\r\n  const [existingFaceUsername, setExistingFaceUsername] = useState(null);\r\n  const [faceSimilarity, setFaceSimilarity] = useState(null);\r\n  const [checkingFace, setCheckingFace] = useState(false);\r\n\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Load face-api models\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const MODEL_URL = 'https://justadudewhohacks.github.io/face-api.js/models';\r\n        await Promise.all([\r\n          faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)\r\n        ]);\r\n        setIsModelLoaded(true);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error loading face detection models: ' + err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    loadModels();\r\n  }, []);\r\n\r\n  // Check if username already exists\r\n  useEffect(() => {\r\n    if (username.trim()) {\r\n      checkUsernameExists(username);\r\n    } else {\r\n      setUsernameExists(false);\r\n      setExistingUserData(null);\r\n    }\r\n  }, [username]);\r\n\r\n  const checkUsernameExists = async (username) => {\r\n    try {\r\n      // Get stored face data from localStorage\r\n      const storedFaceData = JSON.parse(localStorage.getItem('face_descriptors') || '[]');\r\n      \r\n      // Check if username already exists\r\n      const existingUser = storedFaceData.find(data => data.username === username);\r\n      \r\n      if (existingUser) {\r\n        setUsernameExists(true);\r\n        setExistingUserData(existingUser);\r\n        console.log(\"Username already exists:\", existingUser);\r\n      } else {\r\n        setUsernameExists(false);\r\n        setExistingUserData(null);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error checking username:\", err);\r\n      setUsernameExists(false);\r\n      setExistingUserData(null);\r\n    }\r\n  };\r\n\r\n  const startCamera = async () => {\r\n    if (!username.trim()) {\r\n      setError('Please enter a username first');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsCapturing(true);\r\n      setError('');\r\n      const stream = await navigator.mediaDevices.getUserMedia({ \r\n        video: {\r\n          width: { ideal: 640 },\r\n          height: { ideal: 480 },\r\n          facingMode: 'user'\r\n        }\r\n      });\r\n      \r\n      setVideoStream(stream);\r\n      \r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.onloadedmetadata = () => {\r\n          videoRef.current.play().catch(err => {\r\n            console.error(\"Error playing video:\", err);\r\n            setError(\"Error starting video playback\");\r\n          });\r\n        };\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Camera access error:\", err);\r\n      setError(`Camera access failed: ${err.message}`);\r\n      setIsCapturing(false);\r\n    }\r\n  };\r\n\r\n  // Clean up video stream when component unmounts\r\n  useEffect(() => {\r\n    return () => {\r\n      if (videoStream) {\r\n        videoStream.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, [videoStream]);\r\n\r\n  const stopCamera = () => {\r\n    if (videoStream) {\r\n      videoStream.getTracks().forEach(track => track.stop());\r\n      setVideoStream(null);\r\n    }\r\n    if (videoRef.current) {\r\n      videoRef.current.srcObject = null;\r\n    }\r\n    setIsCapturing(false);\r\n  };\r\n\r\n  const saveFaceData = async () => {\r\n    if (!capturedDescriptor || !username) {\r\n      setError('Face data or username missing');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setRegistrationStep('processing');\r\n      \r\n      // Create a user ID - if we're using Firebase auth, use that ID\r\n      let userId = `user_${Date.now()}`;\r\n      \r\n      try {\r\n        // Try to create a Firebase user (if we have email/password)\r\n        // Generate a valid email from username for Firebase\r\n        const email = `${username.replace(/\\s+/g, '')}@example.com`;\r\n        const password = `password123`; // Placeholder password\r\n        \r\n        const userCredential = await createUserWithEmailAndPassword(\r\n          auth, \r\n          email,\r\n          password\r\n        );\r\n        userId = userCredential.user.uid;\r\n        console.log(\"Firebase user created with ID:\", userId);\r\n      } catch (authErr) {\r\n        console.warn(\"Could not create Firebase user, using local ID:\", authErr);\r\n      }\r\n      \r\n      console.log(\"Starting face data save process...\");\r\n      console.log(\"Descriptor data type:\", capturedDescriptor instanceof Float32Array ? \"Float32Array\" : typeof capturedDescriptor);\r\n      console.log(\"Descriptor length:\", capturedDescriptor.length);\r\n      \r\n      // Check if we're updating an existing username\r\n      if (usernameExists) {\r\n        console.log(`Updating face data for existing username: ${username}`);\r\n        try {\r\n          // Update the face descriptor in Firebase\r\n          await updateFaceDescriptor(username, capturedDescriptor);\r\n          console.log(`Successfully updated face data for ${username} in Firebase`);\r\n        } catch (updateErr) {\r\n          console.error(\"Failed to update face data in Firebase:\", updateErr);\r\n        }\r\n      } else {\r\n        // Store face data both in Firebase and localStorage for backup\r\n        // Modified to pass username as the second parameter to saveFaceToFirebase\r\n        try {\r\n          const firebaseSaved = await saveFaceToFirebase(userId, username, capturedDescriptor);\r\n          console.log(\"Firebase save result:\", firebaseSaved);\r\n          \r\n          if (firebaseSaved) {\r\n            console.log(\"Face data successfully saved to Firebase storage\");\r\n          } else {\r\n            console.warn(\"Face data save to Firebase returned false - check for errors\");\r\n          }\r\n        } catch (saveErr) {\r\n          console.warn(\"Error saving to Firebase, will continue with local storage:\", saveErr);\r\n        }\r\n      }\r\n      \r\n      // Save additional user data in localStorage\r\n      const userData = {\r\n        userId,\r\n        username,\r\n        descriptor: Array.from(capturedDescriptor),\r\n        timestamp: new Date().toISOString()\r\n      };\r\n      \r\n      // Get existing data from local storage\r\n      let existingData = [];\r\n      try {\r\n        const storedData = localStorage.getItem('face_descriptors');\r\n        existingData = storedData ? JSON.parse(storedData) : [];\r\n      } catch (parseErr) {\r\n        console.warn('Could not parse existing face data, creating new storage');\r\n      }\r\n      \r\n      // Ensure existingData is an array\r\n      if (!Array.isArray(existingData)) existingData = [];\r\n      \r\n      // Check if we're updating an existing user's face data\r\n      if (usernameExists) {\r\n        // Replace the data for the existing user\r\n        const updatedData = existingData.filter(item => item.username !== username);\r\n        updatedData.push(userData);\r\n        localStorage.setItem('face_descriptors', JSON.stringify(updatedData));\r\n      } else {\r\n        // Add new user data\r\n        existingData.push(userData);\r\n        localStorage.setItem('face_descriptors', JSON.stringify(existingData));\r\n      }\r\n      \r\n      // Update the storage location info display to be more accurate\r\n      setFaceDataInfo({\r\n        storageKey: 'face_descriptors',\r\n        location: 'Firebase Realtime Database and Browser Local Storage',\r\n        timestamp: new Date().toISOString(),\r\n        dataSize: capturedDescriptor.length * 4, // Float32 is 4 bytes per element\r\n        isUpdate: usernameExists,\r\n        userId\r\n      });\r\n      \r\n      stopCamera();\r\n      setRegistrationStep('complete');\r\n      // Show countdown for redirect\r\n      let countdown = 5;\r\n      const countdownInterval = setInterval(() => {\r\n        countdown--;\r\n        setProgress(countdown);\r\n        if (countdown <= 0) {\r\n          clearInterval(countdownInterval);\r\n          navigate('/login');\r\n        }\r\n      }, 1000);\r\n    } catch (err) {\r\n      setError('Failed to save face data: ' + err.message);\r\n      setRegistrationStep('camera'); // Go back to camera step on error\r\n    }\r\n  };\r\n\r\n  // Update the detector to normalize descriptor format and improve detection\r\n  const detectFace = async () => {\r\n    if (!videoRef.current || !canvasRef.current) return;\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n    setScanMessage('Analyzing face...');\r\n    try {\r\n      const detection = await faceapi\r\n        .detectSingleFace(video, new faceapi.TinyFaceDetectorOptions({ scoreThreshold: 0.5 }))\r\n        .withFaceLandmarks()\r\n        .withFaceDescriptor();\r\n      \r\n      if (detection) {\r\n        console.log(\"Face detected in video frame\");\r\n        // Draw the detection\r\n        const context = canvas.getContext('2d');\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n        \r\n        const dims = faceapi.matchDimensions(canvas, video, true);\r\n        const resizedResults = faceapi.resizeResults(detection, dims);\r\n        faceapi.draw.drawDetections(canvas, [resizedResults]);\r\n        faceapi.draw.drawFaceLandmarks(canvas, [resizedResults]);\r\n        \r\n        // Make sure the descriptor is a proper Float32Array\r\n        const normalizedDescriptor = new Float32Array(detection.descriptor);\r\n        \r\n        // Calculate face position metrics\r\n        const box = detection.detection.box;\r\n        const centerX = box.x + box.width / 2;\r\n        const centerY = box.y + box.height / 2;\r\n        const canvasCenterX = canvas.width / 2;\r\n        const canvasCenterY = canvas.height / 2;\r\n        \r\n        // Check if face is centered\r\n        const isCentered = \r\n          Math.abs(centerX - canvasCenterX) < canvas.width * 0.15 && \r\n          Math.abs(centerY - canvasCenterY) < canvas.height * 0.15;\r\n        setFaceCentered(isCentered);\r\n        \r\n        // Check face size/distance\r\n        const faceRatio = box.width / canvas.width;\r\n        if (faceRatio < 0.2) {\r\n          setFaceDistance('too_far');\r\n        } else if (faceRatio > 0.6) {\r\n          setFaceDistance('too_close');\r\n        } else {\r\n          setFaceDistance('good');\r\n        }\r\n        \r\n        setDetectionCount(prev => prev + 1);\r\n        \r\n        if (detectionCount >= TOTAL_DETECTIONS_NEEDED) {\r\n          // Set face detected and descriptor\r\n          setCapturedDescriptor(normalizedDescriptor);\r\n          setFaceDetected(true);\r\n          \r\n          // Check if this face already exists under a different username\r\n          if (!faceCheckDone && !checkingFace) {\r\n            setFaceCheckDone(true);\r\n            setCheckingFace(true);\r\n            console.log(\"Face detected, checking for existing registrations...\");\r\n            checkForExistingFace(normalizedDescriptor);\r\n          }\r\n          \r\n          setScanMessage('Face detected! Click Register to save.');\r\n          return; // Stop detection once we have enough samples\r\n        } else {\r\n          setScanMessage(`Hold still... ${Math.round((detectionCount/TOTAL_DETECTIONS_NEEDED) * 100)}%`);\r\n          // Continue detection as we need more samples\r\n          if (isCapturing) {\r\n            requestAnimationFrame(detectFace);\r\n          }\r\n        }\r\n      } else {\r\n        setScanMessage('No face detected. Please position your face in the frame.');\r\n        setFaceDetected(false);\r\n        \r\n        // Continue detection if we haven't found a face yet\r\n        if (isCapturing) {\r\n          requestAnimationFrame(detectFace);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setScanMessage('Error during detection: ' + err.message);\r\n      console.error('Face detection error:', err);\r\n      \r\n      // Continue detection despite error\r\n      if (isCapturing) {\r\n        requestAnimationFrame(detectFace);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Add function to check if face exists\r\n  const checkForExistingFace = async (descriptor) => {\r\n    try {\r\n      setScanMessage('Checking if face is already registered...');\r\n      \r\n      let faceExists = { exists: false, username: null };\r\n      \r\n      try {\r\n        console.log(\"Starting face similarity check with descriptor:\", descriptor);\r\n        // Check if this face already exists in the database\r\n        faceExists = await checkFaceExists(descriptor, username);\r\n        console.log(\"Face exists check result:\", faceExists);\r\n      } catch (checkErr) {\r\n        console.warn(\"Error during face existence check, continuing anyway:\", checkErr);\r\n      }\r\n      \r\n      if (faceExists.exists) {\r\n        console.log(`Face already exists under username: ${faceExists.username}`);\r\n        setFaceAlreadyExists(true);\r\n        setExistingFaceUsername(faceExists.username);\r\n        setFaceSimilarity(faceExists.distance);\r\n        setScanMessage(`Face already registered as: ${faceExists.username}`);\r\n      } else {\r\n        setFaceAlreadyExists(false);\r\n        setExistingFaceUsername(null);\r\n        setScanMessage('Face detected! Click Register to save.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error checking for existing face:', err);\r\n    } finally {\r\n      // Always ensure we're not stuck in checking state\r\n      setCheckingFace(false);\r\n    }\r\n  };\r\n\r\n  // Modify the useEffect to properly trigger detectFace on video play\r\n  useEffect(() => {\r\n    if (isCapturing && videoRef.current && videoStream) {\r\n      console.log(\"Video is ready, starting face detection\");\r\n      \r\n      // Reset state for the detection process\r\n      setDetectionCount(0);\r\n      setFaceDetected(false);\r\n      setFaceCheckDone(false);\r\n      setFaceAlreadyExists(false);\r\n      setExistingFaceUsername(null);\r\n      setScanMessage('Positioning face...');\r\n      \r\n      // Start the detection process\r\n      detectFace();\r\n      \r\n      videoRef.current.onplay = () => {\r\n        // The video has started/resumed playing\r\n        console.log(\"Video playback started\");\r\n      };\r\n    }\r\n    \r\n    // Cleanup function\r\n    return () => {\r\n      // No need for animation frame ID cleanup as it's handled inside detectFace\r\n    };\r\n  }, [isCapturing, videoStream]);\r\n\r\n  // Handle clicking next from username screen\r\n  const handleUsernameNext = () => {\r\n    if (username.trim()) {\r\n      if (usernameExists && !showUpdateConfirm) {\r\n        setShowUpdateConfirm(true);\r\n      } else {\r\n        setShowUpdateConfirm(false);\r\n        setRegistrationStep('camera');\r\n        startCamera();\r\n      }\r\n    } else {\r\n      setError('Please enter a username');\r\n    }\r\n  };\r\n\r\n  // Handle confirmation for updating existing user's face data\r\n  const handleUpdateConfirm = (confirmed) => {\r\n    setShowUpdateConfirm(false);\r\n    if (confirmed) {\r\n      setRegistrationStep('camera');\r\n      startCamera();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <div className=\"signup-card\">\r\n        <h1 className=\"signup-title\">Face Registration</h1>\r\n        {/* Progress indicator */}\r\n        <div className=\"registration-progress\">\r\n          <div className=\"progress-steps\">\r\n            <div className={`step ${registrationStep === 'username' ? 'active' : ''} ${registrationStep !== 'username' ? 'completed' : ''}`}>\r\n              1. Username\r\n            </div>\r\n            <div className={`step ${registrationStep === 'camera' ? 'active' : ''} ${registrationStep === 'complete' ? 'completed' : ''}`}>\r\n              2. Face Scan\r\n            </div>\r\n            <div className={`step ${registrationStep === 'complete' ? 'active' : ''}`}>\r\n              3. Complete\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        {registrationStep === 'username' && (\r\n          <div className=\"step-container\">\r\n            <div className=\"face-icon-container\">\r\n              <div className=\"face-icon\"></div>\r\n            </div>\r\n            <h3>Choose Your Username</h3>\r\n            <p className=\"step-description\">This username will be associated with your face data.</p>\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter your username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </div>\r\n            {usernameExists && !showUpdateConfirm && (\r\n              <div className=\"username-exists-warning\">\r\n                Username already exists! You can update the face data for this user.\r\n              </div>\r\n            )}\r\n            {showUpdateConfirm ? (\r\n              <div className=\"update-confirmation\">\r\n                <p>This username already exists. Do you want to update the face data for this user?</p>\r\n                <div className=\"confirmation-buttons\">\r\n                  <button \r\n                    className=\"confirm-btn\"\r\n                    onClick={() => handleUpdateConfirm(true)}\r\n                  >\r\n                    Yes, Update\r\n                  </button>\r\n                  <button \r\n                    className=\"cancel-btn\"\r\n                    onClick={() => handleUpdateConfirm(false)}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <button\r\n                className=\"next-button\"\r\n                onClick={handleUsernameNext}\r\n              >\r\n                {usernameExists ? 'Update Face Data' : 'Continue to Face Scan'}\r\n              </button>\r\n            )}\r\n          </div>\r\n        )}\r\n        {registrationStep === 'camera' && (\r\n          <div className=\"camera-section\">\r\n            <div className=\"face-position-guide\">\r\n              <h3>Face Positioning Guide</h3>\r\n              <ul className=\"face-guide-list\">\r\n                <li className={faceCentered ? 'success' : ''}>\r\n                  <span className=\"check-icon\">{faceCentered ? '✓' : '○'}</span>\r\n                  Center your face in the frame\r\n                </li>\r\n                <li className={faceDistance === 'good' ? 'success' : ''}>\r\n                  <span className=\"check-icon\">{faceDistance === 'good' ? '✓' : '○'}</span>\r\n                  Keep a good distance (not too close/far)\r\n                </li>\r\n                <li className={faceDetected ? 'success' : ''}>\r\n                  <span className=\"check-icon\">{faceDetected ? '✓' : '○'}</span>\r\n                  Look directly at the camera\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            {!isCapturing ? (\r\n              <button\r\n                className=\"start-button\"\r\n                onClick={startCamera}\r\n                disabled={loading || !isModelLoaded || !username.trim()}\r\n              >\r\n                {loading ? 'Loading...' : 'Start Camera'}\r\n              </button>\r\n            ) : (\r\n              <div className=\"camera-container\">\r\n                <video\r\n                  ref={videoRef}\r\n                  autoPlay\r\n                  playsInline\r\n                  muted\r\n                  style={{ display: 'block', width: '100%' }}\r\n                />\r\n                <canvas \r\n                  ref={canvasRef}\r\n                  style={{ \r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: '100%',\r\n                    height: '100%'\r\n                  }}\r\n                />\r\n                <div className=\"scan-message\">{scanMessage}</div>\r\n                {/* Enhanced progress bar */}\r\n                <div className=\"detection-progress-container\">\r\n                  <div \r\n                    className=\"detection-progress-bar\" \r\n                    style={{width: `${(detectionCount/TOTAL_DETECTIONS_NEEDED) * 100}%`}}\r\n                  ></div>\r\n                </div>\r\n                {/* Face position feedback */}\r\n                {!faceDetected && (\r\n                  <div className={`face-position-feedback ${faceDistance}`}>\r\n                    {!faceCentered && <div>Move your face to the center</div>}\r\n                    {faceDistance === 'too_close' && <div>Move further from camera</div>}\r\n                    {faceDistance === 'too_far' && <div>Move closer to camera</div>}\r\n                  </div>\r\n                )}\r\n                {/* Face already exists warning */}\r\n                {faceAlreadyExists && (\r\n                  <div className=\"face-exists-warning\">\r\n                    <div className=\"warning-icon\">⚠️</div>\r\n                    <div className=\"warning-text\">\r\n                      <h4>Face Already Registered</h4>\r\n                      <p>This face appears to be registered as <strong>{existingFaceUsername}</strong></p>\r\n                      <p className=\"similarity\">Similarity: {((1 - faceSimilarity) * 100).toFixed(1)}%</p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {/* Add face detection success overlay when face is detected */}\r\n                {faceDetected && !faceAlreadyExists && (\r\n                  <div className=\"face-detected-overlay\">\r\n                    <div className=\"face-detected-icon\"></div>\r\n                    <p>Face Successfully Detected!</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n            {isCapturing && (\r\n              <div className=\"camera-controls\">\r\n                <button className=\"cancel-button\" onClick={stopCamera}>\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className={`register-button ${faceDetected ? 'register-ready' : ''} ${faceAlreadyExists ? 'warning' : ''}`}\r\n                  onClick={saveFaceData}\r\n                  disabled={!faceDetected || checkingFace}\r\n                >\r\n                  {checkingFace ? (\r\n                    'Checking Face...'\r\n                  ) : faceDetected ? (\r\n                    <>\r\n                      {faceAlreadyExists ? 'Register Anyway' : 'Register Face'}\r\n                      <span className=\"register-icon\">{faceAlreadyExists ? '⚠️' : '✓'}</span>\r\n                    </>\r\n                  ) : (\r\n                    'Waiting for Face...'\r\n                  )}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        {registrationStep === 'processing' && (\r\n          <div className=\"processing-container\">\r\n            <div className=\"spinner\"></div>\r\n            <h3>Processing Face Data</h3>\r\n            <p>Please wait while we {usernameExists ? 'update' : 'save'} your face data...</p>\r\n            {/* Add a countdown timer to prevent endless processing */}\r\n            <p className=\"processing-timer\" ref={(el) => {\r\n              if (el && !el.hasTimer) {\r\n                el.hasTimer = true;\r\n                let timeLeft = 10;\r\n                const timer = setInterval(() => {\r\n                  timeLeft -= 1;\r\n                  if (el) el.innerText = `Timeout in ${timeLeft} seconds...`;\r\n                  if (timeLeft <= 0) {\r\n                    clearInterval(timer);\r\n                    // Force completion if taking too long\r\n                    setRegistrationStep('complete');\r\n                  }\r\n                }, 1000);\r\n              }\r\n            }}>Processing...</p>\r\n          </div>\r\n        )}\r\n        {registrationStep === 'complete' && (\r\n          <div className=\"completion-container\">\r\n            <div className=\"success-icon\">✓</div>\r\n            <h3>Registration Complete!</h3>\r\n            <p>Your face data has been successfully {usernameExists ? 'updated' : 'registered'}.</p>\r\n            {faceDataInfo && (\r\n              <div className=\"storage-info\">\r\n                <h4>Storage Information</h4>\r\n                <ul>\r\n                  <li>Storage Type: {faceDataInfo.location}</li>\r\n                  <li>Storage Key: {faceDataInfo.storageKey}</li>\r\n                  <li>Saved At: {new Date(faceDataInfo.timestamp).toLocaleString()}</li>\r\n                  <li>Type: {faceDataInfo.isUpdate ? 'Update' : 'New Registration'}</li>\r\n                </ul>\r\n                <div className=\"info-tip\">\r\n                  <p>Your face data is saved in your browser's local storage</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <p className=\"redirect-message\">\r\n              Redirecting to login in {progress} seconds...\r\n            </p>\r\n          </div>\r\n        )}\r\n        <div className=\"alternative-auth\">\r\n          <p>Already have an account?</p>\r\n          <Link to=\"/login\" className=\"login-link\">\r\n            Login with Face ID\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}