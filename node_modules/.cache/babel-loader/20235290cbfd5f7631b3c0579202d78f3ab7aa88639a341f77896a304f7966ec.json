{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movies\\\\Aniket\\\\test2\\\\test\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport * as faceapi from 'face-api.js';\nimport { Link } from 'react-router-dom';\nimport './Login.css';\nimport { loadFaceDescriptor } from './services/localFaceStorage';\nimport { getFaceFromFirebase } from './services/firebaseFaceService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [authStatus, setAuthStatus] = useState(null);\n  const [authMessage, setAuthMessage] = useState('');\n  // Face authentication state\n  const [isCapturing, setIsCapturing] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [scanStatus, setScanStatus] = useState('');\n  const [matchProgress, setMatchProgress] = useState(0);\n  const [faceDetected, setFaceDetected] = useState(false);\n  const [faceName, setFaceName] = useState('');\n  const [scanningComplete, setScanningComplete] = useState(false);\n  const [modelLoaded, setModelLoaded] = useState(false);\n\n  // Face position feedback\n  const [faceCentered, setFaceCentered] = useState(false);\n  const [faceDistance, setFaceDistance] = useState('unknown');\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const location = useLocation();\n\n  // Add minimum scan duration\n  const MIN_SCAN_TIME_MS = 5000; // 5 seconds minimum scan time\n  const [scanStartTime, setScanStartTime] = useState(null);\n  const [scanTimeRemaining, setScanTimeRemaining] = useState(0);\n\n  // Load models on component mount\n  useEffect(() => {\n    const loadModels = async () => {\n      try {\n        setScanStatus('Initializing face recognition...');\n        setLoading(true);\n        const MODEL_URL = 'https://justadudewhohacks.github.io/face-api.js/models';\n        await Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)]);\n        setModelLoaded(true);\n        setLoading(false);\n        setScanStatus('Face models loaded. Ready to start authentication.');\n      } catch (err) {\n        setError('Error loading face recognition models. Please refresh and try again.');\n        setLoading(false);\n      }\n    };\n    loadModels();\n\n    // Cleanup function\n    return () => {\n      var _videoRef$current;\n      if ((_videoRef$current = videoRef.current) !== null && _videoRef$current !== void 0 && _videoRef$current.srcObject) {\n        const stream = videoRef.current.srcObject;\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  // Get the redirect destination from session storage if available\n  useEffect(() => {\n    // Log the current session storage redirect value for debugging\n    console.log(\"Current redirect target:\", sessionStorage.getItem('afterLoginRedirect'));\n  }, []);\n  const startFaceAuthentication = async () => {\n    setIsCapturing(true);\n    setFaceDetected(false);\n    setIsAuthenticated(false);\n    setError('');\n    setScanningComplete(false);\n    setScanStartTime(Date.now()); // Record scan start time\n    setScanTimeRemaining(MIN_SCAN_TIME_MS / 1000);\n    try {\n      setScanStatus('Starting camera...');\n      startVideoStream();\n    } catch (err) {\n      setError('Error starting authentication: ' + err.message);\n      setLoading(false);\n    }\n  };\n  const startVideoStream = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: {\n            ideal: 640\n          },\n          height: {\n            ideal: 480\n          },\n          facingMode: \"user\"\n        }\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        videoRef.current.onloadedmetadata = () => {\n          videoRef.current.play().then(() => {\n            fetchStoredFaceData();\n          }).catch(err => {\n            setError('Error playing video: ' + err.message);\n            setLoading(false);\n          });\n        };\n      }\n    } catch (err) {\n      setError('Camera access failed: ' + err.message);\n      setLoading(false);\n    }\n  };\n  const fetchStoredFaceData = async () => {\n    setScanStatus('Looking for registered faces...');\n    try {\n      // Get stored face data from localStorage\n      const storedFaceData = JSON.parse(localStorage.getItem('face_descriptors') || '[]');\n      if (!storedFaceData || storedFaceData.length === 0) {\n        setScanStatus('No registered faces found. Please register first.');\n        setError('No faces are registered for recognition');\n        setLoading(false);\n        return;\n      }\n      console.log(`Found ${storedFaceData.length} registered faces`);\n      startFaceDetectionLoop(storedFaceData);\n    } catch (err) {\n      setError('Error fetching face data: ' + err.message);\n      setLoading(false);\n    }\n  };\n  const startFaceDetectionLoop = storedFaceData => {\n    if (!videoRef.current || !canvasRef.current) return;\n    let matchAttempts = 0;\n    const maxAttempts = 30;\n    let bestMatch = {\n      distance: 1,\n      user: null\n    };\n    const detectFace = async () => {\n      if (!videoRef.current || !canvasRef.current || matchAttempts >= maxAttempts) return;\n\n      // Calculate time elapsed and remaining\n      const elapsedTime = Date.now() - scanStartTime;\n      const remainingTime = Math.max(0, Math.ceil((MIN_SCAN_TIME_MS - elapsedTime) / 1000));\n      setScanTimeRemaining(remainingTime);\n      const scanComplete = elapsedTime >= MIN_SCAN_TIME_MS;\n      try {\n        // Update status message to include time remaining\n        if (!scanComplete) {\n          setScanStatus(`Scanning your face... ${remainingTime}s remaining`);\n        } else {\n          setScanStatus(`Matching face (${matchAttempts + 1}/${maxAttempts})...`);\n        }\n\n        // Update progress to reflect both time and matching progress\n        setMatchProgress(Math.min(100, elapsedTime / MIN_SCAN_TIME_MS * 50 + (scanComplete ? matchAttempts / maxAttempts * 50 : 0)));\n        const video = videoRef.current;\n        const canvas = canvasRef.current;\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        const detection = await faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor();\n        if (detection) {\n          // Draw detection on canvas\n          const context = canvas.getContext('2d');\n          context.clearRect(0, 0, canvas.width, canvas.height);\n          const dims = faceapi.matchDimensions(canvas, video, true);\n          const resizedResults = faceapi.resizeResults(detection, dims);\n\n          // Draw face detection box and landmarks\n          faceapi.draw.drawDetections(canvas, [resizedResults]);\n          faceapi.draw.drawFaceLandmarks(canvas, [resizedResults]);\n\n          // Calculate face position feedback\n          const box = detection.detection.box;\n          const centerX = box.x + box.width / 2;\n          const centerY = box.y + box.height / 2;\n          const canvasCenterX = canvas.width / 2;\n          const canvasCenterY = canvas.height / 2;\n\n          // Check if face is centered\n          const isCentered = Math.abs(centerX - canvasCenterX) < canvas.width * 0.15 && Math.abs(centerY - canvasCenterY) < canvas.height * 0.15;\n          setFaceCentered(isCentered);\n\n          // Check face size/distance\n          const faceRatio = box.width / canvas.width;\n          if (faceRatio < 0.2) {\n            setFaceDistance('too_far');\n          } else if (faceRatio > 0.6) {\n            setFaceDistance('too_close');\n          } else {\n            setFaceDistance('good');\n          }\n\n          // Only proceed with matching if minimum scan time has elapsed\n          if (scanComplete) {\n            setFaceDetected(true);\n\n            // Compare with stored face descriptors\n            for (const userData of storedFaceData) {\n              try {\n                let storedDescriptor = null;\n\n                // First try to get descriptor from Firebase if we have username\n                if (userData.username) {\n                  try {\n                    // Modified to use username as key\n                    storedDescriptor = await getFaceFromFirebase(userData.username);\n                    if (storedDescriptor) {\n                      console.log(`Retrieved face descriptor for ${userData.username} from Firebase`);\n                    }\n                  } catch (fbError) {\n                    console.warn(`Failed to get descriptor for ${userData.username} from Firebase:`, fbError);\n                  }\n                }\n\n                // If no descriptor from Firebase, try to get from localStorage\n                if (!storedDescriptor && userData.descriptor) {\n                  storedDescriptor = new Float32Array(userData.descriptor);\n                  console.log(`Using face descriptor from localStorage for ${userData.username || userData.userId}`);\n                }\n\n                // Skip this user if we couldn't get a descriptor\n                if (!storedDescriptor) continue;\n\n                // Calculate the similarity distance between detected face and stored face\n                const distance = faceapi.euclideanDistance(detection.descriptor, storedDescriptor);\n                console.log(`Distance for ${userData.username || userData.userId}: ${distance.toFixed(4)}`);\n\n                // Keep track of the best match so far\n                if (distance < bestMatch.distance) {\n                  bestMatch = {\n                    distance,\n                    user: userData\n                  };\n                }\n\n                // If we have a very close match, stop early\n                const MATCH_THRESHOLD = 0.45; // Lower is stricter matching\n                if (distance < MATCH_THRESHOLD) {\n                  setIsAuthenticated(true);\n                  setFaceName(userData.username || 'User');\n                  setScanStatus(`Welcome back, ${userData.username || 'User'}!`);\n                  setLoading(false);\n                  setScanningComplete(true);\n\n                  // Sign in the user\n                  sessionStorage.setItem('authenticated', 'true');\n                  sessionStorage.setItem('currentUser', JSON.stringify(userData));\n\n                  // Redirect after a short delay\n                  setTimeout(() => {\n                    stopVideoStream();\n                    navigate('/');\n                  }, 2000);\n                  return;\n                }\n              } catch (compareError) {\n                console.error('Error comparing face descriptors:', compareError);\n              }\n            }\n            matchAttempts++;\n            if (matchAttempts >= maxAttempts) {\n              // After all attempts, if we have a reasonable match, use it\n              const FALLBACK_THRESHOLD = 0.6; // More lenient threshold for fallback matching\n              if (bestMatch.distance < FALLBACK_THRESHOLD) {\n                setIsAuthenticated(true);\n                setFaceName(bestMatch.user.username || 'User');\n                setScanStatus(`Welcome back, ${bestMatch.user.username || 'User'}!`);\n\n                // Sign in the user\n                sessionStorage.setItem('authenticated', 'true');\n                sessionStorage.setItem('currentUser', JSON.stringify(bestMatch.user));\n                setTimeout(() => {\n                  stopVideoStream();\n                  navigate('/');\n                }, 2000);\n              } else {\n                setScanStatus('Face not recognized. Please try again or register a new account.');\n                setError('No matching face found');\n              }\n              setLoading(false);\n              setScanningComplete(true);\n            } else {\n              requestAnimationFrame(detectFace);\n            }\n          } else {\n            // Continue scanning until minimum time requirement met\n            requestAnimationFrame(detectFace);\n          }\n        } else {\n          setScanStatus(`No face detected. Please position your face in the frame. ${remainingTime}s remaining`);\n          setFaceDetected(false);\n\n          // Only count as an attempt if minimum scan time has passed\n          if (scanComplete) {\n            matchAttempts++;\n            if (matchAttempts >= maxAttempts) {\n              setScanStatus('Face not detected. Please try again.');\n              setLoading(false);\n              setScanningComplete(true);\n            } else {\n              requestAnimationFrame(detectFace);\n            }\n          } else {\n            requestAnimationFrame(detectFace);\n          }\n        }\n      } catch (err) {\n        setError('Error during face detection: ' + err.message);\n        setLoading(false);\n      }\n    };\n    detectFace();\n  };\n  const stopVideoStream = () => {\n    var _videoRef$current2;\n    if ((_videoRef$current2 = videoRef.current) !== null && _videoRef$current2 !== void 0 && _videoRef$current2.srcObject) {\n      const stream = videoRef.current.srcObject;\n      stream.getTracks().forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n    setIsCapturing(false);\n  };\n  const restartFaceAuth = () => {\n    if (canvasRef.current) {\n      const context = canvasRef.current.getContext('2d');\n      context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    }\n    stopVideoStream();\n    setMatchProgress(0);\n    setFaceDetected(false);\n    setIsAuthenticated(false);\n    setScanningComplete(false);\n    setError('');\n    startFaceAuthentication();\n  };\n\n  // Simplified face authentication success handler\n  const handleSuccessfulFaceLogin = matchedUser => {\n    handleSuccessfulLogin(matchedUser);\n  };\n\n  // For development: handle face detection matching\n  // This is a simplified version that always succeeds with demo data\n  const handleFaceDetectionComplete = faceDetected => {\n    if (faceDetected) {\n      // Always succeed with demo user data\n      const demoUser = {\n        username: \"DemoUser\",\n        userId: \"user_demo\"\n      };\n      handleSuccessfulFaceLogin(demoUser);\n    }\n  };\n\n  // Add this function that will be called after successful authentication\n  const handleSuccessfulLogin = userData => {\n    // Store user authentication data\n    sessionStorage.setItem('username', (userData === null || userData === void 0 ? void 0 : userData.username) || 'User');\n    sessionStorage.setItem('authenticated', 'true');\n\n    // Show success message\n    setAuthStatus('success');\n    setAuthMessage('Authentication successful! Redirecting...');\n\n    // Check for redirect destination in sessionStorage\n    const redirectTo = sessionStorage.getItem('afterLoginRedirect');\n\n    // Log the destination for debugging\n    console.log(`Authentication successful. Redirect target: ${redirectTo || 'default'}`);\n\n    // Redirect after a short delay - IMPORTANT change here to ensure proper redirect\n    setTimeout(() => {\n      if (redirectTo) {\n        // Remove leading slash if present\n        const destination = redirectTo.startsWith('/') ? redirectTo.substring(1) : redirectTo;\n        console.log(`Redirecting to: /${destination}`);\n        navigate(`/${destination}`);\n      } else {\n        // Default is dashboard or home - but in this case we want chatbot\n        console.log('No redirect target found, defaulting to chatbot');\n        navigate('/chatbot');\n      }\n\n      // Clean up the sessionStorage redirect target\n      sessionStorage.removeItem('afterLoginRedirect');\n    }, 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"login-title\",\n        children: \"Face ID Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"face-auth-container\",\n        children: !isCapturing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-start-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"face-icon-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"face-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"login-instruction\",\n            children: \"Use your face to securely log in to your account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"start-face-auth-btn\",\n            onClick: startFaceAuthentication,\n            disabled: loading || !modelLoaded,\n            children: loading ? 'Initializing...' : 'Start Face Scan'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loader-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 27\n          }, this), modelLoaded && !loading && !isCapturing && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"system-status\",\n            children: \"System ready. Click button to begin.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [!scanningComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"face-position-guide\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Face Positioning Guide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"face-guide-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: faceCentered ? 'success' : '',\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"check-icon\",\n                  children: faceCentered ? '✓' : '○'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 23\n                }, this), \"Center your face in the frame\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: faceDistance === 'good' ? 'success' : '',\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"check-icon\",\n                  children: faceDistance === 'good' ? '✓' : '○'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 23\n                }, this), \"Keep a good distance from camera\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: faceDetected ? 'success' : '',\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"check-icon\",\n                  children: faceDetected ? '✓' : '○'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 23\n                }, this), \"Look directly at the camera\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              autoPlay: true,\n              muted: true,\n              playsInline: true,\n              className: \"face-video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasRef,\n              className: \"face-canvas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this), isCapturing && !scanningComplete && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"scan-message\",\n                children: scanStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detection-progress-container\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detection-progress-bar\",\n                  style: {\n                    width: `${matchProgress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 21\n              }, this), scanTimeRemaining > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"scan-timer\",\n                style: {\n                  position: 'absolute',\n                  top: '10px',\n                  right: '10px',\n                  background: 'rgba(0,0,0,0.7)',\n                  color: 'white',\n                  padding: '5px 10px',\n                  borderRadius: '4px',\n                  fontSize: '14px',\n                  fontWeight: 'bold'\n                },\n                children: [scanTimeRemaining, \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 23\n              }, this), !faceDetected && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `face-position-feedback ${faceDistance}`,\n                children: [!faceCentered && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Move your face to the center\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 43\n                }, this), faceDistance === 'too_close' && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Move further from camera\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 58\n                }, this), faceDistance === 'too_far' && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Move closer to camera\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 56\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true), isAuthenticated && scanningComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-success-overlay\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"success-checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Authentication Successful!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Welcome back, \", faceName, \"!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"redirect-message\",\n                children: \"Redirecting to dashboard...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 19\n            }, this), !isAuthenticated && scanningComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-failed-overlay\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"failed-icon\",\n                children: \"\\u2715\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Authentication Failed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Face not recognized\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this), scanningComplete && !isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"retry-button\",\n              onClick: restartFaceAuth,\n              children: \"Try Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-button\",\n              onClick: () => {\n                stopVideoStream();\n                setIsCapturing(false);\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alternative-auth\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Don't have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          className: \"register-link\",\n          children: \"Register with Face ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 423,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"/YCCgM8YpbDMUgkY5T/KRx+yc0A=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","useLocation","faceapi","Link","loadFaceDescriptor","getFaceFromFirebase","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","navigate","authStatus","setAuthStatus","authMessage","setAuthMessage","isCapturing","setIsCapturing","loading","setLoading","error","setError","isAuthenticated","setIsAuthenticated","scanStatus","setScanStatus","matchProgress","setMatchProgress","faceDetected","setFaceDetected","faceName","setFaceName","scanningComplete","setScanningComplete","modelLoaded","setModelLoaded","faceCentered","setFaceCentered","faceDistance","setFaceDistance","videoRef","canvasRef","location","MIN_SCAN_TIME_MS","scanStartTime","setScanStartTime","scanTimeRemaining","setScanTimeRemaining","loadModels","MODEL_URL","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","err","_videoRef$current","current","srcObject","stream","getTracks","forEach","track","stop","console","log","sessionStorage","getItem","startFaceAuthentication","Date","now","startVideoStream","message","navigator","mediaDevices","getUserMedia","video","width","ideal","height","facingMode","onloadedmetadata","play","then","fetchStoredFaceData","catch","storedFaceData","JSON","parse","localStorage","length","startFaceDetectionLoop","matchAttempts","maxAttempts","bestMatch","distance","user","detectFace","elapsedTime","remainingTime","Math","max","ceil","scanComplete","min","canvas","videoWidth","videoHeight","detection","detectSingleFace","TinyFaceDetectorOptions","withFaceLandmarks","withFaceDescriptor","context","getContext","clearRect","dims","matchDimensions","resizedResults","resizeResults","draw","drawDetections","drawFaceLandmarks","box","centerX","x","centerY","y","canvasCenterX","canvasCenterY","isCentered","abs","faceRatio","userData","storedDescriptor","username","fbError","warn","descriptor","Float32Array","userId","euclideanDistance","toFixed","MATCH_THRESHOLD","setItem","stringify","setTimeout","stopVideoStream","compareError","FALLBACK_THRESHOLD","requestAnimationFrame","_videoRef$current2","restartFaceAuth","handleSuccessfulFaceLogin","matchedUser","handleSuccessfulLogin","handleFaceDetectionComplete","demoUser","redirectTo","destination","startsWith","substring","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","ref","autoPlay","muted","playsInline","style","position","top","right","background","color","padding","borderRadius","fontSize","fontWeight","to","_c","$RefreshReg$"],"sources":["D:/Movies/Aniket/test2/test/src/Login.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport * as faceapi from 'face-api.js';\r\nimport { Link } from 'react-router-dom';\r\nimport './Login.css';\r\nimport { loadFaceDescriptor } from './services/localFaceStorage';\r\nimport { getFaceFromFirebase } from './services/firebaseFaceService';\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [authStatus, setAuthStatus] = useState(null);\r\n  const [authMessage, setAuthMessage] = useState('');\r\n  // Face authentication state\r\n  const [isCapturing, setIsCapturing] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [scanStatus, setScanStatus] = useState('');\r\n  const [matchProgress, setMatchProgress] = useState(0);\r\n  const [faceDetected, setFaceDetected] = useState(false);\r\n  const [faceName, setFaceName] = useState('');\r\n  const [scanningComplete, setScanningComplete] = useState(false);\r\n  const [modelLoaded, setModelLoaded] = useState(false);\r\n\r\n  // Face position feedback\r\n  const [faceCentered, setFaceCentered] = useState(false);\r\n  const [faceDistance, setFaceDistance] = useState('unknown');\r\n  \r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const location = useLocation();\r\n\r\n  // Add minimum scan duration\r\n  const MIN_SCAN_TIME_MS = 5000; // 5 seconds minimum scan time\r\n  const [scanStartTime, setScanStartTime] = useState(null);\r\n  const [scanTimeRemaining, setScanTimeRemaining] = useState(0);\r\n\r\n  // Load models on component mount\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      try {\r\n        setScanStatus('Initializing face recognition...');\r\n        setLoading(true);\r\n        \r\n        const MODEL_URL = 'https://justadudewhohacks.github.io/face-api.js/models';\r\n        await Promise.all([\r\n          faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)\r\n        ]);\r\n        \r\n        setModelLoaded(true);\r\n        setLoading(false);\r\n        setScanStatus('Face models loaded. Ready to start authentication.');\r\n      } catch (err) {\r\n        setError('Error loading face recognition models. Please refresh and try again.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadModels();\r\n    \r\n    // Cleanup function\r\n    return () => {\r\n      if (videoRef.current?.srcObject) {\r\n        const stream = videoRef.current.srcObject;\r\n        stream.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Get the redirect destination from session storage if available\r\n  useEffect(() => {\r\n    // Log the current session storage redirect value for debugging\r\n    console.log(\"Current redirect target:\", sessionStorage.getItem('afterLoginRedirect'));\r\n  }, []);\r\n\r\n  const startFaceAuthentication = async () => {\r\n    setIsCapturing(true);\r\n    setFaceDetected(false);\r\n    setIsAuthenticated(false);\r\n    setError('');\r\n    setScanningComplete(false);\r\n    setScanStartTime(Date.now()); // Record scan start time\r\n    setScanTimeRemaining(MIN_SCAN_TIME_MS / 1000);\r\n    \r\n    try {\r\n      setScanStatus('Starting camera...');\r\n      startVideoStream();\r\n    } catch (err) {\r\n      setError('Error starting authentication: ' + err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const startVideoStream = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ \r\n        video: {\r\n          width: { ideal: 640 },\r\n          height: { ideal: 480 },\r\n          facingMode: \"user\"\r\n        }\r\n      });\r\n      \r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.onloadedmetadata = () => {\r\n          videoRef.current.play()\r\n            .then(() => {\r\n              fetchStoredFaceData();\r\n            })\r\n            .catch(err => {\r\n              setError('Error playing video: ' + err.message);\r\n              setLoading(false);\r\n            });\r\n        };\r\n      }\r\n    } catch (err) {\r\n      setError('Camera access failed: ' + err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchStoredFaceData = async () => {\r\n    setScanStatus('Looking for registered faces...');\r\n    \r\n    try {\r\n      // Get stored face data from localStorage\r\n      const storedFaceData = JSON.parse(localStorage.getItem('face_descriptors') || '[]');\r\n      \r\n      if (!storedFaceData || storedFaceData.length === 0) {\r\n        setScanStatus('No registered faces found. Please register first.');\r\n        setError('No faces are registered for recognition');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      console.log(`Found ${storedFaceData.length} registered faces`);\r\n      startFaceDetectionLoop(storedFaceData);\r\n    } catch (err) {\r\n      setError('Error fetching face data: ' + err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const startFaceDetectionLoop = (storedFaceData) => {\r\n    if (!videoRef.current || !canvasRef.current) return;\r\n    \r\n    let matchAttempts = 0;\r\n    const maxAttempts = 30;\r\n    let bestMatch = { distance: 1, user: null };\r\n    \r\n    const detectFace = async () => {\r\n      if (!videoRef.current || !canvasRef.current || matchAttempts >= maxAttempts) return;\r\n      \r\n      // Calculate time elapsed and remaining\r\n      const elapsedTime = Date.now() - scanStartTime;\r\n      const remainingTime = Math.max(0, Math.ceil((MIN_SCAN_TIME_MS - elapsedTime) / 1000));\r\n      setScanTimeRemaining(remainingTime);\r\n      const scanComplete = elapsedTime >= MIN_SCAN_TIME_MS;\r\n      \r\n      try {\r\n        // Update status message to include time remaining\r\n        if (!scanComplete) {\r\n          setScanStatus(`Scanning your face... ${remainingTime}s remaining`);\r\n        } else {\r\n          setScanStatus(`Matching face (${matchAttempts + 1}/${maxAttempts})...`);\r\n        }\r\n        \r\n        // Update progress to reflect both time and matching progress\r\n        setMatchProgress(Math.min(100, ((elapsedTime / MIN_SCAN_TIME_MS) * 50) + \r\n            (scanComplete ? (matchAttempts / maxAttempts) * 50 : 0)));\r\n        \r\n        const video = videoRef.current;\r\n        const canvas = canvasRef.current;\r\n        \r\n        canvas.width = video.videoWidth;\r\n        canvas.height = video.videoHeight;\r\n        \r\n        const detection = await faceapi\r\n          .detectSingleFace(video, new faceapi.TinyFaceDetectorOptions())\r\n          .withFaceLandmarks()\r\n          .withFaceDescriptor();\r\n\r\n        if (detection) {\r\n          // Draw detection on canvas\r\n          const context = canvas.getContext('2d');\r\n          context.clearRect(0, 0, canvas.width, canvas.height);\r\n          \r\n          const dims = faceapi.matchDimensions(canvas, video, true);\r\n          const resizedResults = faceapi.resizeResults(detection, dims);\r\n          \r\n          // Draw face detection box and landmarks\r\n          faceapi.draw.drawDetections(canvas, [resizedResults]);\r\n          faceapi.draw.drawFaceLandmarks(canvas, [resizedResults]);\r\n          \r\n          // Calculate face position feedback\r\n          const box = detection.detection.box;\r\n          const centerX = box.x + box.width / 2;\r\n          const centerY = box.y + box.height / 2;\r\n          const canvasCenterX = canvas.width / 2;\r\n          const canvasCenterY = canvas.height / 2;\r\n          \r\n          // Check if face is centered\r\n          const isCentered = \r\n            Math.abs(centerX - canvasCenterX) < canvas.width * 0.15 && \r\n            Math.abs(centerY - canvasCenterY) < canvas.height * 0.15;\r\n          setFaceCentered(isCentered);\r\n          \r\n          // Check face size/distance\r\n          const faceRatio = box.width / canvas.width;\r\n          if (faceRatio < 0.2) {\r\n            setFaceDistance('too_far');\r\n          } else if (faceRatio > 0.6) {\r\n            setFaceDistance('too_close');\r\n          } else {\r\n            setFaceDistance('good');\r\n          }\r\n          \r\n          // Only proceed with matching if minimum scan time has elapsed\r\n          if (scanComplete) {\r\n            setFaceDetected(true);\r\n            \r\n            // Compare with stored face descriptors\r\n            for (const userData of storedFaceData) {\r\n              try {\r\n                let storedDescriptor = null;\r\n                \r\n                // First try to get descriptor from Firebase if we have username\r\n                if (userData.username) {\r\n                  try {\r\n                    // Modified to use username as key\r\n                    storedDescriptor = await getFaceFromFirebase(userData.username);\r\n                    if (storedDescriptor) {\r\n                      console.log(`Retrieved face descriptor for ${userData.username} from Firebase`);\r\n                    }\r\n                  } catch (fbError) {\r\n                    console.warn(`Failed to get descriptor for ${userData.username} from Firebase:`, fbError);\r\n                  }\r\n                }\r\n                \r\n                // If no descriptor from Firebase, try to get from localStorage\r\n                if (!storedDescriptor && userData.descriptor) {\r\n                  storedDescriptor = new Float32Array(userData.descriptor);\r\n                  console.log(`Using face descriptor from localStorage for ${userData.username || userData.userId}`);\r\n                }\r\n                \r\n                // Skip this user if we couldn't get a descriptor\r\n                if (!storedDescriptor) continue;\r\n                \r\n                // Calculate the similarity distance between detected face and stored face\r\n                const distance = faceapi.euclideanDistance(detection.descriptor, storedDescriptor);\r\n                \r\n                console.log(`Distance for ${userData.username || userData.userId}: ${distance.toFixed(4)}`);\r\n                \r\n                // Keep track of the best match so far\r\n                if (distance < bestMatch.distance) {\r\n                  bestMatch = { distance, user: userData };\r\n                }\r\n                \r\n                // If we have a very close match, stop early\r\n                const MATCH_THRESHOLD = 0.45; // Lower is stricter matching\r\n                if (distance < MATCH_THRESHOLD) {\r\n                  setIsAuthenticated(true);\r\n                  setFaceName(userData.username || 'User');\r\n                  setScanStatus(`Welcome back, ${userData.username || 'User'}!`);\r\n                  setLoading(false);\r\n                  setScanningComplete(true);\r\n                  \r\n                  // Sign in the user\r\n                  sessionStorage.setItem('authenticated', 'true');\r\n                  sessionStorage.setItem('currentUser', JSON.stringify(userData));\r\n                  \r\n                  // Redirect after a short delay\r\n                  setTimeout(() => {\r\n                    stopVideoStream();\r\n                    navigate('/');\r\n                  }, 2000);\r\n                  return;\r\n                }\r\n              } catch (compareError) {\r\n                console.error('Error comparing face descriptors:', compareError);\r\n              }\r\n            }\r\n            \r\n            matchAttempts++;\r\n            \r\n            if (matchAttempts >= maxAttempts) {\r\n              // After all attempts, if we have a reasonable match, use it\r\n              const FALLBACK_THRESHOLD = 0.6; // More lenient threshold for fallback matching\r\n              if (bestMatch.distance < FALLBACK_THRESHOLD) {\r\n                setIsAuthenticated(true);\r\n                setFaceName(bestMatch.user.username || 'User');\r\n                setScanStatus(`Welcome back, ${bestMatch.user.username || 'User'}!`);\r\n                \r\n                // Sign in the user\r\n                sessionStorage.setItem('authenticated', 'true');\r\n                sessionStorage.setItem('currentUser', JSON.stringify(bestMatch.user));\r\n                \r\n                setTimeout(() => {\r\n                  stopVideoStream();\r\n                  navigate('/');\r\n                }, 2000);\r\n              } else {\r\n                setScanStatus('Face not recognized. Please try again or register a new account.');\r\n                setError('No matching face found');\r\n              }\r\n              setLoading(false);\r\n              setScanningComplete(true);\r\n            } else {\r\n              requestAnimationFrame(detectFace);\r\n            }\r\n          } else {\r\n            // Continue scanning until minimum time requirement met\r\n            requestAnimationFrame(detectFace);\r\n          }\r\n        } else {\r\n          setScanStatus(`No face detected. Please position your face in the frame. ${remainingTime}s remaining`);\r\n          setFaceDetected(false);\r\n          \r\n          // Only count as an attempt if minimum scan time has passed\r\n          if (scanComplete) {\r\n            matchAttempts++;\r\n            \r\n            if (matchAttempts >= maxAttempts) {\r\n              setScanStatus('Face not detected. Please try again.');\r\n              setLoading(false);\r\n              setScanningComplete(true);\r\n            } else {\r\n              requestAnimationFrame(detectFace);\r\n            }\r\n          } else {\r\n            requestAnimationFrame(detectFace);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        setError('Error during face detection: ' + err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    detectFace();\r\n  };\r\n\r\n  const stopVideoStream = () => {\r\n    if (videoRef.current?.srcObject) {\r\n      const stream = videoRef.current.srcObject;\r\n      stream.getTracks().forEach(track => track.stop());\r\n      videoRef.current.srcObject = null;\r\n    }\r\n    setIsCapturing(false);\r\n  };\r\n\r\n  const restartFaceAuth = () => {\r\n    if (canvasRef.current) {\r\n      const context = canvasRef.current.getContext('2d');\r\n      context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    }\r\n    stopVideoStream();\r\n    setMatchProgress(0);\r\n    setFaceDetected(false);\r\n    setIsAuthenticated(false);\r\n    setScanningComplete(false);\r\n    setError('');\r\n    startFaceAuthentication();\r\n  };\r\n\r\n  // Simplified face authentication success handler\r\n  const handleSuccessfulFaceLogin = (matchedUser) => {\r\n    handleSuccessfulLogin(matchedUser);\r\n  };\r\n  \r\n  // For development: handle face detection matching\r\n  // This is a simplified version that always succeeds with demo data\r\n  const handleFaceDetectionComplete = (faceDetected) => {\r\n    if (faceDetected) {\r\n      // Always succeed with demo user data\r\n      const demoUser = {\r\n        username: \"DemoUser\",\r\n        userId: \"user_demo\"\r\n      };\r\n      \r\n      handleSuccessfulFaceLogin(demoUser);\r\n    }\r\n  };\r\n\r\n  // Add this function that will be called after successful authentication\r\n  const handleSuccessfulLogin = (userData) => {\r\n    // Store user authentication data\r\n    sessionStorage.setItem('username', userData?.username || 'User');\r\n    sessionStorage.setItem('authenticated', 'true');\r\n    \r\n    // Show success message\r\n    setAuthStatus('success');\r\n    setAuthMessage('Authentication successful! Redirecting...');\r\n    \r\n    // Check for redirect destination in sessionStorage\r\n    const redirectTo = sessionStorage.getItem('afterLoginRedirect');\r\n    \r\n    // Log the destination for debugging\r\n    console.log(`Authentication successful. Redirect target: ${redirectTo || 'default'}`);\r\n    \r\n    // Redirect after a short delay - IMPORTANT change here to ensure proper redirect\r\n    setTimeout(() => {\r\n      if (redirectTo) {\r\n        // Remove leading slash if present\r\n        const destination = redirectTo.startsWith('/') ? redirectTo.substring(1) : redirectTo;\r\n        console.log(`Redirecting to: /${destination}`);\r\n        navigate(`/${destination}`);\r\n      } else {\r\n        // Default is dashboard or home - but in this case we want chatbot\r\n        console.log('No redirect target found, defaulting to chatbot');\r\n        navigate('/chatbot');\r\n      }\r\n      \r\n      // Clean up the sessionStorage redirect target\r\n      sessionStorage.removeItem('afterLoginRedirect');\r\n    }, 1500);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-card\">\r\n        <h1 className=\"login-title\">Face ID Login</h1>\r\n        \r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        \r\n        <div className=\"face-auth-container\">\r\n          {!isCapturing ? (\r\n            <div className=\"login-start-section\">\r\n              <div className=\"face-icon-container\">\r\n                <div className=\"face-icon\"></div>\r\n              </div>\r\n              \r\n              <p className=\"login-instruction\">\r\n                Use your face to securely log in to your account\r\n              </p>\r\n              \r\n              <button \r\n                className=\"start-face-auth-btn\"\r\n                onClick={startFaceAuthentication}\r\n                disabled={loading || !modelLoaded}\r\n              >\r\n                {loading ? 'Initializing...' : 'Start Face Scan'}\r\n              </button>\r\n              \r\n              {loading && <div className=\"loader-circle\"></div>}\r\n              \r\n              {modelLoaded && !loading && !isCapturing && (\r\n                <p className=\"system-status\">System ready. Click button to begin.</p>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {!scanningComplete && (\r\n                <div className=\"face-position-guide\">\r\n                  <h3>Face Positioning Guide</h3>\r\n                  <ul className=\"face-guide-list\">\r\n                    <li className={faceCentered ? 'success' : ''}>\r\n                      <span className=\"check-icon\">{faceCentered ? '✓' : '○'}</span>\r\n                      Center your face in the frame\r\n                    </li>\r\n                    <li className={faceDistance === 'good' ? 'success' : ''}>\r\n                      <span className=\"check-icon\">{faceDistance === 'good' ? '✓' : '○'}</span>\r\n                      Keep a good distance from camera\r\n                    </li>\r\n                    <li className={faceDetected ? 'success' : ''}>\r\n                      <span className=\"check-icon\">{faceDetected ? '✓' : '○'}</span>\r\n                      Look directly at the camera\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              \r\n              <div className=\"video-container\">\r\n                <video\r\n                  ref={videoRef}\r\n                  autoPlay\r\n                  muted\r\n                  playsInline\r\n                  className=\"face-video\"\r\n                />\r\n                <canvas\r\n                  ref={canvasRef}\r\n                  className=\"face-canvas\"\r\n                />\r\n                \r\n                {isCapturing && !scanningComplete && (\r\n                  <>\r\n                    <div className=\"scan-message\">{scanStatus}</div>\r\n                    {/* Progress bar */}\r\n                    <div className=\"detection-progress-container\">\r\n                      <div \r\n                        className=\"detection-progress-bar\" \r\n                        style={{width: `${matchProgress}%`}}\r\n                      ></div>\r\n                    </div>\r\n                    \r\n                    {/* Add visible timer during scan */}\r\n                    {scanTimeRemaining > 0 && (\r\n                      <div className=\"scan-timer\" style={{\r\n                        position: 'absolute',\r\n                        top: '10px',\r\n                        right: '10px',\r\n                        background: 'rgba(0,0,0,0.7)',\r\n                        color: 'white',\r\n                        padding: '5px 10px',\r\n                        borderRadius: '4px',\r\n                        fontSize: '14px',\r\n                        fontWeight: 'bold'\r\n                      }}>\r\n                        {scanTimeRemaining}s\r\n                      </div>\r\n                    )}\r\n                    \r\n                    {/* Face position feedback */}\r\n                    {!faceDetected && (\r\n                      <div className={`face-position-feedback ${faceDistance}`}>\r\n                        {!faceCentered && <div>Move your face to the center</div>}\r\n                        {faceDistance === 'too_close' && <div>Move further from camera</div>}\r\n                        {faceDistance === 'too_far' && <div>Move closer to camera</div>}\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n                \r\n                {isAuthenticated && scanningComplete && (\r\n                  <div className=\"auth-success-overlay\">\r\n                    <div className=\"success-checkmark\"></div>\r\n                    <h3>Authentication Successful!</h3>\r\n                    <p>Welcome back, {faceName}!</p>\r\n                    <p className=\"redirect-message\">Redirecting to dashboard...</p>\r\n                  </div>\r\n                )}\r\n                \r\n                {!isAuthenticated && scanningComplete && (\r\n                  <div className=\"auth-failed-overlay\">\r\n                    <div className=\"failed-icon\">✕</div>\r\n                    <h3>Authentication Failed</h3>\r\n                    <p>Face not recognized</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              {scanningComplete && !isAuthenticated && (\r\n                <div className=\"auth-action-buttons\">\r\n                  <button \r\n                    className=\"retry-button\"\r\n                    onClick={restartFaceAuth}\r\n                  >\r\n                    Try Again\r\n                  </button>\r\n                  <button\r\n                    className=\"cancel-button\"\r\n                    onClick={() => {\r\n                      stopVideoStream();\r\n                      setIsCapturing(false);\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"alternative-auth\">\r\n          <p>Don't have an account?</p>\r\n          <Link to=\"/signup\" className=\"register-link\">\r\n            Register with Face ID\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}