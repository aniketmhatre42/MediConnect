{"ast":null,"code":"// Simplify Firebase initialization to prevent listener issues\n\nimport { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getDatabase } from 'firebase/database';\nimport { getStorage } from 'firebase/storage';\n\n// Your Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDVMRkS8_vRfgb41wOlxzieECZdgr1IRRk\",\n  authDomain: \"mediconnect-f6040.firebaseapp.com\",\n  projectId: \"mediconnect-f6040\",\n  storageBucket: \"mediconnect-f6040.firebasestorage.app\",\n  messagingSenderId: \"967220854368\",\n  appId: \"1:967220854368:web:6b7a4438b20aba8caccd05\",\n  measurementId: \"G-85XEWLEHXS\",\n  databaseURL: \"https://mediconnect-f6040-default-rtdb.firebaseio.com\"\n};\n\n// Initialize Firebase services - with safety checks\nlet app;\nlet auth;\nlet db;\nlet rtdb;\nlet storage;\ntry {\n  // Only initialize Firebase if not already initialized\n  if (!app) {\n    app = initializeApp(firebaseConfig);\n    console.log(\"Firebase initialized successfully\");\n  }\n  auth = getAuth(app);\n  db = getFirestore(app);\n  rtdb = getDatabase(app);\n  storage = getStorage(app);\n} catch (error) {\n  console.error(\"Error initializing Firebase:\", error);\n}\nexport { app, auth, db, rtdb, storage };","map":{"version":3,"names":["initializeApp","getAuth","getFirestore","getDatabase","getStorage","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","app","auth","db","rtdb","storage","console","log","error"],"sources":["D:/Movies/Aniket/test2/test/src/firebase/config.js"],"sourcesContent":["// Simplify Firebase initialization to prevent listener issues\r\n\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getDatabase } from 'firebase/database';\r\nimport { getStorage } from 'firebase/storage';\r\n\r\n// Your Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDVMRkS8_vRfgb41wOlxzieECZdgr1IRRk\",\r\n  authDomain: \"mediconnect-f6040.firebaseapp.com\",\r\n  projectId: \"mediconnect-f6040\",\r\n  storageBucket: \"mediconnect-f6040.firebasestorage.app\",\r\n  messagingSenderId: \"967220854368\",\r\n  appId: \"1:967220854368:web:6b7a4438b20aba8caccd05\",\r\n  measurementId: \"G-85XEWLEHXS\",\r\n  databaseURL: \"https://mediconnect-f6040-default-rtdb.firebaseio.com\"\r\n};\r\n\r\n// Initialize Firebase services - with safety checks\r\nlet app;\r\nlet auth;\r\nlet db;\r\nlet rtdb;\r\nlet storage;\r\n\r\ntry {\r\n  // Only initialize Firebase if not already initialized\r\n  if (!app) {\r\n    app = initializeApp(firebaseConfig);\r\n    console.log(\"Firebase initialized successfully\");\r\n  }\r\n  \r\n  auth = getAuth(app);\r\n  db = getFirestore(app);\r\n  rtdb = getDatabase(app);\r\n  storage = getStorage(app);\r\n  \r\n} catch (error) {\r\n  console.error(\"Error initializing Firebase:\", error);\r\n}\r\n\r\nexport { app, auth, db, rtdb, storage };"],"mappings":"AAAA;;AAEA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,UAAU,QAAQ,kBAAkB;;AAE7C;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,mCAAmC;EAC/CC,SAAS,EAAE,mBAAmB;EAC9BC,aAAa,EAAE,uCAAuC;EACtDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE,cAAc;EAC7BC,WAAW,EAAE;AACf,CAAC;;AAED;AACA,IAAIC,GAAG;AACP,IAAIC,IAAI;AACR,IAAIC,EAAE;AACN,IAAIC,IAAI;AACR,IAAIC,OAAO;AAEX,IAAI;EACF;EACA,IAAI,CAACJ,GAAG,EAAE;IACRA,GAAG,GAAGd,aAAa,CAACK,cAAc,CAAC;IACnCc,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EAClD;EAEAL,IAAI,GAAGd,OAAO,CAACa,GAAG,CAAC;EACnBE,EAAE,GAAGd,YAAY,CAACY,GAAG,CAAC;EACtBG,IAAI,GAAGd,WAAW,CAACW,GAAG,CAAC;EACvBI,OAAO,GAAGd,UAAU,CAACU,GAAG,CAAC;AAE3B,CAAC,CAAC,OAAOO,KAAK,EAAE;EACdF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;AACtD;AAEA,SAASP,GAAG,EAAEC,IAAI,EAAEC,EAAE,EAAEC,IAAI,EAAEC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}